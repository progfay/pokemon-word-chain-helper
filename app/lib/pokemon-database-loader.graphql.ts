export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  jsonb: { input: any; output: any; }
};

/** Boolean expression to compare columns of type "Boolean". All fields are combined with logical 'AND'. */
export type Boolean_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['Boolean']['input']>;
  _gt?: InputMaybe<Scalars['Boolean']['input']>;
  _gte?: InputMaybe<Scalars['Boolean']['input']>;
  _in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['Boolean']['input']>;
  _lte?: InputMaybe<Scalars['Boolean']['input']>;
  _neq?: InputMaybe<Scalars['Boolean']['input']>;
  _nin?: InputMaybe<Array<Scalars['Boolean']['input']>>;
};

/** Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'. */
export type Int_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['Int']['input']>;
  _gt?: InputMaybe<Scalars['Int']['input']>;
  _gte?: InputMaybe<Scalars['Int']['input']>;
  _in?: InputMaybe<Array<Scalars['Int']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['Int']['input']>;
  _lte?: InputMaybe<Scalars['Int']['input']>;
  _neq?: InputMaybe<Scalars['Int']['input']>;
  _nin?: InputMaybe<Array<Scalars['Int']['input']>>;
};

/** Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'. */
export type String_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['String']['input']>;
  _gt?: InputMaybe<Scalars['String']['input']>;
  _gte?: InputMaybe<Scalars['String']['input']>;
  /** does the column match the given case-insensitive pattern */
  _ilike?: InputMaybe<Scalars['String']['input']>;
  _in?: InputMaybe<Array<Scalars['String']['input']>>;
  /** does the column match the given POSIX regular expression, case insensitive */
  _iregex?: InputMaybe<Scalars['String']['input']>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  /** does the column match the given pattern */
  _like?: InputMaybe<Scalars['String']['input']>;
  _lt?: InputMaybe<Scalars['String']['input']>;
  _lte?: InputMaybe<Scalars['String']['input']>;
  _neq?: InputMaybe<Scalars['String']['input']>;
  /** does the column NOT match the given case-insensitive pattern */
  _nilike?: InputMaybe<Scalars['String']['input']>;
  _nin?: InputMaybe<Array<Scalars['String']['input']>>;
  /** does the column NOT match the given POSIX regular expression, case insensitive */
  _niregex?: InputMaybe<Scalars['String']['input']>;
  /** does the column NOT match the given pattern */
  _nlike?: InputMaybe<Scalars['String']['input']>;
  /** does the column NOT match the given POSIX regular expression, case sensitive */
  _nregex?: InputMaybe<Scalars['String']['input']>;
  /** does the column NOT match the given SQL regular expression */
  _nsimilar?: InputMaybe<Scalars['String']['input']>;
  /** does the column match the given POSIX regular expression, case sensitive */
  _regex?: InputMaybe<Scalars['String']['input']>;
  /** does the column match the given SQL regular expression */
  _similar?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "pokemon_v2_ability" */
export type Ability = {
  __typename?: 'ability';
  /** An array relationship */
  abilitychanges: Array<Abilitychange>;
  /** An aggregate relationship */
  abilitychanges_aggregate: Abilitychange_Aggregate;
  /** An array relationship */
  abilityeffecttexts: Array<Abilityeffecttext>;
  /** An aggregate relationship */
  abilityeffecttexts_aggregate: Abilityeffecttext_Aggregate;
  /** An array relationship */
  abilityflavortexts: Array<Abilityflavortext>;
  /** An aggregate relationship */
  abilityflavortexts_aggregate: Abilityflavortext_Aggregate;
  /** An array relationship */
  abilitynames: Array<Abilityname>;
  /** An aggregate relationship */
  abilitynames_aggregate: Abilityname_Aggregate;
  /** An object relationship */
  generation?: Maybe<Generation>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  is_main_series: Scalars['Boolean']['output'];
  name: Scalars['String']['output'];
  /** An array relationship */
  pokemonabilities: Array<Pokemonability>;
  /** An aggregate relationship */
  pokemonabilities_aggregate: Pokemonability_Aggregate;
  /** An array relationship */
  pokemonabilitypasts: Array<Pokemonabilitypast>;
  /** An aggregate relationship */
  pokemonabilitypasts_aggregate: Pokemonabilitypast_Aggregate;
};


/** columns and relationships of "pokemon_v2_ability" */
export type AbilityAbilitychangesArgs = {
  distinct_on?: InputMaybe<Array<Abilitychange_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Abilitychange_Order_By>>;
  where?: InputMaybe<Abilitychange_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_ability" */
export type AbilityAbilitychanges_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Abilitychange_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Abilitychange_Order_By>>;
  where?: InputMaybe<Abilitychange_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_ability" */
export type AbilityAbilityeffecttextsArgs = {
  distinct_on?: InputMaybe<Array<Abilityeffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Abilityeffecttext_Order_By>>;
  where?: InputMaybe<Abilityeffecttext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_ability" */
export type AbilityAbilityeffecttexts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Abilityeffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Abilityeffecttext_Order_By>>;
  where?: InputMaybe<Abilityeffecttext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_ability" */
export type AbilityAbilityflavortextsArgs = {
  distinct_on?: InputMaybe<Array<Abilityflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Abilityflavortext_Order_By>>;
  where?: InputMaybe<Abilityflavortext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_ability" */
export type AbilityAbilityflavortexts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Abilityflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Abilityflavortext_Order_By>>;
  where?: InputMaybe<Abilityflavortext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_ability" */
export type AbilityAbilitynamesArgs = {
  distinct_on?: InputMaybe<Array<Abilityname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Abilityname_Order_By>>;
  where?: InputMaybe<Abilityname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_ability" */
export type AbilityAbilitynames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Abilityname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Abilityname_Order_By>>;
  where?: InputMaybe<Abilityname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_ability" */
export type AbilityPokemonabilitiesArgs = {
  distinct_on?: InputMaybe<Array<Pokemonability_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonability_Order_By>>;
  where?: InputMaybe<Pokemonability_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_ability" */
export type AbilityPokemonabilities_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonability_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonability_Order_By>>;
  where?: InputMaybe<Pokemonability_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_ability" */
export type AbilityPokemonabilitypastsArgs = {
  distinct_on?: InputMaybe<Array<Pokemonabilitypast_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonabilitypast_Order_By>>;
  where?: InputMaybe<Pokemonabilitypast_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_ability" */
export type AbilityPokemonabilitypasts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonabilitypast_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonabilitypast_Order_By>>;
  where?: InputMaybe<Pokemonabilitypast_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_ability" */
export type Ability_Aggregate = {
  __typename?: 'ability_aggregate';
  aggregate?: Maybe<Ability_Aggregate_Fields>;
  nodes: Array<Ability>;
};

export type Ability_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Ability_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Ability_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Ability_Aggregate_Bool_Exp_Count>;
};

export type Ability_Aggregate_Bool_Exp_Bool_And = {
  arguments: Ability_Select_Column_Ability_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Ability_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Ability_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Ability_Select_Column_Ability_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Ability_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Ability_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Ability_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Ability_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_ability" */
export type Ability_Aggregate_Fields = {
  __typename?: 'ability_aggregate_fields';
  avg?: Maybe<Ability_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Ability_Max_Fields>;
  min?: Maybe<Ability_Min_Fields>;
  stddev?: Maybe<Ability_Stddev_Fields>;
  stddev_pop?: Maybe<Ability_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Ability_Stddev_Samp_Fields>;
  sum?: Maybe<Ability_Sum_Fields>;
  var_pop?: Maybe<Ability_Var_Pop_Fields>;
  var_samp?: Maybe<Ability_Var_Samp_Fields>;
  variance?: Maybe<Ability_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_ability" */
export type Ability_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Ability_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_ability" */
export type Ability_Aggregate_Order_By = {
  avg?: InputMaybe<Ability_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Ability_Max_Order_By>;
  min?: InputMaybe<Ability_Min_Order_By>;
  stddev?: InputMaybe<Ability_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Ability_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Ability_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Ability_Sum_Order_By>;
  var_pop?: InputMaybe<Ability_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Ability_Var_Samp_Order_By>;
  variance?: InputMaybe<Ability_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Ability_Avg_Fields = {
  __typename?: 'ability_avg_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_ability" */
export type Ability_Avg_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_ability". All fields are combined with a logical 'AND'. */
export type Ability_Bool_Exp = {
  _and?: InputMaybe<Array<Ability_Bool_Exp>>;
  _not?: InputMaybe<Ability_Bool_Exp>;
  _or?: InputMaybe<Array<Ability_Bool_Exp>>;
  abilitychanges?: InputMaybe<Abilitychange_Bool_Exp>;
  abilitychanges_aggregate?: InputMaybe<Abilitychange_Aggregate_Bool_Exp>;
  abilityeffecttexts?: InputMaybe<Abilityeffecttext_Bool_Exp>;
  abilityeffecttexts_aggregate?: InputMaybe<Abilityeffecttext_Aggregate_Bool_Exp>;
  abilityflavortexts?: InputMaybe<Abilityflavortext_Bool_Exp>;
  abilityflavortexts_aggregate?: InputMaybe<Abilityflavortext_Aggregate_Bool_Exp>;
  abilitynames?: InputMaybe<Abilityname_Bool_Exp>;
  abilitynames_aggregate?: InputMaybe<Abilityname_Aggregate_Bool_Exp>;
  generation?: InputMaybe<Generation_Bool_Exp>;
  generation_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  is_main_series?: InputMaybe<Boolean_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  pokemonabilities?: InputMaybe<Pokemonability_Bool_Exp>;
  pokemonabilities_aggregate?: InputMaybe<Pokemonability_Aggregate_Bool_Exp>;
  pokemonabilitypasts?: InputMaybe<Pokemonabilitypast_Bool_Exp>;
  pokemonabilitypasts_aggregate?: InputMaybe<Pokemonabilitypast_Aggregate_Bool_Exp>;
};

/** aggregate max on columns */
export type Ability_Max_Fields = {
  __typename?: 'ability_max_fields';
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "pokemon_v2_ability" */
export type Ability_Max_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Ability_Min_Fields = {
  __typename?: 'ability_min_fields';
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "pokemon_v2_ability" */
export type Ability_Min_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_ability". */
export type Ability_Order_By = {
  abilitychanges_aggregate?: InputMaybe<Abilitychange_Aggregate_Order_By>;
  abilityeffecttexts_aggregate?: InputMaybe<Abilityeffecttext_Aggregate_Order_By>;
  abilityflavortexts_aggregate?: InputMaybe<Abilityflavortext_Aggregate_Order_By>;
  abilitynames_aggregate?: InputMaybe<Abilityname_Aggregate_Order_By>;
  generation?: InputMaybe<Generation_Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  is_main_series?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  pokemonabilities_aggregate?: InputMaybe<Pokemonability_Aggregate_Order_By>;
  pokemonabilitypasts_aggregate?: InputMaybe<Pokemonabilitypast_Aggregate_Order_By>;
};

/** select columns of table "pokemon_v2_ability" */
export enum Ability_Select_Column {
  /** column name */
  GenerationId = 'generation_id',
  /** column name */
  Id = 'id',
  /** column name */
  IsMainSeries = 'is_main_series',
  /** column name */
  Name = 'name'
}

/** select "ability_aggregate_bool_exp_bool_and_arguments_columns" columns of table "pokemon_v2_ability" */
export enum Ability_Select_Column_Ability_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  IsMainSeries = 'is_main_series'
}

/** select "ability_aggregate_bool_exp_bool_or_arguments_columns" columns of table "pokemon_v2_ability" */
export enum Ability_Select_Column_Ability_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  IsMainSeries = 'is_main_series'
}

/** aggregate stddev on columns */
export type Ability_Stddev_Fields = {
  __typename?: 'ability_stddev_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_ability" */
export type Ability_Stddev_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Ability_Stddev_Pop_Fields = {
  __typename?: 'ability_stddev_pop_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_ability" */
export type Ability_Stddev_Pop_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Ability_Stddev_Samp_Fields = {
  __typename?: 'ability_stddev_samp_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_ability" */
export type Ability_Stddev_Samp_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Ability_Sum_Fields = {
  __typename?: 'ability_sum_fields';
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_ability" */
export type Ability_Sum_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Ability_Var_Pop_Fields = {
  __typename?: 'ability_var_pop_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_ability" */
export type Ability_Var_Pop_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Ability_Var_Samp_Fields = {
  __typename?: 'ability_var_samp_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_ability" */
export type Ability_Var_Samp_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Ability_Variance_Fields = {
  __typename?: 'ability_variance_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_ability" */
export type Ability_Variance_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_abilitychange" */
export type Abilitychange = {
  __typename?: 'abilitychange';
  /** An object relationship */
  ability?: Maybe<Ability>;
  ability_id?: Maybe<Scalars['Int']['output']>;
  /** An array relationship */
  abilitychangeeffecttexts: Array<Abilitychangeeffecttext>;
  /** An aggregate relationship */
  abilitychangeeffecttexts_aggregate: Abilitychangeeffecttext_Aggregate;
  id: Scalars['Int']['output'];
  version_group_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  versiongroup?: Maybe<Versiongroup>;
};


/** columns and relationships of "pokemon_v2_abilitychange" */
export type AbilitychangeAbilitychangeeffecttextsArgs = {
  distinct_on?: InputMaybe<Array<Abilitychangeeffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Abilitychangeeffecttext_Order_By>>;
  where?: InputMaybe<Abilitychangeeffecttext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_abilitychange" */
export type AbilitychangeAbilitychangeeffecttexts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Abilitychangeeffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Abilitychangeeffecttext_Order_By>>;
  where?: InputMaybe<Abilitychangeeffecttext_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_abilitychange" */
export type Abilitychange_Aggregate = {
  __typename?: 'abilitychange_aggregate';
  aggregate?: Maybe<Abilitychange_Aggregate_Fields>;
  nodes: Array<Abilitychange>;
};

export type Abilitychange_Aggregate_Bool_Exp = {
  count?: InputMaybe<Abilitychange_Aggregate_Bool_Exp_Count>;
};

export type Abilitychange_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Abilitychange_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Abilitychange_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_abilitychange" */
export type Abilitychange_Aggregate_Fields = {
  __typename?: 'abilitychange_aggregate_fields';
  avg?: Maybe<Abilitychange_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Abilitychange_Max_Fields>;
  min?: Maybe<Abilitychange_Min_Fields>;
  stddev?: Maybe<Abilitychange_Stddev_Fields>;
  stddev_pop?: Maybe<Abilitychange_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Abilitychange_Stddev_Samp_Fields>;
  sum?: Maybe<Abilitychange_Sum_Fields>;
  var_pop?: Maybe<Abilitychange_Var_Pop_Fields>;
  var_samp?: Maybe<Abilitychange_Var_Samp_Fields>;
  variance?: Maybe<Abilitychange_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_abilitychange" */
export type Abilitychange_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Abilitychange_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_abilitychange" */
export type Abilitychange_Aggregate_Order_By = {
  avg?: InputMaybe<Abilitychange_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Abilitychange_Max_Order_By>;
  min?: InputMaybe<Abilitychange_Min_Order_By>;
  stddev?: InputMaybe<Abilitychange_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Abilitychange_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Abilitychange_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Abilitychange_Sum_Order_By>;
  var_pop?: InputMaybe<Abilitychange_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Abilitychange_Var_Samp_Order_By>;
  variance?: InputMaybe<Abilitychange_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Abilitychange_Avg_Fields = {
  __typename?: 'abilitychange_avg_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_abilitychange" */
export type Abilitychange_Avg_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_abilitychange". All fields are combined with a logical 'AND'. */
export type Abilitychange_Bool_Exp = {
  _and?: InputMaybe<Array<Abilitychange_Bool_Exp>>;
  _not?: InputMaybe<Abilitychange_Bool_Exp>;
  _or?: InputMaybe<Array<Abilitychange_Bool_Exp>>;
  ability?: InputMaybe<Ability_Bool_Exp>;
  ability_id?: InputMaybe<Int_Comparison_Exp>;
  abilitychangeeffecttexts?: InputMaybe<Abilitychangeeffecttext_Bool_Exp>;
  abilitychangeeffecttexts_aggregate?: InputMaybe<Abilitychangeeffecttext_Aggregate_Bool_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  version_group_id?: InputMaybe<Int_Comparison_Exp>;
  versiongroup?: InputMaybe<Versiongroup_Bool_Exp>;
};

/** aggregate max on columns */
export type Abilitychange_Max_Fields = {
  __typename?: 'abilitychange_max_fields';
  ability_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_abilitychange" */
export type Abilitychange_Max_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Abilitychange_Min_Fields = {
  __typename?: 'abilitychange_min_fields';
  ability_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_abilitychange" */
export type Abilitychange_Min_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_abilitychange". */
export type Abilitychange_Order_By = {
  ability?: InputMaybe<Ability_Order_By>;
  ability_id?: InputMaybe<Order_By>;
  abilitychangeeffecttexts_aggregate?: InputMaybe<Abilitychangeeffecttext_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
  versiongroup?: InputMaybe<Versiongroup_Order_By>;
};

/** select columns of table "pokemon_v2_abilitychange" */
export enum Abilitychange_Select_Column {
  /** column name */
  AbilityId = 'ability_id',
  /** column name */
  Id = 'id',
  /** column name */
  VersionGroupId = 'version_group_id'
}

/** aggregate stddev on columns */
export type Abilitychange_Stddev_Fields = {
  __typename?: 'abilitychange_stddev_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_abilitychange" */
export type Abilitychange_Stddev_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Abilitychange_Stddev_Pop_Fields = {
  __typename?: 'abilitychange_stddev_pop_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_abilitychange" */
export type Abilitychange_Stddev_Pop_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Abilitychange_Stddev_Samp_Fields = {
  __typename?: 'abilitychange_stddev_samp_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_abilitychange" */
export type Abilitychange_Stddev_Samp_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Abilitychange_Sum_Fields = {
  __typename?: 'abilitychange_sum_fields';
  ability_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_abilitychange" */
export type Abilitychange_Sum_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Abilitychange_Var_Pop_Fields = {
  __typename?: 'abilitychange_var_pop_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_abilitychange" */
export type Abilitychange_Var_Pop_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Abilitychange_Var_Samp_Fields = {
  __typename?: 'abilitychange_var_samp_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_abilitychange" */
export type Abilitychange_Var_Samp_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Abilitychange_Variance_Fields = {
  __typename?: 'abilitychange_variance_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_abilitychange" */
export type Abilitychange_Variance_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_abilitychangeeffecttext" */
export type Abilitychangeeffecttext = {
  __typename?: 'abilitychangeeffecttext';
  ability_change_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  abilitychange?: Maybe<Abilitychange>;
  effect: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_abilitychangeeffecttext" */
export type Abilitychangeeffecttext_Aggregate = {
  __typename?: 'abilitychangeeffecttext_aggregate';
  aggregate?: Maybe<Abilitychangeeffecttext_Aggregate_Fields>;
  nodes: Array<Abilitychangeeffecttext>;
};

export type Abilitychangeeffecttext_Aggregate_Bool_Exp = {
  count?: InputMaybe<Abilitychangeeffecttext_Aggregate_Bool_Exp_Count>;
};

export type Abilitychangeeffecttext_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Abilitychangeeffecttext_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Abilitychangeeffecttext_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_abilitychangeeffecttext" */
export type Abilitychangeeffecttext_Aggregate_Fields = {
  __typename?: 'abilitychangeeffecttext_aggregate_fields';
  avg?: Maybe<Abilitychangeeffecttext_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Abilitychangeeffecttext_Max_Fields>;
  min?: Maybe<Abilitychangeeffecttext_Min_Fields>;
  stddev?: Maybe<Abilitychangeeffecttext_Stddev_Fields>;
  stddev_pop?: Maybe<Abilitychangeeffecttext_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Abilitychangeeffecttext_Stddev_Samp_Fields>;
  sum?: Maybe<Abilitychangeeffecttext_Sum_Fields>;
  var_pop?: Maybe<Abilitychangeeffecttext_Var_Pop_Fields>;
  var_samp?: Maybe<Abilitychangeeffecttext_Var_Samp_Fields>;
  variance?: Maybe<Abilitychangeeffecttext_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_abilitychangeeffecttext" */
export type Abilitychangeeffecttext_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Abilitychangeeffecttext_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_abilitychangeeffecttext" */
export type Abilitychangeeffecttext_Aggregate_Order_By = {
  avg?: InputMaybe<Abilitychangeeffecttext_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Abilitychangeeffecttext_Max_Order_By>;
  min?: InputMaybe<Abilitychangeeffecttext_Min_Order_By>;
  stddev?: InputMaybe<Abilitychangeeffecttext_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Abilitychangeeffecttext_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Abilitychangeeffecttext_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Abilitychangeeffecttext_Sum_Order_By>;
  var_pop?: InputMaybe<Abilitychangeeffecttext_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Abilitychangeeffecttext_Var_Samp_Order_By>;
  variance?: InputMaybe<Abilitychangeeffecttext_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Abilitychangeeffecttext_Avg_Fields = {
  __typename?: 'abilitychangeeffecttext_avg_fields';
  ability_change_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_abilitychangeeffecttext" */
export type Abilitychangeeffecttext_Avg_Order_By = {
  ability_change_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_abilitychangeeffecttext". All fields are combined with a logical 'AND'. */
export type Abilitychangeeffecttext_Bool_Exp = {
  _and?: InputMaybe<Array<Abilitychangeeffecttext_Bool_Exp>>;
  _not?: InputMaybe<Abilitychangeeffecttext_Bool_Exp>;
  _or?: InputMaybe<Array<Abilitychangeeffecttext_Bool_Exp>>;
  ability_change_id?: InputMaybe<Int_Comparison_Exp>;
  abilitychange?: InputMaybe<Abilitychange_Bool_Exp>;
  effect?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Abilitychangeeffecttext_Max_Fields = {
  __typename?: 'abilitychangeeffecttext_max_fields';
  ability_change_id?: Maybe<Scalars['Int']['output']>;
  effect?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_abilitychangeeffecttext" */
export type Abilitychangeeffecttext_Max_Order_By = {
  ability_change_id?: InputMaybe<Order_By>;
  effect?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Abilitychangeeffecttext_Min_Fields = {
  __typename?: 'abilitychangeeffecttext_min_fields';
  ability_change_id?: Maybe<Scalars['Int']['output']>;
  effect?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_abilitychangeeffecttext" */
export type Abilitychangeeffecttext_Min_Order_By = {
  ability_change_id?: InputMaybe<Order_By>;
  effect?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_abilitychangeeffecttext". */
export type Abilitychangeeffecttext_Order_By = {
  ability_change_id?: InputMaybe<Order_By>;
  abilitychange?: InputMaybe<Abilitychange_Order_By>;
  effect?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_abilitychangeeffecttext" */
export enum Abilitychangeeffecttext_Select_Column {
  /** column name */
  AbilityChangeId = 'ability_change_id',
  /** column name */
  Effect = 'effect',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id'
}

/** aggregate stddev on columns */
export type Abilitychangeeffecttext_Stddev_Fields = {
  __typename?: 'abilitychangeeffecttext_stddev_fields';
  ability_change_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_abilitychangeeffecttext" */
export type Abilitychangeeffecttext_Stddev_Order_By = {
  ability_change_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Abilitychangeeffecttext_Stddev_Pop_Fields = {
  __typename?: 'abilitychangeeffecttext_stddev_pop_fields';
  ability_change_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_abilitychangeeffecttext" */
export type Abilitychangeeffecttext_Stddev_Pop_Order_By = {
  ability_change_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Abilitychangeeffecttext_Stddev_Samp_Fields = {
  __typename?: 'abilitychangeeffecttext_stddev_samp_fields';
  ability_change_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_abilitychangeeffecttext" */
export type Abilitychangeeffecttext_Stddev_Samp_Order_By = {
  ability_change_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Abilitychangeeffecttext_Sum_Fields = {
  __typename?: 'abilitychangeeffecttext_sum_fields';
  ability_change_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_abilitychangeeffecttext" */
export type Abilitychangeeffecttext_Sum_Order_By = {
  ability_change_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Abilitychangeeffecttext_Var_Pop_Fields = {
  __typename?: 'abilitychangeeffecttext_var_pop_fields';
  ability_change_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_abilitychangeeffecttext" */
export type Abilitychangeeffecttext_Var_Pop_Order_By = {
  ability_change_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Abilitychangeeffecttext_Var_Samp_Fields = {
  __typename?: 'abilitychangeeffecttext_var_samp_fields';
  ability_change_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_abilitychangeeffecttext" */
export type Abilitychangeeffecttext_Var_Samp_Order_By = {
  ability_change_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Abilitychangeeffecttext_Variance_Fields = {
  __typename?: 'abilitychangeeffecttext_variance_fields';
  ability_change_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_abilitychangeeffecttext" */
export type Abilitychangeeffecttext_Variance_Order_By = {
  ability_change_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_abilityeffecttext" */
export type Abilityeffecttext = {
  __typename?: 'abilityeffecttext';
  /** An object relationship */
  ability?: Maybe<Ability>;
  ability_id?: Maybe<Scalars['Int']['output']>;
  effect: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  short_effect: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_abilityeffecttext" */
export type Abilityeffecttext_Aggregate = {
  __typename?: 'abilityeffecttext_aggregate';
  aggregate?: Maybe<Abilityeffecttext_Aggregate_Fields>;
  nodes: Array<Abilityeffecttext>;
};

export type Abilityeffecttext_Aggregate_Bool_Exp = {
  count?: InputMaybe<Abilityeffecttext_Aggregate_Bool_Exp_Count>;
};

export type Abilityeffecttext_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Abilityeffecttext_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Abilityeffecttext_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_abilityeffecttext" */
export type Abilityeffecttext_Aggregate_Fields = {
  __typename?: 'abilityeffecttext_aggregate_fields';
  avg?: Maybe<Abilityeffecttext_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Abilityeffecttext_Max_Fields>;
  min?: Maybe<Abilityeffecttext_Min_Fields>;
  stddev?: Maybe<Abilityeffecttext_Stddev_Fields>;
  stddev_pop?: Maybe<Abilityeffecttext_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Abilityeffecttext_Stddev_Samp_Fields>;
  sum?: Maybe<Abilityeffecttext_Sum_Fields>;
  var_pop?: Maybe<Abilityeffecttext_Var_Pop_Fields>;
  var_samp?: Maybe<Abilityeffecttext_Var_Samp_Fields>;
  variance?: Maybe<Abilityeffecttext_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_abilityeffecttext" */
export type Abilityeffecttext_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Abilityeffecttext_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_abilityeffecttext" */
export type Abilityeffecttext_Aggregate_Order_By = {
  avg?: InputMaybe<Abilityeffecttext_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Abilityeffecttext_Max_Order_By>;
  min?: InputMaybe<Abilityeffecttext_Min_Order_By>;
  stddev?: InputMaybe<Abilityeffecttext_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Abilityeffecttext_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Abilityeffecttext_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Abilityeffecttext_Sum_Order_By>;
  var_pop?: InputMaybe<Abilityeffecttext_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Abilityeffecttext_Var_Samp_Order_By>;
  variance?: InputMaybe<Abilityeffecttext_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Abilityeffecttext_Avg_Fields = {
  __typename?: 'abilityeffecttext_avg_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_abilityeffecttext" */
export type Abilityeffecttext_Avg_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_abilityeffecttext". All fields are combined with a logical 'AND'. */
export type Abilityeffecttext_Bool_Exp = {
  _and?: InputMaybe<Array<Abilityeffecttext_Bool_Exp>>;
  _not?: InputMaybe<Abilityeffecttext_Bool_Exp>;
  _or?: InputMaybe<Array<Abilityeffecttext_Bool_Exp>>;
  ability?: InputMaybe<Ability_Bool_Exp>;
  ability_id?: InputMaybe<Int_Comparison_Exp>;
  effect?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  short_effect?: InputMaybe<String_Comparison_Exp>;
};

/** aggregate max on columns */
export type Abilityeffecttext_Max_Fields = {
  __typename?: 'abilityeffecttext_max_fields';
  ability_id?: Maybe<Scalars['Int']['output']>;
  effect?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  short_effect?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "pokemon_v2_abilityeffecttext" */
export type Abilityeffecttext_Max_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  effect?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  short_effect?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Abilityeffecttext_Min_Fields = {
  __typename?: 'abilityeffecttext_min_fields';
  ability_id?: Maybe<Scalars['Int']['output']>;
  effect?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  short_effect?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "pokemon_v2_abilityeffecttext" */
export type Abilityeffecttext_Min_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  effect?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  short_effect?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_abilityeffecttext". */
export type Abilityeffecttext_Order_By = {
  ability?: InputMaybe<Ability_Order_By>;
  ability_id?: InputMaybe<Order_By>;
  effect?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  short_effect?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_abilityeffecttext" */
export enum Abilityeffecttext_Select_Column {
  /** column name */
  AbilityId = 'ability_id',
  /** column name */
  Effect = 'effect',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  ShortEffect = 'short_effect'
}

/** aggregate stddev on columns */
export type Abilityeffecttext_Stddev_Fields = {
  __typename?: 'abilityeffecttext_stddev_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_abilityeffecttext" */
export type Abilityeffecttext_Stddev_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Abilityeffecttext_Stddev_Pop_Fields = {
  __typename?: 'abilityeffecttext_stddev_pop_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_abilityeffecttext" */
export type Abilityeffecttext_Stddev_Pop_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Abilityeffecttext_Stddev_Samp_Fields = {
  __typename?: 'abilityeffecttext_stddev_samp_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_abilityeffecttext" */
export type Abilityeffecttext_Stddev_Samp_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Abilityeffecttext_Sum_Fields = {
  __typename?: 'abilityeffecttext_sum_fields';
  ability_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_abilityeffecttext" */
export type Abilityeffecttext_Sum_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Abilityeffecttext_Var_Pop_Fields = {
  __typename?: 'abilityeffecttext_var_pop_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_abilityeffecttext" */
export type Abilityeffecttext_Var_Pop_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Abilityeffecttext_Var_Samp_Fields = {
  __typename?: 'abilityeffecttext_var_samp_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_abilityeffecttext" */
export type Abilityeffecttext_Var_Samp_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Abilityeffecttext_Variance_Fields = {
  __typename?: 'abilityeffecttext_variance_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_abilityeffecttext" */
export type Abilityeffecttext_Variance_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_abilityflavortext" */
export type Abilityflavortext = {
  __typename?: 'abilityflavortext';
  /** An object relationship */
  ability?: Maybe<Ability>;
  ability_id?: Maybe<Scalars['Int']['output']>;
  flavor_text: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  versiongroup?: Maybe<Versiongroup>;
};

/** aggregated selection of "pokemon_v2_abilityflavortext" */
export type Abilityflavortext_Aggregate = {
  __typename?: 'abilityflavortext_aggregate';
  aggregate?: Maybe<Abilityflavortext_Aggregate_Fields>;
  nodes: Array<Abilityflavortext>;
};

export type Abilityflavortext_Aggregate_Bool_Exp = {
  count?: InputMaybe<Abilityflavortext_Aggregate_Bool_Exp_Count>;
};

export type Abilityflavortext_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Abilityflavortext_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Abilityflavortext_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_abilityflavortext" */
export type Abilityflavortext_Aggregate_Fields = {
  __typename?: 'abilityflavortext_aggregate_fields';
  avg?: Maybe<Abilityflavortext_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Abilityflavortext_Max_Fields>;
  min?: Maybe<Abilityflavortext_Min_Fields>;
  stddev?: Maybe<Abilityflavortext_Stddev_Fields>;
  stddev_pop?: Maybe<Abilityflavortext_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Abilityflavortext_Stddev_Samp_Fields>;
  sum?: Maybe<Abilityflavortext_Sum_Fields>;
  var_pop?: Maybe<Abilityflavortext_Var_Pop_Fields>;
  var_samp?: Maybe<Abilityflavortext_Var_Samp_Fields>;
  variance?: Maybe<Abilityflavortext_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_abilityflavortext" */
export type Abilityflavortext_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Abilityflavortext_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_abilityflavortext" */
export type Abilityflavortext_Aggregate_Order_By = {
  avg?: InputMaybe<Abilityflavortext_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Abilityflavortext_Max_Order_By>;
  min?: InputMaybe<Abilityflavortext_Min_Order_By>;
  stddev?: InputMaybe<Abilityflavortext_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Abilityflavortext_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Abilityflavortext_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Abilityflavortext_Sum_Order_By>;
  var_pop?: InputMaybe<Abilityflavortext_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Abilityflavortext_Var_Samp_Order_By>;
  variance?: InputMaybe<Abilityflavortext_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Abilityflavortext_Avg_Fields = {
  __typename?: 'abilityflavortext_avg_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_abilityflavortext" */
export type Abilityflavortext_Avg_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_abilityflavortext". All fields are combined with a logical 'AND'. */
export type Abilityflavortext_Bool_Exp = {
  _and?: InputMaybe<Array<Abilityflavortext_Bool_Exp>>;
  _not?: InputMaybe<Abilityflavortext_Bool_Exp>;
  _or?: InputMaybe<Array<Abilityflavortext_Bool_Exp>>;
  ability?: InputMaybe<Ability_Bool_Exp>;
  ability_id?: InputMaybe<Int_Comparison_Exp>;
  flavor_text?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  version_group_id?: InputMaybe<Int_Comparison_Exp>;
  versiongroup?: InputMaybe<Versiongroup_Bool_Exp>;
};

/** aggregate max on columns */
export type Abilityflavortext_Max_Fields = {
  __typename?: 'abilityflavortext_max_fields';
  ability_id?: Maybe<Scalars['Int']['output']>;
  flavor_text?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_abilityflavortext" */
export type Abilityflavortext_Max_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  flavor_text?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Abilityflavortext_Min_Fields = {
  __typename?: 'abilityflavortext_min_fields';
  ability_id?: Maybe<Scalars['Int']['output']>;
  flavor_text?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_abilityflavortext" */
export type Abilityflavortext_Min_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  flavor_text?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_abilityflavortext". */
export type Abilityflavortext_Order_By = {
  ability?: InputMaybe<Ability_Order_By>;
  ability_id?: InputMaybe<Order_By>;
  flavor_text?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
  versiongroup?: InputMaybe<Versiongroup_Order_By>;
};

/** select columns of table "pokemon_v2_abilityflavortext" */
export enum Abilityflavortext_Select_Column {
  /** column name */
  AbilityId = 'ability_id',
  /** column name */
  FlavorText = 'flavor_text',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  VersionGroupId = 'version_group_id'
}

/** aggregate stddev on columns */
export type Abilityflavortext_Stddev_Fields = {
  __typename?: 'abilityflavortext_stddev_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_abilityflavortext" */
export type Abilityflavortext_Stddev_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Abilityflavortext_Stddev_Pop_Fields = {
  __typename?: 'abilityflavortext_stddev_pop_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_abilityflavortext" */
export type Abilityflavortext_Stddev_Pop_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Abilityflavortext_Stddev_Samp_Fields = {
  __typename?: 'abilityflavortext_stddev_samp_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_abilityflavortext" */
export type Abilityflavortext_Stddev_Samp_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Abilityflavortext_Sum_Fields = {
  __typename?: 'abilityflavortext_sum_fields';
  ability_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_abilityflavortext" */
export type Abilityflavortext_Sum_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Abilityflavortext_Var_Pop_Fields = {
  __typename?: 'abilityflavortext_var_pop_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_abilityflavortext" */
export type Abilityflavortext_Var_Pop_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Abilityflavortext_Var_Samp_Fields = {
  __typename?: 'abilityflavortext_var_samp_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_abilityflavortext" */
export type Abilityflavortext_Var_Samp_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Abilityflavortext_Variance_Fields = {
  __typename?: 'abilityflavortext_variance_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_abilityflavortext" */
export type Abilityflavortext_Variance_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_abilityname" */
export type Abilityname = {
  __typename?: 'abilityname';
  /** An object relationship */
  ability?: Maybe<Ability>;
  ability_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_abilityname" */
export type Abilityname_Aggregate = {
  __typename?: 'abilityname_aggregate';
  aggregate?: Maybe<Abilityname_Aggregate_Fields>;
  nodes: Array<Abilityname>;
};

export type Abilityname_Aggregate_Bool_Exp = {
  count?: InputMaybe<Abilityname_Aggregate_Bool_Exp_Count>;
};

export type Abilityname_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Abilityname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Abilityname_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_abilityname" */
export type Abilityname_Aggregate_Fields = {
  __typename?: 'abilityname_aggregate_fields';
  avg?: Maybe<Abilityname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Abilityname_Max_Fields>;
  min?: Maybe<Abilityname_Min_Fields>;
  stddev?: Maybe<Abilityname_Stddev_Fields>;
  stddev_pop?: Maybe<Abilityname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Abilityname_Stddev_Samp_Fields>;
  sum?: Maybe<Abilityname_Sum_Fields>;
  var_pop?: Maybe<Abilityname_Var_Pop_Fields>;
  var_samp?: Maybe<Abilityname_Var_Samp_Fields>;
  variance?: Maybe<Abilityname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_abilityname" */
export type Abilityname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Abilityname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_abilityname" */
export type Abilityname_Aggregate_Order_By = {
  avg?: InputMaybe<Abilityname_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Abilityname_Max_Order_By>;
  min?: InputMaybe<Abilityname_Min_Order_By>;
  stddev?: InputMaybe<Abilityname_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Abilityname_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Abilityname_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Abilityname_Sum_Order_By>;
  var_pop?: InputMaybe<Abilityname_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Abilityname_Var_Samp_Order_By>;
  variance?: InputMaybe<Abilityname_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Abilityname_Avg_Fields = {
  __typename?: 'abilityname_avg_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_abilityname" */
export type Abilityname_Avg_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_abilityname". All fields are combined with a logical 'AND'. */
export type Abilityname_Bool_Exp = {
  _and?: InputMaybe<Array<Abilityname_Bool_Exp>>;
  _not?: InputMaybe<Abilityname_Bool_Exp>;
  _or?: InputMaybe<Array<Abilityname_Bool_Exp>>;
  ability?: InputMaybe<Ability_Bool_Exp>;
  ability_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** aggregate max on columns */
export type Abilityname_Max_Fields = {
  __typename?: 'abilityname_max_fields';
  ability_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "pokemon_v2_abilityname" */
export type Abilityname_Max_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Abilityname_Min_Fields = {
  __typename?: 'abilityname_min_fields';
  ability_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "pokemon_v2_abilityname" */
export type Abilityname_Min_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_abilityname". */
export type Abilityname_Order_By = {
  ability?: InputMaybe<Ability_Order_By>;
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_abilityname" */
export enum Abilityname_Select_Column {
  /** column name */
  AbilityId = 'ability_id',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Abilityname_Stddev_Fields = {
  __typename?: 'abilityname_stddev_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_abilityname" */
export type Abilityname_Stddev_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Abilityname_Stddev_Pop_Fields = {
  __typename?: 'abilityname_stddev_pop_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_abilityname" */
export type Abilityname_Stddev_Pop_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Abilityname_Stddev_Samp_Fields = {
  __typename?: 'abilityname_stddev_samp_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_abilityname" */
export type Abilityname_Stddev_Samp_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Abilityname_Sum_Fields = {
  __typename?: 'abilityname_sum_fields';
  ability_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_abilityname" */
export type Abilityname_Sum_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Abilityname_Var_Pop_Fields = {
  __typename?: 'abilityname_var_pop_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_abilityname" */
export type Abilityname_Var_Pop_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Abilityname_Var_Samp_Fields = {
  __typename?: 'abilityname_var_samp_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_abilityname" */
export type Abilityname_Var_Samp_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Abilityname_Variance_Fields = {
  __typename?: 'abilityname_variance_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_abilityname" */
export type Abilityname_Variance_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_berry" */
export type Berry = {
  __typename?: 'berry';
  berry_firmness_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  berryfirmness?: Maybe<Berryfirmness>;
  /** An array relationship */
  berryflavormaps: Array<Berryflavormap>;
  /** An aggregate relationship */
  berryflavormaps_aggregate: Berryflavormap_Aggregate;
  growth_time: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  /** An object relationship */
  item?: Maybe<Item>;
  item_id?: Maybe<Scalars['Int']['output']>;
  max_harvest: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  natural_gift_power: Scalars['Int']['output'];
  natural_gift_type_id?: Maybe<Scalars['Int']['output']>;
  size: Scalars['Int']['output'];
  smoothness: Scalars['Int']['output'];
  soil_dryness: Scalars['Int']['output'];
  /** An object relationship */
  type?: Maybe<Type>;
};


/** columns and relationships of "pokemon_v2_berry" */
export type BerryBerryflavormapsArgs = {
  distinct_on?: InputMaybe<Array<Berryflavormap_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Berryflavormap_Order_By>>;
  where?: InputMaybe<Berryflavormap_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_berry" */
export type BerryBerryflavormaps_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Berryflavormap_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Berryflavormap_Order_By>>;
  where?: InputMaybe<Berryflavormap_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_berry" */
export type Berry_Aggregate = {
  __typename?: 'berry_aggregate';
  aggregate?: Maybe<Berry_Aggregate_Fields>;
  nodes: Array<Berry>;
};

export type Berry_Aggregate_Bool_Exp = {
  count?: InputMaybe<Berry_Aggregate_Bool_Exp_Count>;
};

export type Berry_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Berry_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Berry_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_berry" */
export type Berry_Aggregate_Fields = {
  __typename?: 'berry_aggregate_fields';
  avg?: Maybe<Berry_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Berry_Max_Fields>;
  min?: Maybe<Berry_Min_Fields>;
  stddev?: Maybe<Berry_Stddev_Fields>;
  stddev_pop?: Maybe<Berry_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Berry_Stddev_Samp_Fields>;
  sum?: Maybe<Berry_Sum_Fields>;
  var_pop?: Maybe<Berry_Var_Pop_Fields>;
  var_samp?: Maybe<Berry_Var_Samp_Fields>;
  variance?: Maybe<Berry_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_berry" */
export type Berry_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Berry_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_berry" */
export type Berry_Aggregate_Order_By = {
  avg?: InputMaybe<Berry_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Berry_Max_Order_By>;
  min?: InputMaybe<Berry_Min_Order_By>;
  stddev?: InputMaybe<Berry_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Berry_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Berry_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Berry_Sum_Order_By>;
  var_pop?: InputMaybe<Berry_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Berry_Var_Samp_Order_By>;
  variance?: InputMaybe<Berry_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Berry_Avg_Fields = {
  __typename?: 'berry_avg_fields';
  berry_firmness_id?: Maybe<Scalars['Float']['output']>;
  growth_time?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  max_harvest?: Maybe<Scalars['Float']['output']>;
  natural_gift_power?: Maybe<Scalars['Float']['output']>;
  natural_gift_type_id?: Maybe<Scalars['Float']['output']>;
  size?: Maybe<Scalars['Float']['output']>;
  smoothness?: Maybe<Scalars['Float']['output']>;
  soil_dryness?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_berry" */
export type Berry_Avg_Order_By = {
  berry_firmness_id?: InputMaybe<Order_By>;
  growth_time?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  max_harvest?: InputMaybe<Order_By>;
  natural_gift_power?: InputMaybe<Order_By>;
  natural_gift_type_id?: InputMaybe<Order_By>;
  size?: InputMaybe<Order_By>;
  smoothness?: InputMaybe<Order_By>;
  soil_dryness?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_berry". All fields are combined with a logical 'AND'. */
export type Berry_Bool_Exp = {
  _and?: InputMaybe<Array<Berry_Bool_Exp>>;
  _not?: InputMaybe<Berry_Bool_Exp>;
  _or?: InputMaybe<Array<Berry_Bool_Exp>>;
  berry_firmness_id?: InputMaybe<Int_Comparison_Exp>;
  berryfirmness?: InputMaybe<Berryfirmness_Bool_Exp>;
  berryflavormaps?: InputMaybe<Berryflavormap_Bool_Exp>;
  berryflavormaps_aggregate?: InputMaybe<Berryflavormap_Aggregate_Bool_Exp>;
  growth_time?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  item?: InputMaybe<Item_Bool_Exp>;
  item_id?: InputMaybe<Int_Comparison_Exp>;
  max_harvest?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  natural_gift_power?: InputMaybe<Int_Comparison_Exp>;
  natural_gift_type_id?: InputMaybe<Int_Comparison_Exp>;
  size?: InputMaybe<Int_Comparison_Exp>;
  smoothness?: InputMaybe<Int_Comparison_Exp>;
  soil_dryness?: InputMaybe<Int_Comparison_Exp>;
  type?: InputMaybe<Type_Bool_Exp>;
};

/** aggregate max on columns */
export type Berry_Max_Fields = {
  __typename?: 'berry_max_fields';
  berry_firmness_id?: Maybe<Scalars['Int']['output']>;
  growth_time?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
  max_harvest?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  natural_gift_power?: Maybe<Scalars['Int']['output']>;
  natural_gift_type_id?: Maybe<Scalars['Int']['output']>;
  size?: Maybe<Scalars['Int']['output']>;
  smoothness?: Maybe<Scalars['Int']['output']>;
  soil_dryness?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_berry" */
export type Berry_Max_Order_By = {
  berry_firmness_id?: InputMaybe<Order_By>;
  growth_time?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  max_harvest?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  natural_gift_power?: InputMaybe<Order_By>;
  natural_gift_type_id?: InputMaybe<Order_By>;
  size?: InputMaybe<Order_By>;
  smoothness?: InputMaybe<Order_By>;
  soil_dryness?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Berry_Min_Fields = {
  __typename?: 'berry_min_fields';
  berry_firmness_id?: Maybe<Scalars['Int']['output']>;
  growth_time?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
  max_harvest?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  natural_gift_power?: Maybe<Scalars['Int']['output']>;
  natural_gift_type_id?: Maybe<Scalars['Int']['output']>;
  size?: Maybe<Scalars['Int']['output']>;
  smoothness?: Maybe<Scalars['Int']['output']>;
  soil_dryness?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_berry" */
export type Berry_Min_Order_By = {
  berry_firmness_id?: InputMaybe<Order_By>;
  growth_time?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  max_harvest?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  natural_gift_power?: InputMaybe<Order_By>;
  natural_gift_type_id?: InputMaybe<Order_By>;
  size?: InputMaybe<Order_By>;
  smoothness?: InputMaybe<Order_By>;
  soil_dryness?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_berry". */
export type Berry_Order_By = {
  berry_firmness_id?: InputMaybe<Order_By>;
  berryfirmness?: InputMaybe<Berryfirmness_Order_By>;
  berryflavormaps_aggregate?: InputMaybe<Berryflavormap_Aggregate_Order_By>;
  growth_time?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item?: InputMaybe<Item_Order_By>;
  item_id?: InputMaybe<Order_By>;
  max_harvest?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  natural_gift_power?: InputMaybe<Order_By>;
  natural_gift_type_id?: InputMaybe<Order_By>;
  size?: InputMaybe<Order_By>;
  smoothness?: InputMaybe<Order_By>;
  soil_dryness?: InputMaybe<Order_By>;
  type?: InputMaybe<Type_Order_By>;
};

/** select columns of table "pokemon_v2_berry" */
export enum Berry_Select_Column {
  /** column name */
  BerryFirmnessId = 'berry_firmness_id',
  /** column name */
  GrowthTime = 'growth_time',
  /** column name */
  Id = 'id',
  /** column name */
  ItemId = 'item_id',
  /** column name */
  MaxHarvest = 'max_harvest',
  /** column name */
  Name = 'name',
  /** column name */
  NaturalGiftPower = 'natural_gift_power',
  /** column name */
  NaturalGiftTypeId = 'natural_gift_type_id',
  /** column name */
  Size = 'size',
  /** column name */
  Smoothness = 'smoothness',
  /** column name */
  SoilDryness = 'soil_dryness'
}

/** aggregate stddev on columns */
export type Berry_Stddev_Fields = {
  __typename?: 'berry_stddev_fields';
  berry_firmness_id?: Maybe<Scalars['Float']['output']>;
  growth_time?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  max_harvest?: Maybe<Scalars['Float']['output']>;
  natural_gift_power?: Maybe<Scalars['Float']['output']>;
  natural_gift_type_id?: Maybe<Scalars['Float']['output']>;
  size?: Maybe<Scalars['Float']['output']>;
  smoothness?: Maybe<Scalars['Float']['output']>;
  soil_dryness?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_berry" */
export type Berry_Stddev_Order_By = {
  berry_firmness_id?: InputMaybe<Order_By>;
  growth_time?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  max_harvest?: InputMaybe<Order_By>;
  natural_gift_power?: InputMaybe<Order_By>;
  natural_gift_type_id?: InputMaybe<Order_By>;
  size?: InputMaybe<Order_By>;
  smoothness?: InputMaybe<Order_By>;
  soil_dryness?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Berry_Stddev_Pop_Fields = {
  __typename?: 'berry_stddev_pop_fields';
  berry_firmness_id?: Maybe<Scalars['Float']['output']>;
  growth_time?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  max_harvest?: Maybe<Scalars['Float']['output']>;
  natural_gift_power?: Maybe<Scalars['Float']['output']>;
  natural_gift_type_id?: Maybe<Scalars['Float']['output']>;
  size?: Maybe<Scalars['Float']['output']>;
  smoothness?: Maybe<Scalars['Float']['output']>;
  soil_dryness?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_berry" */
export type Berry_Stddev_Pop_Order_By = {
  berry_firmness_id?: InputMaybe<Order_By>;
  growth_time?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  max_harvest?: InputMaybe<Order_By>;
  natural_gift_power?: InputMaybe<Order_By>;
  natural_gift_type_id?: InputMaybe<Order_By>;
  size?: InputMaybe<Order_By>;
  smoothness?: InputMaybe<Order_By>;
  soil_dryness?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Berry_Stddev_Samp_Fields = {
  __typename?: 'berry_stddev_samp_fields';
  berry_firmness_id?: Maybe<Scalars['Float']['output']>;
  growth_time?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  max_harvest?: Maybe<Scalars['Float']['output']>;
  natural_gift_power?: Maybe<Scalars['Float']['output']>;
  natural_gift_type_id?: Maybe<Scalars['Float']['output']>;
  size?: Maybe<Scalars['Float']['output']>;
  smoothness?: Maybe<Scalars['Float']['output']>;
  soil_dryness?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_berry" */
export type Berry_Stddev_Samp_Order_By = {
  berry_firmness_id?: InputMaybe<Order_By>;
  growth_time?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  max_harvest?: InputMaybe<Order_By>;
  natural_gift_power?: InputMaybe<Order_By>;
  natural_gift_type_id?: InputMaybe<Order_By>;
  size?: InputMaybe<Order_By>;
  smoothness?: InputMaybe<Order_By>;
  soil_dryness?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Berry_Sum_Fields = {
  __typename?: 'berry_sum_fields';
  berry_firmness_id?: Maybe<Scalars['Int']['output']>;
  growth_time?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
  max_harvest?: Maybe<Scalars['Int']['output']>;
  natural_gift_power?: Maybe<Scalars['Int']['output']>;
  natural_gift_type_id?: Maybe<Scalars['Int']['output']>;
  size?: Maybe<Scalars['Int']['output']>;
  smoothness?: Maybe<Scalars['Int']['output']>;
  soil_dryness?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_berry" */
export type Berry_Sum_Order_By = {
  berry_firmness_id?: InputMaybe<Order_By>;
  growth_time?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  max_harvest?: InputMaybe<Order_By>;
  natural_gift_power?: InputMaybe<Order_By>;
  natural_gift_type_id?: InputMaybe<Order_By>;
  size?: InputMaybe<Order_By>;
  smoothness?: InputMaybe<Order_By>;
  soil_dryness?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Berry_Var_Pop_Fields = {
  __typename?: 'berry_var_pop_fields';
  berry_firmness_id?: Maybe<Scalars['Float']['output']>;
  growth_time?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  max_harvest?: Maybe<Scalars['Float']['output']>;
  natural_gift_power?: Maybe<Scalars['Float']['output']>;
  natural_gift_type_id?: Maybe<Scalars['Float']['output']>;
  size?: Maybe<Scalars['Float']['output']>;
  smoothness?: Maybe<Scalars['Float']['output']>;
  soil_dryness?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_berry" */
export type Berry_Var_Pop_Order_By = {
  berry_firmness_id?: InputMaybe<Order_By>;
  growth_time?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  max_harvest?: InputMaybe<Order_By>;
  natural_gift_power?: InputMaybe<Order_By>;
  natural_gift_type_id?: InputMaybe<Order_By>;
  size?: InputMaybe<Order_By>;
  smoothness?: InputMaybe<Order_By>;
  soil_dryness?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Berry_Var_Samp_Fields = {
  __typename?: 'berry_var_samp_fields';
  berry_firmness_id?: Maybe<Scalars['Float']['output']>;
  growth_time?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  max_harvest?: Maybe<Scalars['Float']['output']>;
  natural_gift_power?: Maybe<Scalars['Float']['output']>;
  natural_gift_type_id?: Maybe<Scalars['Float']['output']>;
  size?: Maybe<Scalars['Float']['output']>;
  smoothness?: Maybe<Scalars['Float']['output']>;
  soil_dryness?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_berry" */
export type Berry_Var_Samp_Order_By = {
  berry_firmness_id?: InputMaybe<Order_By>;
  growth_time?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  max_harvest?: InputMaybe<Order_By>;
  natural_gift_power?: InputMaybe<Order_By>;
  natural_gift_type_id?: InputMaybe<Order_By>;
  size?: InputMaybe<Order_By>;
  smoothness?: InputMaybe<Order_By>;
  soil_dryness?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Berry_Variance_Fields = {
  __typename?: 'berry_variance_fields';
  berry_firmness_id?: Maybe<Scalars['Float']['output']>;
  growth_time?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  max_harvest?: Maybe<Scalars['Float']['output']>;
  natural_gift_power?: Maybe<Scalars['Float']['output']>;
  natural_gift_type_id?: Maybe<Scalars['Float']['output']>;
  size?: Maybe<Scalars['Float']['output']>;
  smoothness?: Maybe<Scalars['Float']['output']>;
  soil_dryness?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_berry" */
export type Berry_Variance_Order_By = {
  berry_firmness_id?: InputMaybe<Order_By>;
  growth_time?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  max_harvest?: InputMaybe<Order_By>;
  natural_gift_power?: InputMaybe<Order_By>;
  natural_gift_type_id?: InputMaybe<Order_By>;
  size?: InputMaybe<Order_By>;
  smoothness?: InputMaybe<Order_By>;
  soil_dryness?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_berryfirmness" */
export type Berryfirmness = {
  __typename?: 'berryfirmness';
  /** An array relationship */
  berries: Array<Berry>;
  /** An aggregate relationship */
  berries_aggregate: Berry_Aggregate;
  /** An array relationship */
  berryfirmnessnames: Array<Berryfirmnessname>;
  /** An aggregate relationship */
  berryfirmnessnames_aggregate: Berryfirmnessname_Aggregate;
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
};


/** columns and relationships of "pokemon_v2_berryfirmness" */
export type BerryfirmnessBerriesArgs = {
  distinct_on?: InputMaybe<Array<Berry_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Berry_Order_By>>;
  where?: InputMaybe<Berry_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_berryfirmness" */
export type BerryfirmnessBerries_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Berry_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Berry_Order_By>>;
  where?: InputMaybe<Berry_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_berryfirmness" */
export type BerryfirmnessBerryfirmnessnamesArgs = {
  distinct_on?: InputMaybe<Array<Berryfirmnessname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Berryfirmnessname_Order_By>>;
  where?: InputMaybe<Berryfirmnessname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_berryfirmness" */
export type BerryfirmnessBerryfirmnessnames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Berryfirmnessname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Berryfirmnessname_Order_By>>;
  where?: InputMaybe<Berryfirmnessname_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_berryfirmness" */
export type Berryfirmness_Aggregate = {
  __typename?: 'berryfirmness_aggregate';
  aggregate?: Maybe<Berryfirmness_Aggregate_Fields>;
  nodes: Array<Berryfirmness>;
};

/** aggregate fields of "pokemon_v2_berryfirmness" */
export type Berryfirmness_Aggregate_Fields = {
  __typename?: 'berryfirmness_aggregate_fields';
  avg?: Maybe<Berryfirmness_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Berryfirmness_Max_Fields>;
  min?: Maybe<Berryfirmness_Min_Fields>;
  stddev?: Maybe<Berryfirmness_Stddev_Fields>;
  stddev_pop?: Maybe<Berryfirmness_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Berryfirmness_Stddev_Samp_Fields>;
  sum?: Maybe<Berryfirmness_Sum_Fields>;
  var_pop?: Maybe<Berryfirmness_Var_Pop_Fields>;
  var_samp?: Maybe<Berryfirmness_Var_Samp_Fields>;
  variance?: Maybe<Berryfirmness_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_berryfirmness" */
export type Berryfirmness_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Berryfirmness_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Berryfirmness_Avg_Fields = {
  __typename?: 'berryfirmness_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_berryfirmness". All fields are combined with a logical 'AND'. */
export type Berryfirmness_Bool_Exp = {
  _and?: InputMaybe<Array<Berryfirmness_Bool_Exp>>;
  _not?: InputMaybe<Berryfirmness_Bool_Exp>;
  _or?: InputMaybe<Array<Berryfirmness_Bool_Exp>>;
  berries?: InputMaybe<Berry_Bool_Exp>;
  berries_aggregate?: InputMaybe<Berry_Aggregate_Bool_Exp>;
  berryfirmnessnames?: InputMaybe<Berryfirmnessname_Bool_Exp>;
  berryfirmnessnames_aggregate?: InputMaybe<Berryfirmnessname_Aggregate_Bool_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** aggregate max on columns */
export type Berryfirmness_Max_Fields = {
  __typename?: 'berryfirmness_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Berryfirmness_Min_Fields = {
  __typename?: 'berryfirmness_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** Ordering options when selecting data from "pokemon_v2_berryfirmness". */
export type Berryfirmness_Order_By = {
  berries_aggregate?: InputMaybe<Berry_Aggregate_Order_By>;
  berryfirmnessnames_aggregate?: InputMaybe<Berryfirmnessname_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_berryfirmness" */
export enum Berryfirmness_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Berryfirmness_Stddev_Fields = {
  __typename?: 'berryfirmness_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Berryfirmness_Stddev_Pop_Fields = {
  __typename?: 'berryfirmness_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Berryfirmness_Stddev_Samp_Fields = {
  __typename?: 'berryfirmness_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate sum on columns */
export type Berryfirmness_Sum_Fields = {
  __typename?: 'berryfirmness_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate var_pop on columns */
export type Berryfirmness_Var_Pop_Fields = {
  __typename?: 'berryfirmness_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Berryfirmness_Var_Samp_Fields = {
  __typename?: 'berryfirmness_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Berryfirmness_Variance_Fields = {
  __typename?: 'berryfirmness_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_berryfirmnessname" */
export type Berryfirmnessname = {
  __typename?: 'berryfirmnessname';
  berry_firmness_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  berryfirmness?: Maybe<Berryfirmness>;
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_berryfirmnessname" */
export type Berryfirmnessname_Aggregate = {
  __typename?: 'berryfirmnessname_aggregate';
  aggregate?: Maybe<Berryfirmnessname_Aggregate_Fields>;
  nodes: Array<Berryfirmnessname>;
};

export type Berryfirmnessname_Aggregate_Bool_Exp = {
  count?: InputMaybe<Berryfirmnessname_Aggregate_Bool_Exp_Count>;
};

export type Berryfirmnessname_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Berryfirmnessname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Berryfirmnessname_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_berryfirmnessname" */
export type Berryfirmnessname_Aggregate_Fields = {
  __typename?: 'berryfirmnessname_aggregate_fields';
  avg?: Maybe<Berryfirmnessname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Berryfirmnessname_Max_Fields>;
  min?: Maybe<Berryfirmnessname_Min_Fields>;
  stddev?: Maybe<Berryfirmnessname_Stddev_Fields>;
  stddev_pop?: Maybe<Berryfirmnessname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Berryfirmnessname_Stddev_Samp_Fields>;
  sum?: Maybe<Berryfirmnessname_Sum_Fields>;
  var_pop?: Maybe<Berryfirmnessname_Var_Pop_Fields>;
  var_samp?: Maybe<Berryfirmnessname_Var_Samp_Fields>;
  variance?: Maybe<Berryfirmnessname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_berryfirmnessname" */
export type Berryfirmnessname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Berryfirmnessname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_berryfirmnessname" */
export type Berryfirmnessname_Aggregate_Order_By = {
  avg?: InputMaybe<Berryfirmnessname_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Berryfirmnessname_Max_Order_By>;
  min?: InputMaybe<Berryfirmnessname_Min_Order_By>;
  stddev?: InputMaybe<Berryfirmnessname_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Berryfirmnessname_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Berryfirmnessname_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Berryfirmnessname_Sum_Order_By>;
  var_pop?: InputMaybe<Berryfirmnessname_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Berryfirmnessname_Var_Samp_Order_By>;
  variance?: InputMaybe<Berryfirmnessname_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Berryfirmnessname_Avg_Fields = {
  __typename?: 'berryfirmnessname_avg_fields';
  berry_firmness_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_berryfirmnessname" */
export type Berryfirmnessname_Avg_Order_By = {
  berry_firmness_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_berryfirmnessname". All fields are combined with a logical 'AND'. */
export type Berryfirmnessname_Bool_Exp = {
  _and?: InputMaybe<Array<Berryfirmnessname_Bool_Exp>>;
  _not?: InputMaybe<Berryfirmnessname_Bool_Exp>;
  _or?: InputMaybe<Array<Berryfirmnessname_Bool_Exp>>;
  berry_firmness_id?: InputMaybe<Int_Comparison_Exp>;
  berryfirmness?: InputMaybe<Berryfirmness_Bool_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** aggregate max on columns */
export type Berryfirmnessname_Max_Fields = {
  __typename?: 'berryfirmnessname_max_fields';
  berry_firmness_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "pokemon_v2_berryfirmnessname" */
export type Berryfirmnessname_Max_Order_By = {
  berry_firmness_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Berryfirmnessname_Min_Fields = {
  __typename?: 'berryfirmnessname_min_fields';
  berry_firmness_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "pokemon_v2_berryfirmnessname" */
export type Berryfirmnessname_Min_Order_By = {
  berry_firmness_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_berryfirmnessname". */
export type Berryfirmnessname_Order_By = {
  berry_firmness_id?: InputMaybe<Order_By>;
  berryfirmness?: InputMaybe<Berryfirmness_Order_By>;
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_berryfirmnessname" */
export enum Berryfirmnessname_Select_Column {
  /** column name */
  BerryFirmnessId = 'berry_firmness_id',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Berryfirmnessname_Stddev_Fields = {
  __typename?: 'berryfirmnessname_stddev_fields';
  berry_firmness_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_berryfirmnessname" */
export type Berryfirmnessname_Stddev_Order_By = {
  berry_firmness_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Berryfirmnessname_Stddev_Pop_Fields = {
  __typename?: 'berryfirmnessname_stddev_pop_fields';
  berry_firmness_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_berryfirmnessname" */
export type Berryfirmnessname_Stddev_Pop_Order_By = {
  berry_firmness_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Berryfirmnessname_Stddev_Samp_Fields = {
  __typename?: 'berryfirmnessname_stddev_samp_fields';
  berry_firmness_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_berryfirmnessname" */
export type Berryfirmnessname_Stddev_Samp_Order_By = {
  berry_firmness_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Berryfirmnessname_Sum_Fields = {
  __typename?: 'berryfirmnessname_sum_fields';
  berry_firmness_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_berryfirmnessname" */
export type Berryfirmnessname_Sum_Order_By = {
  berry_firmness_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Berryfirmnessname_Var_Pop_Fields = {
  __typename?: 'berryfirmnessname_var_pop_fields';
  berry_firmness_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_berryfirmnessname" */
export type Berryfirmnessname_Var_Pop_Order_By = {
  berry_firmness_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Berryfirmnessname_Var_Samp_Fields = {
  __typename?: 'berryfirmnessname_var_samp_fields';
  berry_firmness_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_berryfirmnessname" */
export type Berryfirmnessname_Var_Samp_Order_By = {
  berry_firmness_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Berryfirmnessname_Variance_Fields = {
  __typename?: 'berryfirmnessname_variance_fields';
  berry_firmness_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_berryfirmnessname" */
export type Berryfirmnessname_Variance_Order_By = {
  berry_firmness_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_berryflavor" */
export type Berryflavor = {
  __typename?: 'berryflavor';
  /** An array relationship */
  NaturesByLikesFlavorId: Array<Nature>;
  /** An aggregate relationship */
  NaturesByLikesFlavorId_aggregate: Nature_Aggregate;
  /** An array relationship */
  berryflavormaps: Array<Berryflavormap>;
  /** An aggregate relationship */
  berryflavormaps_aggregate: Berryflavormap_Aggregate;
  /** An array relationship */
  berryflavornames: Array<Berryflavorname>;
  /** An aggregate relationship */
  berryflavornames_aggregate: Berryflavorname_Aggregate;
  contest_type_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  contesttype?: Maybe<Contesttype>;
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  /** An array relationship */
  natures: Array<Nature>;
  /** An aggregate relationship */
  natures_aggregate: Nature_Aggregate;
};


/** columns and relationships of "pokemon_v2_berryflavor" */
export type BerryflavorNaturesByLikesFlavorIdArgs = {
  distinct_on?: InputMaybe<Array<Nature_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Nature_Order_By>>;
  where?: InputMaybe<Nature_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_berryflavor" */
export type BerryflavorNaturesByLikesFlavorId_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Nature_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Nature_Order_By>>;
  where?: InputMaybe<Nature_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_berryflavor" */
export type BerryflavorBerryflavormapsArgs = {
  distinct_on?: InputMaybe<Array<Berryflavormap_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Berryflavormap_Order_By>>;
  where?: InputMaybe<Berryflavormap_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_berryflavor" */
export type BerryflavorBerryflavormaps_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Berryflavormap_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Berryflavormap_Order_By>>;
  where?: InputMaybe<Berryflavormap_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_berryflavor" */
export type BerryflavorBerryflavornamesArgs = {
  distinct_on?: InputMaybe<Array<Berryflavorname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Berryflavorname_Order_By>>;
  where?: InputMaybe<Berryflavorname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_berryflavor" */
export type BerryflavorBerryflavornames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Berryflavorname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Berryflavorname_Order_By>>;
  where?: InputMaybe<Berryflavorname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_berryflavor" */
export type BerryflavorNaturesArgs = {
  distinct_on?: InputMaybe<Array<Nature_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Nature_Order_By>>;
  where?: InputMaybe<Nature_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_berryflavor" */
export type BerryflavorNatures_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Nature_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Nature_Order_By>>;
  where?: InputMaybe<Nature_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_berryflavor" */
export type Berryflavor_Aggregate = {
  __typename?: 'berryflavor_aggregate';
  aggregate?: Maybe<Berryflavor_Aggregate_Fields>;
  nodes: Array<Berryflavor>;
};

export type Berryflavor_Aggregate_Bool_Exp = {
  count?: InputMaybe<Berryflavor_Aggregate_Bool_Exp_Count>;
};

export type Berryflavor_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Berryflavor_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Berryflavor_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_berryflavor" */
export type Berryflavor_Aggregate_Fields = {
  __typename?: 'berryflavor_aggregate_fields';
  avg?: Maybe<Berryflavor_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Berryflavor_Max_Fields>;
  min?: Maybe<Berryflavor_Min_Fields>;
  stddev?: Maybe<Berryflavor_Stddev_Fields>;
  stddev_pop?: Maybe<Berryflavor_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Berryflavor_Stddev_Samp_Fields>;
  sum?: Maybe<Berryflavor_Sum_Fields>;
  var_pop?: Maybe<Berryflavor_Var_Pop_Fields>;
  var_samp?: Maybe<Berryflavor_Var_Samp_Fields>;
  variance?: Maybe<Berryflavor_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_berryflavor" */
export type Berryflavor_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Berryflavor_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_berryflavor" */
export type Berryflavor_Aggregate_Order_By = {
  avg?: InputMaybe<Berryflavor_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Berryflavor_Max_Order_By>;
  min?: InputMaybe<Berryflavor_Min_Order_By>;
  stddev?: InputMaybe<Berryflavor_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Berryflavor_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Berryflavor_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Berryflavor_Sum_Order_By>;
  var_pop?: InputMaybe<Berryflavor_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Berryflavor_Var_Samp_Order_By>;
  variance?: InputMaybe<Berryflavor_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Berryflavor_Avg_Fields = {
  __typename?: 'berryflavor_avg_fields';
  contest_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_berryflavor" */
export type Berryflavor_Avg_Order_By = {
  contest_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_berryflavor". All fields are combined with a logical 'AND'. */
export type Berryflavor_Bool_Exp = {
  NaturesByLikesFlavorId?: InputMaybe<Nature_Bool_Exp>;
  NaturesByLikesFlavorId_aggregate?: InputMaybe<Nature_Aggregate_Bool_Exp>;
  _and?: InputMaybe<Array<Berryflavor_Bool_Exp>>;
  _not?: InputMaybe<Berryflavor_Bool_Exp>;
  _or?: InputMaybe<Array<Berryflavor_Bool_Exp>>;
  berryflavormaps?: InputMaybe<Berryflavormap_Bool_Exp>;
  berryflavormaps_aggregate?: InputMaybe<Berryflavormap_Aggregate_Bool_Exp>;
  berryflavornames?: InputMaybe<Berryflavorname_Bool_Exp>;
  berryflavornames_aggregate?: InputMaybe<Berryflavorname_Aggregate_Bool_Exp>;
  contest_type_id?: InputMaybe<Int_Comparison_Exp>;
  contesttype?: InputMaybe<Contesttype_Bool_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  natures?: InputMaybe<Nature_Bool_Exp>;
  natures_aggregate?: InputMaybe<Nature_Aggregate_Bool_Exp>;
};

/** aggregate max on columns */
export type Berryflavor_Max_Fields = {
  __typename?: 'berryflavor_max_fields';
  contest_type_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "pokemon_v2_berryflavor" */
export type Berryflavor_Max_Order_By = {
  contest_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Berryflavor_Min_Fields = {
  __typename?: 'berryflavor_min_fields';
  contest_type_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "pokemon_v2_berryflavor" */
export type Berryflavor_Min_Order_By = {
  contest_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_berryflavor". */
export type Berryflavor_Order_By = {
  NaturesByLikesFlavorId_aggregate?: InputMaybe<Nature_Aggregate_Order_By>;
  berryflavormaps_aggregate?: InputMaybe<Berryflavormap_Aggregate_Order_By>;
  berryflavornames_aggregate?: InputMaybe<Berryflavorname_Aggregate_Order_By>;
  contest_type_id?: InputMaybe<Order_By>;
  contesttype?: InputMaybe<Contesttype_Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  natures_aggregate?: InputMaybe<Nature_Aggregate_Order_By>;
};

/** select columns of table "pokemon_v2_berryflavor" */
export enum Berryflavor_Select_Column {
  /** column name */
  ContestTypeId = 'contest_type_id',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Berryflavor_Stddev_Fields = {
  __typename?: 'berryflavor_stddev_fields';
  contest_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_berryflavor" */
export type Berryflavor_Stddev_Order_By = {
  contest_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Berryflavor_Stddev_Pop_Fields = {
  __typename?: 'berryflavor_stddev_pop_fields';
  contest_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_berryflavor" */
export type Berryflavor_Stddev_Pop_Order_By = {
  contest_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Berryflavor_Stddev_Samp_Fields = {
  __typename?: 'berryflavor_stddev_samp_fields';
  contest_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_berryflavor" */
export type Berryflavor_Stddev_Samp_Order_By = {
  contest_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Berryflavor_Sum_Fields = {
  __typename?: 'berryflavor_sum_fields';
  contest_type_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_berryflavor" */
export type Berryflavor_Sum_Order_By = {
  contest_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Berryflavor_Var_Pop_Fields = {
  __typename?: 'berryflavor_var_pop_fields';
  contest_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_berryflavor" */
export type Berryflavor_Var_Pop_Order_By = {
  contest_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Berryflavor_Var_Samp_Fields = {
  __typename?: 'berryflavor_var_samp_fields';
  contest_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_berryflavor" */
export type Berryflavor_Var_Samp_Order_By = {
  contest_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Berryflavor_Variance_Fields = {
  __typename?: 'berryflavor_variance_fields';
  contest_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_berryflavor" */
export type Berryflavor_Variance_Order_By = {
  contest_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_berryflavormap" */
export type Berryflavormap = {
  __typename?: 'berryflavormap';
  /** An object relationship */
  berry?: Maybe<Berry>;
  berry_flavor_id?: Maybe<Scalars['Int']['output']>;
  berry_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  berryflavor?: Maybe<Berryflavor>;
  id: Scalars['Int']['output'];
  potency: Scalars['Int']['output'];
};

/** aggregated selection of "pokemon_v2_berryflavormap" */
export type Berryflavormap_Aggregate = {
  __typename?: 'berryflavormap_aggregate';
  aggregate?: Maybe<Berryflavormap_Aggregate_Fields>;
  nodes: Array<Berryflavormap>;
};

export type Berryflavormap_Aggregate_Bool_Exp = {
  count?: InputMaybe<Berryflavormap_Aggregate_Bool_Exp_Count>;
};

export type Berryflavormap_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Berryflavormap_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Berryflavormap_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_berryflavormap" */
export type Berryflavormap_Aggregate_Fields = {
  __typename?: 'berryflavormap_aggregate_fields';
  avg?: Maybe<Berryflavormap_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Berryflavormap_Max_Fields>;
  min?: Maybe<Berryflavormap_Min_Fields>;
  stddev?: Maybe<Berryflavormap_Stddev_Fields>;
  stddev_pop?: Maybe<Berryflavormap_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Berryflavormap_Stddev_Samp_Fields>;
  sum?: Maybe<Berryflavormap_Sum_Fields>;
  var_pop?: Maybe<Berryflavormap_Var_Pop_Fields>;
  var_samp?: Maybe<Berryflavormap_Var_Samp_Fields>;
  variance?: Maybe<Berryflavormap_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_berryflavormap" */
export type Berryflavormap_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Berryflavormap_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_berryflavormap" */
export type Berryflavormap_Aggregate_Order_By = {
  avg?: InputMaybe<Berryflavormap_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Berryflavormap_Max_Order_By>;
  min?: InputMaybe<Berryflavormap_Min_Order_By>;
  stddev?: InputMaybe<Berryflavormap_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Berryflavormap_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Berryflavormap_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Berryflavormap_Sum_Order_By>;
  var_pop?: InputMaybe<Berryflavormap_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Berryflavormap_Var_Samp_Order_By>;
  variance?: InputMaybe<Berryflavormap_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Berryflavormap_Avg_Fields = {
  __typename?: 'berryflavormap_avg_fields';
  berry_flavor_id?: Maybe<Scalars['Float']['output']>;
  berry_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  potency?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_berryflavormap" */
export type Berryflavormap_Avg_Order_By = {
  berry_flavor_id?: InputMaybe<Order_By>;
  berry_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  potency?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_berryflavormap". All fields are combined with a logical 'AND'. */
export type Berryflavormap_Bool_Exp = {
  _and?: InputMaybe<Array<Berryflavormap_Bool_Exp>>;
  _not?: InputMaybe<Berryflavormap_Bool_Exp>;
  _or?: InputMaybe<Array<Berryflavormap_Bool_Exp>>;
  berry?: InputMaybe<Berry_Bool_Exp>;
  berry_flavor_id?: InputMaybe<Int_Comparison_Exp>;
  berry_id?: InputMaybe<Int_Comparison_Exp>;
  berryflavor?: InputMaybe<Berryflavor_Bool_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  potency?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Berryflavormap_Max_Fields = {
  __typename?: 'berryflavormap_max_fields';
  berry_flavor_id?: Maybe<Scalars['Int']['output']>;
  berry_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  potency?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_berryflavormap" */
export type Berryflavormap_Max_Order_By = {
  berry_flavor_id?: InputMaybe<Order_By>;
  berry_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  potency?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Berryflavormap_Min_Fields = {
  __typename?: 'berryflavormap_min_fields';
  berry_flavor_id?: Maybe<Scalars['Int']['output']>;
  berry_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  potency?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_berryflavormap" */
export type Berryflavormap_Min_Order_By = {
  berry_flavor_id?: InputMaybe<Order_By>;
  berry_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  potency?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_berryflavormap". */
export type Berryflavormap_Order_By = {
  berry?: InputMaybe<Berry_Order_By>;
  berry_flavor_id?: InputMaybe<Order_By>;
  berry_id?: InputMaybe<Order_By>;
  berryflavor?: InputMaybe<Berryflavor_Order_By>;
  id?: InputMaybe<Order_By>;
  potency?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_berryflavormap" */
export enum Berryflavormap_Select_Column {
  /** column name */
  BerryFlavorId = 'berry_flavor_id',
  /** column name */
  BerryId = 'berry_id',
  /** column name */
  Id = 'id',
  /** column name */
  Potency = 'potency'
}

/** aggregate stddev on columns */
export type Berryflavormap_Stddev_Fields = {
  __typename?: 'berryflavormap_stddev_fields';
  berry_flavor_id?: Maybe<Scalars['Float']['output']>;
  berry_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  potency?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_berryflavormap" */
export type Berryflavormap_Stddev_Order_By = {
  berry_flavor_id?: InputMaybe<Order_By>;
  berry_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  potency?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Berryflavormap_Stddev_Pop_Fields = {
  __typename?: 'berryflavormap_stddev_pop_fields';
  berry_flavor_id?: Maybe<Scalars['Float']['output']>;
  berry_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  potency?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_berryflavormap" */
export type Berryflavormap_Stddev_Pop_Order_By = {
  berry_flavor_id?: InputMaybe<Order_By>;
  berry_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  potency?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Berryflavormap_Stddev_Samp_Fields = {
  __typename?: 'berryflavormap_stddev_samp_fields';
  berry_flavor_id?: Maybe<Scalars['Float']['output']>;
  berry_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  potency?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_berryflavormap" */
export type Berryflavormap_Stddev_Samp_Order_By = {
  berry_flavor_id?: InputMaybe<Order_By>;
  berry_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  potency?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Berryflavormap_Sum_Fields = {
  __typename?: 'berryflavormap_sum_fields';
  berry_flavor_id?: Maybe<Scalars['Int']['output']>;
  berry_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  potency?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_berryflavormap" */
export type Berryflavormap_Sum_Order_By = {
  berry_flavor_id?: InputMaybe<Order_By>;
  berry_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  potency?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Berryflavormap_Var_Pop_Fields = {
  __typename?: 'berryflavormap_var_pop_fields';
  berry_flavor_id?: Maybe<Scalars['Float']['output']>;
  berry_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  potency?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_berryflavormap" */
export type Berryflavormap_Var_Pop_Order_By = {
  berry_flavor_id?: InputMaybe<Order_By>;
  berry_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  potency?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Berryflavormap_Var_Samp_Fields = {
  __typename?: 'berryflavormap_var_samp_fields';
  berry_flavor_id?: Maybe<Scalars['Float']['output']>;
  berry_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  potency?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_berryflavormap" */
export type Berryflavormap_Var_Samp_Order_By = {
  berry_flavor_id?: InputMaybe<Order_By>;
  berry_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  potency?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Berryflavormap_Variance_Fields = {
  __typename?: 'berryflavormap_variance_fields';
  berry_flavor_id?: Maybe<Scalars['Float']['output']>;
  berry_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  potency?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_berryflavormap" */
export type Berryflavormap_Variance_Order_By = {
  berry_flavor_id?: InputMaybe<Order_By>;
  berry_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  potency?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_berryflavorname" */
export type Berryflavorname = {
  __typename?: 'berryflavorname';
  berry_flavor_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  berryflavor?: Maybe<Berryflavor>;
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_berryflavorname" */
export type Berryflavorname_Aggregate = {
  __typename?: 'berryflavorname_aggregate';
  aggregate?: Maybe<Berryflavorname_Aggregate_Fields>;
  nodes: Array<Berryflavorname>;
};

export type Berryflavorname_Aggregate_Bool_Exp = {
  count?: InputMaybe<Berryflavorname_Aggregate_Bool_Exp_Count>;
};

export type Berryflavorname_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Berryflavorname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Berryflavorname_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_berryflavorname" */
export type Berryflavorname_Aggregate_Fields = {
  __typename?: 'berryflavorname_aggregate_fields';
  avg?: Maybe<Berryflavorname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Berryflavorname_Max_Fields>;
  min?: Maybe<Berryflavorname_Min_Fields>;
  stddev?: Maybe<Berryflavorname_Stddev_Fields>;
  stddev_pop?: Maybe<Berryflavorname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Berryflavorname_Stddev_Samp_Fields>;
  sum?: Maybe<Berryflavorname_Sum_Fields>;
  var_pop?: Maybe<Berryflavorname_Var_Pop_Fields>;
  var_samp?: Maybe<Berryflavorname_Var_Samp_Fields>;
  variance?: Maybe<Berryflavorname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_berryflavorname" */
export type Berryflavorname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Berryflavorname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_berryflavorname" */
export type Berryflavorname_Aggregate_Order_By = {
  avg?: InputMaybe<Berryflavorname_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Berryflavorname_Max_Order_By>;
  min?: InputMaybe<Berryflavorname_Min_Order_By>;
  stddev?: InputMaybe<Berryflavorname_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Berryflavorname_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Berryflavorname_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Berryflavorname_Sum_Order_By>;
  var_pop?: InputMaybe<Berryflavorname_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Berryflavorname_Var_Samp_Order_By>;
  variance?: InputMaybe<Berryflavorname_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Berryflavorname_Avg_Fields = {
  __typename?: 'berryflavorname_avg_fields';
  berry_flavor_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_berryflavorname" */
export type Berryflavorname_Avg_Order_By = {
  berry_flavor_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_berryflavorname". All fields are combined with a logical 'AND'. */
export type Berryflavorname_Bool_Exp = {
  _and?: InputMaybe<Array<Berryflavorname_Bool_Exp>>;
  _not?: InputMaybe<Berryflavorname_Bool_Exp>;
  _or?: InputMaybe<Array<Berryflavorname_Bool_Exp>>;
  berry_flavor_id?: InputMaybe<Int_Comparison_Exp>;
  berryflavor?: InputMaybe<Berryflavor_Bool_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** aggregate max on columns */
export type Berryflavorname_Max_Fields = {
  __typename?: 'berryflavorname_max_fields';
  berry_flavor_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "pokemon_v2_berryflavorname" */
export type Berryflavorname_Max_Order_By = {
  berry_flavor_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Berryflavorname_Min_Fields = {
  __typename?: 'berryflavorname_min_fields';
  berry_flavor_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "pokemon_v2_berryflavorname" */
export type Berryflavorname_Min_Order_By = {
  berry_flavor_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_berryflavorname". */
export type Berryflavorname_Order_By = {
  berry_flavor_id?: InputMaybe<Order_By>;
  berryflavor?: InputMaybe<Berryflavor_Order_By>;
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_berryflavorname" */
export enum Berryflavorname_Select_Column {
  /** column name */
  BerryFlavorId = 'berry_flavor_id',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Berryflavorname_Stddev_Fields = {
  __typename?: 'berryflavorname_stddev_fields';
  berry_flavor_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_berryflavorname" */
export type Berryflavorname_Stddev_Order_By = {
  berry_flavor_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Berryflavorname_Stddev_Pop_Fields = {
  __typename?: 'berryflavorname_stddev_pop_fields';
  berry_flavor_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_berryflavorname" */
export type Berryflavorname_Stddev_Pop_Order_By = {
  berry_flavor_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Berryflavorname_Stddev_Samp_Fields = {
  __typename?: 'berryflavorname_stddev_samp_fields';
  berry_flavor_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_berryflavorname" */
export type Berryflavorname_Stddev_Samp_Order_By = {
  berry_flavor_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Berryflavorname_Sum_Fields = {
  __typename?: 'berryflavorname_sum_fields';
  berry_flavor_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_berryflavorname" */
export type Berryflavorname_Sum_Order_By = {
  berry_flavor_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Berryflavorname_Var_Pop_Fields = {
  __typename?: 'berryflavorname_var_pop_fields';
  berry_flavor_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_berryflavorname" */
export type Berryflavorname_Var_Pop_Order_By = {
  berry_flavor_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Berryflavorname_Var_Samp_Fields = {
  __typename?: 'berryflavorname_var_samp_fields';
  berry_flavor_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_berryflavorname" */
export type Berryflavorname_Var_Samp_Order_By = {
  berry_flavor_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Berryflavorname_Variance_Fields = {
  __typename?: 'berryflavorname_variance_fields';
  berry_flavor_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_berryflavorname" */
export type Berryflavorname_Variance_Order_By = {
  berry_flavor_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_characteristic" */
export type Characteristic = {
  __typename?: 'characteristic';
  /** An array relationship */
  characteristicdescriptions: Array<Characteristicdescription>;
  /** An aggregate relationship */
  characteristicdescriptions_aggregate: Characteristicdescription_Aggregate;
  gene_mod_5: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  /** An object relationship */
  stat?: Maybe<Stat>;
  stat_id?: Maybe<Scalars['Int']['output']>;
};


/** columns and relationships of "pokemon_v2_characteristic" */
export type CharacteristicCharacteristicdescriptionsArgs = {
  distinct_on?: InputMaybe<Array<Characteristicdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Characteristicdescription_Order_By>>;
  where?: InputMaybe<Characteristicdescription_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_characteristic" */
export type CharacteristicCharacteristicdescriptions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Characteristicdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Characteristicdescription_Order_By>>;
  where?: InputMaybe<Characteristicdescription_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_characteristic" */
export type Characteristic_Aggregate = {
  __typename?: 'characteristic_aggregate';
  aggregate?: Maybe<Characteristic_Aggregate_Fields>;
  nodes: Array<Characteristic>;
};

export type Characteristic_Aggregate_Bool_Exp = {
  count?: InputMaybe<Characteristic_Aggregate_Bool_Exp_Count>;
};

export type Characteristic_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Characteristic_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Characteristic_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_characteristic" */
export type Characteristic_Aggregate_Fields = {
  __typename?: 'characteristic_aggregate_fields';
  avg?: Maybe<Characteristic_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Characteristic_Max_Fields>;
  min?: Maybe<Characteristic_Min_Fields>;
  stddev?: Maybe<Characteristic_Stddev_Fields>;
  stddev_pop?: Maybe<Characteristic_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Characteristic_Stddev_Samp_Fields>;
  sum?: Maybe<Characteristic_Sum_Fields>;
  var_pop?: Maybe<Characteristic_Var_Pop_Fields>;
  var_samp?: Maybe<Characteristic_Var_Samp_Fields>;
  variance?: Maybe<Characteristic_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_characteristic" */
export type Characteristic_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Characteristic_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_characteristic" */
export type Characteristic_Aggregate_Order_By = {
  avg?: InputMaybe<Characteristic_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Characteristic_Max_Order_By>;
  min?: InputMaybe<Characteristic_Min_Order_By>;
  stddev?: InputMaybe<Characteristic_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Characteristic_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Characteristic_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Characteristic_Sum_Order_By>;
  var_pop?: InputMaybe<Characteristic_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Characteristic_Var_Samp_Order_By>;
  variance?: InputMaybe<Characteristic_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Characteristic_Avg_Fields = {
  __typename?: 'characteristic_avg_fields';
  gene_mod_5?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_characteristic" */
export type Characteristic_Avg_Order_By = {
  gene_mod_5?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stat_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_characteristic". All fields are combined with a logical 'AND'. */
export type Characteristic_Bool_Exp = {
  _and?: InputMaybe<Array<Characteristic_Bool_Exp>>;
  _not?: InputMaybe<Characteristic_Bool_Exp>;
  _or?: InputMaybe<Array<Characteristic_Bool_Exp>>;
  characteristicdescriptions?: InputMaybe<Characteristicdescription_Bool_Exp>;
  characteristicdescriptions_aggregate?: InputMaybe<Characteristicdescription_Aggregate_Bool_Exp>;
  gene_mod_5?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  stat?: InputMaybe<Stat_Bool_Exp>;
  stat_id?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Characteristic_Max_Fields = {
  __typename?: 'characteristic_max_fields';
  gene_mod_5?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  stat_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_characteristic" */
export type Characteristic_Max_Order_By = {
  gene_mod_5?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stat_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Characteristic_Min_Fields = {
  __typename?: 'characteristic_min_fields';
  gene_mod_5?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  stat_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_characteristic" */
export type Characteristic_Min_Order_By = {
  gene_mod_5?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stat_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_characteristic". */
export type Characteristic_Order_By = {
  characteristicdescriptions_aggregate?: InputMaybe<Characteristicdescription_Aggregate_Order_By>;
  gene_mod_5?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stat?: InputMaybe<Stat_Order_By>;
  stat_id?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_characteristic" */
export enum Characteristic_Select_Column {
  /** column name */
  GeneMod_5 = 'gene_mod_5',
  /** column name */
  Id = 'id',
  /** column name */
  StatId = 'stat_id'
}

/** aggregate stddev on columns */
export type Characteristic_Stddev_Fields = {
  __typename?: 'characteristic_stddev_fields';
  gene_mod_5?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_characteristic" */
export type Characteristic_Stddev_Order_By = {
  gene_mod_5?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stat_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Characteristic_Stddev_Pop_Fields = {
  __typename?: 'characteristic_stddev_pop_fields';
  gene_mod_5?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_characteristic" */
export type Characteristic_Stddev_Pop_Order_By = {
  gene_mod_5?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stat_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Characteristic_Stddev_Samp_Fields = {
  __typename?: 'characteristic_stddev_samp_fields';
  gene_mod_5?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_characteristic" */
export type Characteristic_Stddev_Samp_Order_By = {
  gene_mod_5?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stat_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Characteristic_Sum_Fields = {
  __typename?: 'characteristic_sum_fields';
  gene_mod_5?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  stat_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_characteristic" */
export type Characteristic_Sum_Order_By = {
  gene_mod_5?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stat_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Characteristic_Var_Pop_Fields = {
  __typename?: 'characteristic_var_pop_fields';
  gene_mod_5?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_characteristic" */
export type Characteristic_Var_Pop_Order_By = {
  gene_mod_5?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stat_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Characteristic_Var_Samp_Fields = {
  __typename?: 'characteristic_var_samp_fields';
  gene_mod_5?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_characteristic" */
export type Characteristic_Var_Samp_Order_By = {
  gene_mod_5?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stat_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Characteristic_Variance_Fields = {
  __typename?: 'characteristic_variance_fields';
  gene_mod_5?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_characteristic" */
export type Characteristic_Variance_Order_By = {
  gene_mod_5?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stat_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_characteristicdescription" */
export type Characteristicdescription = {
  __typename?: 'characteristicdescription';
  /** An object relationship */
  characteristic?: Maybe<Characteristic>;
  characteristic_id?: Maybe<Scalars['Int']['output']>;
  description: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_characteristicdescription" */
export type Characteristicdescription_Aggregate = {
  __typename?: 'characteristicdescription_aggregate';
  aggregate?: Maybe<Characteristicdescription_Aggregate_Fields>;
  nodes: Array<Characteristicdescription>;
};

export type Characteristicdescription_Aggregate_Bool_Exp = {
  count?: InputMaybe<Characteristicdescription_Aggregate_Bool_Exp_Count>;
};

export type Characteristicdescription_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Characteristicdescription_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Characteristicdescription_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_characteristicdescription" */
export type Characteristicdescription_Aggregate_Fields = {
  __typename?: 'characteristicdescription_aggregate_fields';
  avg?: Maybe<Characteristicdescription_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Characteristicdescription_Max_Fields>;
  min?: Maybe<Characteristicdescription_Min_Fields>;
  stddev?: Maybe<Characteristicdescription_Stddev_Fields>;
  stddev_pop?: Maybe<Characteristicdescription_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Characteristicdescription_Stddev_Samp_Fields>;
  sum?: Maybe<Characteristicdescription_Sum_Fields>;
  var_pop?: Maybe<Characteristicdescription_Var_Pop_Fields>;
  var_samp?: Maybe<Characteristicdescription_Var_Samp_Fields>;
  variance?: Maybe<Characteristicdescription_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_characteristicdescription" */
export type Characteristicdescription_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Characteristicdescription_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_characteristicdescription" */
export type Characteristicdescription_Aggregate_Order_By = {
  avg?: InputMaybe<Characteristicdescription_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Characteristicdescription_Max_Order_By>;
  min?: InputMaybe<Characteristicdescription_Min_Order_By>;
  stddev?: InputMaybe<Characteristicdescription_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Characteristicdescription_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Characteristicdescription_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Characteristicdescription_Sum_Order_By>;
  var_pop?: InputMaybe<Characteristicdescription_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Characteristicdescription_Var_Samp_Order_By>;
  variance?: InputMaybe<Characteristicdescription_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Characteristicdescription_Avg_Fields = {
  __typename?: 'characteristicdescription_avg_fields';
  characteristic_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_characteristicdescription" */
export type Characteristicdescription_Avg_Order_By = {
  characteristic_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_characteristicdescription". All fields are combined with a logical 'AND'. */
export type Characteristicdescription_Bool_Exp = {
  _and?: InputMaybe<Array<Characteristicdescription_Bool_Exp>>;
  _not?: InputMaybe<Characteristicdescription_Bool_Exp>;
  _or?: InputMaybe<Array<Characteristicdescription_Bool_Exp>>;
  characteristic?: InputMaybe<Characteristic_Bool_Exp>;
  characteristic_id?: InputMaybe<Int_Comparison_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Characteristicdescription_Max_Fields = {
  __typename?: 'characteristicdescription_max_fields';
  characteristic_id?: Maybe<Scalars['Int']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_characteristicdescription" */
export type Characteristicdescription_Max_Order_By = {
  characteristic_id?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Characteristicdescription_Min_Fields = {
  __typename?: 'characteristicdescription_min_fields';
  characteristic_id?: Maybe<Scalars['Int']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_characteristicdescription" */
export type Characteristicdescription_Min_Order_By = {
  characteristic_id?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_characteristicdescription". */
export type Characteristicdescription_Order_By = {
  characteristic?: InputMaybe<Characteristic_Order_By>;
  characteristic_id?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_characteristicdescription" */
export enum Characteristicdescription_Select_Column {
  /** column name */
  CharacteristicId = 'characteristic_id',
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id'
}

/** aggregate stddev on columns */
export type Characteristicdescription_Stddev_Fields = {
  __typename?: 'characteristicdescription_stddev_fields';
  characteristic_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_characteristicdescription" */
export type Characteristicdescription_Stddev_Order_By = {
  characteristic_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Characteristicdescription_Stddev_Pop_Fields = {
  __typename?: 'characteristicdescription_stddev_pop_fields';
  characteristic_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_characteristicdescription" */
export type Characteristicdescription_Stddev_Pop_Order_By = {
  characteristic_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Characteristicdescription_Stddev_Samp_Fields = {
  __typename?: 'characteristicdescription_stddev_samp_fields';
  characteristic_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_characteristicdescription" */
export type Characteristicdescription_Stddev_Samp_Order_By = {
  characteristic_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Characteristicdescription_Sum_Fields = {
  __typename?: 'characteristicdescription_sum_fields';
  characteristic_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_characteristicdescription" */
export type Characteristicdescription_Sum_Order_By = {
  characteristic_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Characteristicdescription_Var_Pop_Fields = {
  __typename?: 'characteristicdescription_var_pop_fields';
  characteristic_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_characteristicdescription" */
export type Characteristicdescription_Var_Pop_Order_By = {
  characteristic_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Characteristicdescription_Var_Samp_Fields = {
  __typename?: 'characteristicdescription_var_samp_fields';
  characteristic_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_characteristicdescription" */
export type Characteristicdescription_Var_Samp_Order_By = {
  characteristic_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Characteristicdescription_Variance_Fields = {
  __typename?: 'characteristicdescription_variance_fields';
  characteristic_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_characteristicdescription" */
export type Characteristicdescription_Variance_Order_By = {
  characteristic_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_contestcombo" */
export type Contestcombo = {
  __typename?: 'contestcombo';
  /** An object relationship */
  MoveBySecondMoveId?: Maybe<Move>;
  first_move_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  /** An object relationship */
  move?: Maybe<Move>;
  second_move_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_contestcombo" */
export type Contestcombo_Aggregate = {
  __typename?: 'contestcombo_aggregate';
  aggregate?: Maybe<Contestcombo_Aggregate_Fields>;
  nodes: Array<Contestcombo>;
};

export type Contestcombo_Aggregate_Bool_Exp = {
  count?: InputMaybe<Contestcombo_Aggregate_Bool_Exp_Count>;
};

export type Contestcombo_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Contestcombo_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Contestcombo_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_contestcombo" */
export type Contestcombo_Aggregate_Fields = {
  __typename?: 'contestcombo_aggregate_fields';
  avg?: Maybe<Contestcombo_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Contestcombo_Max_Fields>;
  min?: Maybe<Contestcombo_Min_Fields>;
  stddev?: Maybe<Contestcombo_Stddev_Fields>;
  stddev_pop?: Maybe<Contestcombo_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Contestcombo_Stddev_Samp_Fields>;
  sum?: Maybe<Contestcombo_Sum_Fields>;
  var_pop?: Maybe<Contestcombo_Var_Pop_Fields>;
  var_samp?: Maybe<Contestcombo_Var_Samp_Fields>;
  variance?: Maybe<Contestcombo_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_contestcombo" */
export type Contestcombo_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Contestcombo_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_contestcombo" */
export type Contestcombo_Aggregate_Order_By = {
  avg?: InputMaybe<Contestcombo_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Contestcombo_Max_Order_By>;
  min?: InputMaybe<Contestcombo_Min_Order_By>;
  stddev?: InputMaybe<Contestcombo_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Contestcombo_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Contestcombo_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Contestcombo_Sum_Order_By>;
  var_pop?: InputMaybe<Contestcombo_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Contestcombo_Var_Samp_Order_By>;
  variance?: InputMaybe<Contestcombo_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Contestcombo_Avg_Fields = {
  __typename?: 'contestcombo_avg_fields';
  first_move_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  second_move_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_contestcombo" */
export type Contestcombo_Avg_Order_By = {
  first_move_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  second_move_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_contestcombo". All fields are combined with a logical 'AND'. */
export type Contestcombo_Bool_Exp = {
  MoveBySecondMoveId?: InputMaybe<Move_Bool_Exp>;
  _and?: InputMaybe<Array<Contestcombo_Bool_Exp>>;
  _not?: InputMaybe<Contestcombo_Bool_Exp>;
  _or?: InputMaybe<Array<Contestcombo_Bool_Exp>>;
  first_move_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  move?: InputMaybe<Move_Bool_Exp>;
  second_move_id?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Contestcombo_Max_Fields = {
  __typename?: 'contestcombo_max_fields';
  first_move_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  second_move_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_contestcombo" */
export type Contestcombo_Max_Order_By = {
  first_move_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  second_move_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Contestcombo_Min_Fields = {
  __typename?: 'contestcombo_min_fields';
  first_move_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  second_move_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_contestcombo" */
export type Contestcombo_Min_Order_By = {
  first_move_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  second_move_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_contestcombo". */
export type Contestcombo_Order_By = {
  MoveBySecondMoveId?: InputMaybe<Move_Order_By>;
  first_move_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move?: InputMaybe<Move_Order_By>;
  second_move_id?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_contestcombo" */
export enum Contestcombo_Select_Column {
  /** column name */
  FirstMoveId = 'first_move_id',
  /** column name */
  Id = 'id',
  /** column name */
  SecondMoveId = 'second_move_id'
}

/** aggregate stddev on columns */
export type Contestcombo_Stddev_Fields = {
  __typename?: 'contestcombo_stddev_fields';
  first_move_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  second_move_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_contestcombo" */
export type Contestcombo_Stddev_Order_By = {
  first_move_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  second_move_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Contestcombo_Stddev_Pop_Fields = {
  __typename?: 'contestcombo_stddev_pop_fields';
  first_move_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  second_move_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_contestcombo" */
export type Contestcombo_Stddev_Pop_Order_By = {
  first_move_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  second_move_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Contestcombo_Stddev_Samp_Fields = {
  __typename?: 'contestcombo_stddev_samp_fields';
  first_move_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  second_move_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_contestcombo" */
export type Contestcombo_Stddev_Samp_Order_By = {
  first_move_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  second_move_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Contestcombo_Sum_Fields = {
  __typename?: 'contestcombo_sum_fields';
  first_move_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  second_move_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_contestcombo" */
export type Contestcombo_Sum_Order_By = {
  first_move_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  second_move_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Contestcombo_Var_Pop_Fields = {
  __typename?: 'contestcombo_var_pop_fields';
  first_move_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  second_move_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_contestcombo" */
export type Contestcombo_Var_Pop_Order_By = {
  first_move_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  second_move_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Contestcombo_Var_Samp_Fields = {
  __typename?: 'contestcombo_var_samp_fields';
  first_move_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  second_move_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_contestcombo" */
export type Contestcombo_Var_Samp_Order_By = {
  first_move_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  second_move_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Contestcombo_Variance_Fields = {
  __typename?: 'contestcombo_variance_fields';
  first_move_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  second_move_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_contestcombo" */
export type Contestcombo_Variance_Order_By = {
  first_move_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  second_move_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_contesteffect" */
export type Contesteffect = {
  __typename?: 'contesteffect';
  appeal: Scalars['Int']['output'];
  /** An array relationship */
  contesteffecteffecttexts: Array<Contesteffecteffecttext>;
  /** An aggregate relationship */
  contesteffecteffecttexts_aggregate: Contesteffecteffecttext_Aggregate;
  /** An array relationship */
  contesteffectflavortexts: Array<Contesteffectflavortext>;
  /** An aggregate relationship */
  contesteffectflavortexts_aggregate: Contesteffectflavortext_Aggregate;
  id: Scalars['Int']['output'];
  jam: Scalars['Int']['output'];
  /** An array relationship */
  moves: Array<Move>;
  /** An aggregate relationship */
  moves_aggregate: Move_Aggregate;
};


/** columns and relationships of "pokemon_v2_contesteffect" */
export type ContesteffectContesteffecteffecttextsArgs = {
  distinct_on?: InputMaybe<Array<Contesteffecteffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Contesteffecteffecttext_Order_By>>;
  where?: InputMaybe<Contesteffecteffecttext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_contesteffect" */
export type ContesteffectContesteffecteffecttexts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Contesteffecteffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Contesteffecteffecttext_Order_By>>;
  where?: InputMaybe<Contesteffecteffecttext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_contesteffect" */
export type ContesteffectContesteffectflavortextsArgs = {
  distinct_on?: InputMaybe<Array<Contesteffectflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Contesteffectflavortext_Order_By>>;
  where?: InputMaybe<Contesteffectflavortext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_contesteffect" */
export type ContesteffectContesteffectflavortexts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Contesteffectflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Contesteffectflavortext_Order_By>>;
  where?: InputMaybe<Contesteffectflavortext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_contesteffect" */
export type ContesteffectMovesArgs = {
  distinct_on?: InputMaybe<Array<Move_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Move_Order_By>>;
  where?: InputMaybe<Move_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_contesteffect" */
export type ContesteffectMoves_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Move_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Move_Order_By>>;
  where?: InputMaybe<Move_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_contesteffect" */
export type Contesteffect_Aggregate = {
  __typename?: 'contesteffect_aggregate';
  aggregate?: Maybe<Contesteffect_Aggregate_Fields>;
  nodes: Array<Contesteffect>;
};

/** aggregate fields of "pokemon_v2_contesteffect" */
export type Contesteffect_Aggregate_Fields = {
  __typename?: 'contesteffect_aggregate_fields';
  avg?: Maybe<Contesteffect_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Contesteffect_Max_Fields>;
  min?: Maybe<Contesteffect_Min_Fields>;
  stddev?: Maybe<Contesteffect_Stddev_Fields>;
  stddev_pop?: Maybe<Contesteffect_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Contesteffect_Stddev_Samp_Fields>;
  sum?: Maybe<Contesteffect_Sum_Fields>;
  var_pop?: Maybe<Contesteffect_Var_Pop_Fields>;
  var_samp?: Maybe<Contesteffect_Var_Samp_Fields>;
  variance?: Maybe<Contesteffect_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_contesteffect" */
export type Contesteffect_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Contesteffect_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Contesteffect_Avg_Fields = {
  __typename?: 'contesteffect_avg_fields';
  appeal?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  jam?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_contesteffect". All fields are combined with a logical 'AND'. */
export type Contesteffect_Bool_Exp = {
  _and?: InputMaybe<Array<Contesteffect_Bool_Exp>>;
  _not?: InputMaybe<Contesteffect_Bool_Exp>;
  _or?: InputMaybe<Array<Contesteffect_Bool_Exp>>;
  appeal?: InputMaybe<Int_Comparison_Exp>;
  contesteffecteffecttexts?: InputMaybe<Contesteffecteffecttext_Bool_Exp>;
  contesteffecteffecttexts_aggregate?: InputMaybe<Contesteffecteffecttext_Aggregate_Bool_Exp>;
  contesteffectflavortexts?: InputMaybe<Contesteffectflavortext_Bool_Exp>;
  contesteffectflavortexts_aggregate?: InputMaybe<Contesteffectflavortext_Aggregate_Bool_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  jam?: InputMaybe<Int_Comparison_Exp>;
  moves?: InputMaybe<Move_Bool_Exp>;
  moves_aggregate?: InputMaybe<Move_Aggregate_Bool_Exp>;
};

/** aggregate max on columns */
export type Contesteffect_Max_Fields = {
  __typename?: 'contesteffect_max_fields';
  appeal?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  jam?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Contesteffect_Min_Fields = {
  __typename?: 'contesteffect_min_fields';
  appeal?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  jam?: Maybe<Scalars['Int']['output']>;
};

/** Ordering options when selecting data from "pokemon_v2_contesteffect". */
export type Contesteffect_Order_By = {
  appeal?: InputMaybe<Order_By>;
  contesteffecteffecttexts_aggregate?: InputMaybe<Contesteffecteffecttext_Aggregate_Order_By>;
  contesteffectflavortexts_aggregate?: InputMaybe<Contesteffectflavortext_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  jam?: InputMaybe<Order_By>;
  moves_aggregate?: InputMaybe<Move_Aggregate_Order_By>;
};

/** select columns of table "pokemon_v2_contesteffect" */
export enum Contesteffect_Select_Column {
  /** column name */
  Appeal = 'appeal',
  /** column name */
  Id = 'id',
  /** column name */
  Jam = 'jam'
}

/** aggregate stddev on columns */
export type Contesteffect_Stddev_Fields = {
  __typename?: 'contesteffect_stddev_fields';
  appeal?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  jam?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Contesteffect_Stddev_Pop_Fields = {
  __typename?: 'contesteffect_stddev_pop_fields';
  appeal?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  jam?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Contesteffect_Stddev_Samp_Fields = {
  __typename?: 'contesteffect_stddev_samp_fields';
  appeal?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  jam?: Maybe<Scalars['Float']['output']>;
};

/** aggregate sum on columns */
export type Contesteffect_Sum_Fields = {
  __typename?: 'contesteffect_sum_fields';
  appeal?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  jam?: Maybe<Scalars['Int']['output']>;
};

/** aggregate var_pop on columns */
export type Contesteffect_Var_Pop_Fields = {
  __typename?: 'contesteffect_var_pop_fields';
  appeal?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  jam?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Contesteffect_Var_Samp_Fields = {
  __typename?: 'contesteffect_var_samp_fields';
  appeal?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  jam?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Contesteffect_Variance_Fields = {
  __typename?: 'contesteffect_variance_fields';
  appeal?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  jam?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_contesteffecteffecttext" */
export type Contesteffecteffecttext = {
  __typename?: 'contesteffecteffecttext';
  contest_effect_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  contesteffect?: Maybe<Contesteffect>;
  effect: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_contesteffecteffecttext" */
export type Contesteffecteffecttext_Aggregate = {
  __typename?: 'contesteffecteffecttext_aggregate';
  aggregate?: Maybe<Contesteffecteffecttext_Aggregate_Fields>;
  nodes: Array<Contesteffecteffecttext>;
};

export type Contesteffecteffecttext_Aggregate_Bool_Exp = {
  count?: InputMaybe<Contesteffecteffecttext_Aggregate_Bool_Exp_Count>;
};

export type Contesteffecteffecttext_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Contesteffecteffecttext_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Contesteffecteffecttext_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_contesteffecteffecttext" */
export type Contesteffecteffecttext_Aggregate_Fields = {
  __typename?: 'contesteffecteffecttext_aggregate_fields';
  avg?: Maybe<Contesteffecteffecttext_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Contesteffecteffecttext_Max_Fields>;
  min?: Maybe<Contesteffecteffecttext_Min_Fields>;
  stddev?: Maybe<Contesteffecteffecttext_Stddev_Fields>;
  stddev_pop?: Maybe<Contesteffecteffecttext_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Contesteffecteffecttext_Stddev_Samp_Fields>;
  sum?: Maybe<Contesteffecteffecttext_Sum_Fields>;
  var_pop?: Maybe<Contesteffecteffecttext_Var_Pop_Fields>;
  var_samp?: Maybe<Contesteffecteffecttext_Var_Samp_Fields>;
  variance?: Maybe<Contesteffecteffecttext_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_contesteffecteffecttext" */
export type Contesteffecteffecttext_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Contesteffecteffecttext_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_contesteffecteffecttext" */
export type Contesteffecteffecttext_Aggregate_Order_By = {
  avg?: InputMaybe<Contesteffecteffecttext_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Contesteffecteffecttext_Max_Order_By>;
  min?: InputMaybe<Contesteffecteffecttext_Min_Order_By>;
  stddev?: InputMaybe<Contesteffecteffecttext_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Contesteffecteffecttext_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Contesteffecteffecttext_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Contesteffecteffecttext_Sum_Order_By>;
  var_pop?: InputMaybe<Contesteffecteffecttext_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Contesteffecteffecttext_Var_Samp_Order_By>;
  variance?: InputMaybe<Contesteffecteffecttext_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Contesteffecteffecttext_Avg_Fields = {
  __typename?: 'contesteffecteffecttext_avg_fields';
  contest_effect_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_contesteffecteffecttext" */
export type Contesteffecteffecttext_Avg_Order_By = {
  contest_effect_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_contesteffecteffecttext". All fields are combined with a logical 'AND'. */
export type Contesteffecteffecttext_Bool_Exp = {
  _and?: InputMaybe<Array<Contesteffecteffecttext_Bool_Exp>>;
  _not?: InputMaybe<Contesteffecteffecttext_Bool_Exp>;
  _or?: InputMaybe<Array<Contesteffecteffecttext_Bool_Exp>>;
  contest_effect_id?: InputMaybe<Int_Comparison_Exp>;
  contesteffect?: InputMaybe<Contesteffect_Bool_Exp>;
  effect?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Contesteffecteffecttext_Max_Fields = {
  __typename?: 'contesteffecteffecttext_max_fields';
  contest_effect_id?: Maybe<Scalars['Int']['output']>;
  effect?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_contesteffecteffecttext" */
export type Contesteffecteffecttext_Max_Order_By = {
  contest_effect_id?: InputMaybe<Order_By>;
  effect?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Contesteffecteffecttext_Min_Fields = {
  __typename?: 'contesteffecteffecttext_min_fields';
  contest_effect_id?: Maybe<Scalars['Int']['output']>;
  effect?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_contesteffecteffecttext" */
export type Contesteffecteffecttext_Min_Order_By = {
  contest_effect_id?: InputMaybe<Order_By>;
  effect?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_contesteffecteffecttext". */
export type Contesteffecteffecttext_Order_By = {
  contest_effect_id?: InputMaybe<Order_By>;
  contesteffect?: InputMaybe<Contesteffect_Order_By>;
  effect?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_contesteffecteffecttext" */
export enum Contesteffecteffecttext_Select_Column {
  /** column name */
  ContestEffectId = 'contest_effect_id',
  /** column name */
  Effect = 'effect',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id'
}

/** aggregate stddev on columns */
export type Contesteffecteffecttext_Stddev_Fields = {
  __typename?: 'contesteffecteffecttext_stddev_fields';
  contest_effect_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_contesteffecteffecttext" */
export type Contesteffecteffecttext_Stddev_Order_By = {
  contest_effect_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Contesteffecteffecttext_Stddev_Pop_Fields = {
  __typename?: 'contesteffecteffecttext_stddev_pop_fields';
  contest_effect_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_contesteffecteffecttext" */
export type Contesteffecteffecttext_Stddev_Pop_Order_By = {
  contest_effect_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Contesteffecteffecttext_Stddev_Samp_Fields = {
  __typename?: 'contesteffecteffecttext_stddev_samp_fields';
  contest_effect_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_contesteffecteffecttext" */
export type Contesteffecteffecttext_Stddev_Samp_Order_By = {
  contest_effect_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Contesteffecteffecttext_Sum_Fields = {
  __typename?: 'contesteffecteffecttext_sum_fields';
  contest_effect_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_contesteffecteffecttext" */
export type Contesteffecteffecttext_Sum_Order_By = {
  contest_effect_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Contesteffecteffecttext_Var_Pop_Fields = {
  __typename?: 'contesteffecteffecttext_var_pop_fields';
  contest_effect_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_contesteffecteffecttext" */
export type Contesteffecteffecttext_Var_Pop_Order_By = {
  contest_effect_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Contesteffecteffecttext_Var_Samp_Fields = {
  __typename?: 'contesteffecteffecttext_var_samp_fields';
  contest_effect_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_contesteffecteffecttext" */
export type Contesteffecteffecttext_Var_Samp_Order_By = {
  contest_effect_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Contesteffecteffecttext_Variance_Fields = {
  __typename?: 'contesteffecteffecttext_variance_fields';
  contest_effect_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_contesteffecteffecttext" */
export type Contesteffecteffecttext_Variance_Order_By = {
  contest_effect_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_contesteffectflavortext" */
export type Contesteffectflavortext = {
  __typename?: 'contesteffectflavortext';
  contest_effect_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  contesteffect?: Maybe<Contesteffect>;
  flavor_text: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_contesteffectflavortext" */
export type Contesteffectflavortext_Aggregate = {
  __typename?: 'contesteffectflavortext_aggregate';
  aggregate?: Maybe<Contesteffectflavortext_Aggregate_Fields>;
  nodes: Array<Contesteffectflavortext>;
};

export type Contesteffectflavortext_Aggregate_Bool_Exp = {
  count?: InputMaybe<Contesteffectflavortext_Aggregate_Bool_Exp_Count>;
};

export type Contesteffectflavortext_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Contesteffectflavortext_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Contesteffectflavortext_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_contesteffectflavortext" */
export type Contesteffectflavortext_Aggregate_Fields = {
  __typename?: 'contesteffectflavortext_aggregate_fields';
  avg?: Maybe<Contesteffectflavortext_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Contesteffectflavortext_Max_Fields>;
  min?: Maybe<Contesteffectflavortext_Min_Fields>;
  stddev?: Maybe<Contesteffectflavortext_Stddev_Fields>;
  stddev_pop?: Maybe<Contesteffectflavortext_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Contesteffectflavortext_Stddev_Samp_Fields>;
  sum?: Maybe<Contesteffectflavortext_Sum_Fields>;
  var_pop?: Maybe<Contesteffectflavortext_Var_Pop_Fields>;
  var_samp?: Maybe<Contesteffectflavortext_Var_Samp_Fields>;
  variance?: Maybe<Contesteffectflavortext_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_contesteffectflavortext" */
export type Contesteffectflavortext_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Contesteffectflavortext_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_contesteffectflavortext" */
export type Contesteffectflavortext_Aggregate_Order_By = {
  avg?: InputMaybe<Contesteffectflavortext_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Contesteffectflavortext_Max_Order_By>;
  min?: InputMaybe<Contesteffectflavortext_Min_Order_By>;
  stddev?: InputMaybe<Contesteffectflavortext_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Contesteffectflavortext_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Contesteffectflavortext_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Contesteffectflavortext_Sum_Order_By>;
  var_pop?: InputMaybe<Contesteffectflavortext_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Contesteffectflavortext_Var_Samp_Order_By>;
  variance?: InputMaybe<Contesteffectflavortext_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Contesteffectflavortext_Avg_Fields = {
  __typename?: 'contesteffectflavortext_avg_fields';
  contest_effect_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_contesteffectflavortext" */
export type Contesteffectflavortext_Avg_Order_By = {
  contest_effect_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_contesteffectflavortext". All fields are combined with a logical 'AND'. */
export type Contesteffectflavortext_Bool_Exp = {
  _and?: InputMaybe<Array<Contesteffectflavortext_Bool_Exp>>;
  _not?: InputMaybe<Contesteffectflavortext_Bool_Exp>;
  _or?: InputMaybe<Array<Contesteffectflavortext_Bool_Exp>>;
  contest_effect_id?: InputMaybe<Int_Comparison_Exp>;
  contesteffect?: InputMaybe<Contesteffect_Bool_Exp>;
  flavor_text?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Contesteffectflavortext_Max_Fields = {
  __typename?: 'contesteffectflavortext_max_fields';
  contest_effect_id?: Maybe<Scalars['Int']['output']>;
  flavor_text?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_contesteffectflavortext" */
export type Contesteffectflavortext_Max_Order_By = {
  contest_effect_id?: InputMaybe<Order_By>;
  flavor_text?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Contesteffectflavortext_Min_Fields = {
  __typename?: 'contesteffectflavortext_min_fields';
  contest_effect_id?: Maybe<Scalars['Int']['output']>;
  flavor_text?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_contesteffectflavortext" */
export type Contesteffectflavortext_Min_Order_By = {
  contest_effect_id?: InputMaybe<Order_By>;
  flavor_text?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_contesteffectflavortext". */
export type Contesteffectflavortext_Order_By = {
  contest_effect_id?: InputMaybe<Order_By>;
  contesteffect?: InputMaybe<Contesteffect_Order_By>;
  flavor_text?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_contesteffectflavortext" */
export enum Contesteffectflavortext_Select_Column {
  /** column name */
  ContestEffectId = 'contest_effect_id',
  /** column name */
  FlavorText = 'flavor_text',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id'
}

/** aggregate stddev on columns */
export type Contesteffectflavortext_Stddev_Fields = {
  __typename?: 'contesteffectflavortext_stddev_fields';
  contest_effect_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_contesteffectflavortext" */
export type Contesteffectflavortext_Stddev_Order_By = {
  contest_effect_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Contesteffectflavortext_Stddev_Pop_Fields = {
  __typename?: 'contesteffectflavortext_stddev_pop_fields';
  contest_effect_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_contesteffectflavortext" */
export type Contesteffectflavortext_Stddev_Pop_Order_By = {
  contest_effect_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Contesteffectflavortext_Stddev_Samp_Fields = {
  __typename?: 'contesteffectflavortext_stddev_samp_fields';
  contest_effect_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_contesteffectflavortext" */
export type Contesteffectflavortext_Stddev_Samp_Order_By = {
  contest_effect_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Contesteffectflavortext_Sum_Fields = {
  __typename?: 'contesteffectflavortext_sum_fields';
  contest_effect_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_contesteffectflavortext" */
export type Contesteffectflavortext_Sum_Order_By = {
  contest_effect_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Contesteffectflavortext_Var_Pop_Fields = {
  __typename?: 'contesteffectflavortext_var_pop_fields';
  contest_effect_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_contesteffectflavortext" */
export type Contesteffectflavortext_Var_Pop_Order_By = {
  contest_effect_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Contesteffectflavortext_Var_Samp_Fields = {
  __typename?: 'contesteffectflavortext_var_samp_fields';
  contest_effect_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_contesteffectflavortext" */
export type Contesteffectflavortext_Var_Samp_Order_By = {
  contest_effect_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Contesteffectflavortext_Variance_Fields = {
  __typename?: 'contesteffectflavortext_variance_fields';
  contest_effect_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_contesteffectflavortext" */
export type Contesteffectflavortext_Variance_Order_By = {
  contest_effect_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_contesttype" */
export type Contesttype = {
  __typename?: 'contesttype';
  /** An object relationship */
  berryflavor?: Maybe<Berryflavor>;
  /** An array relationship */
  berryflavors: Array<Berryflavor>;
  /** An aggregate relationship */
  berryflavors_aggregate: Berryflavor_Aggregate;
  /** An array relationship */
  contesttypenames: Array<Contesttypename>;
  /** An aggregate relationship */
  contesttypenames_aggregate: Contesttypename_Aggregate;
  id: Scalars['Int']['output'];
  /** An array relationship */
  moves: Array<Move>;
  /** An aggregate relationship */
  moves_aggregate: Move_Aggregate;
  name: Scalars['String']['output'];
};


/** columns and relationships of "pokemon_v2_contesttype" */
export type ContesttypeBerryflavorsArgs = {
  distinct_on?: InputMaybe<Array<Berryflavor_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Berryflavor_Order_By>>;
  where?: InputMaybe<Berryflavor_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_contesttype" */
export type ContesttypeBerryflavors_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Berryflavor_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Berryflavor_Order_By>>;
  where?: InputMaybe<Berryflavor_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_contesttype" */
export type ContesttypeContesttypenamesArgs = {
  distinct_on?: InputMaybe<Array<Contesttypename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Contesttypename_Order_By>>;
  where?: InputMaybe<Contesttypename_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_contesttype" */
export type ContesttypeContesttypenames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Contesttypename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Contesttypename_Order_By>>;
  where?: InputMaybe<Contesttypename_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_contesttype" */
export type ContesttypeMovesArgs = {
  distinct_on?: InputMaybe<Array<Move_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Move_Order_By>>;
  where?: InputMaybe<Move_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_contesttype" */
export type ContesttypeMoves_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Move_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Move_Order_By>>;
  where?: InputMaybe<Move_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_contesttype" */
export type Contesttype_Aggregate = {
  __typename?: 'contesttype_aggregate';
  aggregate?: Maybe<Contesttype_Aggregate_Fields>;
  nodes: Array<Contesttype>;
};

/** aggregate fields of "pokemon_v2_contesttype" */
export type Contesttype_Aggregate_Fields = {
  __typename?: 'contesttype_aggregate_fields';
  avg?: Maybe<Contesttype_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Contesttype_Max_Fields>;
  min?: Maybe<Contesttype_Min_Fields>;
  stddev?: Maybe<Contesttype_Stddev_Fields>;
  stddev_pop?: Maybe<Contesttype_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Contesttype_Stddev_Samp_Fields>;
  sum?: Maybe<Contesttype_Sum_Fields>;
  var_pop?: Maybe<Contesttype_Var_Pop_Fields>;
  var_samp?: Maybe<Contesttype_Var_Samp_Fields>;
  variance?: Maybe<Contesttype_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_contesttype" */
export type Contesttype_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Contesttype_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Contesttype_Avg_Fields = {
  __typename?: 'contesttype_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_contesttype". All fields are combined with a logical 'AND'. */
export type Contesttype_Bool_Exp = {
  _and?: InputMaybe<Array<Contesttype_Bool_Exp>>;
  _not?: InputMaybe<Contesttype_Bool_Exp>;
  _or?: InputMaybe<Array<Contesttype_Bool_Exp>>;
  berryflavor?: InputMaybe<Berryflavor_Bool_Exp>;
  berryflavors?: InputMaybe<Berryflavor_Bool_Exp>;
  berryflavors_aggregate?: InputMaybe<Berryflavor_Aggregate_Bool_Exp>;
  contesttypenames?: InputMaybe<Contesttypename_Bool_Exp>;
  contesttypenames_aggregate?: InputMaybe<Contesttypename_Aggregate_Bool_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  moves?: InputMaybe<Move_Bool_Exp>;
  moves_aggregate?: InputMaybe<Move_Aggregate_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** aggregate max on columns */
export type Contesttype_Max_Fields = {
  __typename?: 'contesttype_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Contesttype_Min_Fields = {
  __typename?: 'contesttype_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** Ordering options when selecting data from "pokemon_v2_contesttype". */
export type Contesttype_Order_By = {
  berryflavor?: InputMaybe<Berryflavor_Order_By>;
  berryflavors_aggregate?: InputMaybe<Berryflavor_Aggregate_Order_By>;
  contesttypenames_aggregate?: InputMaybe<Contesttypename_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  moves_aggregate?: InputMaybe<Move_Aggregate_Order_By>;
  name?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_contesttype" */
export enum Contesttype_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Contesttype_Stddev_Fields = {
  __typename?: 'contesttype_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Contesttype_Stddev_Pop_Fields = {
  __typename?: 'contesttype_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Contesttype_Stddev_Samp_Fields = {
  __typename?: 'contesttype_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate sum on columns */
export type Contesttype_Sum_Fields = {
  __typename?: 'contesttype_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate var_pop on columns */
export type Contesttype_Var_Pop_Fields = {
  __typename?: 'contesttype_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Contesttype_Var_Samp_Fields = {
  __typename?: 'contesttype_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Contesttype_Variance_Fields = {
  __typename?: 'contesttype_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_contesttypename" */
export type Contesttypename = {
  __typename?: 'contesttypename';
  color: Scalars['String']['output'];
  contest_type_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  contesttype?: Maybe<Contesttype>;
  flavor: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_contesttypename" */
export type Contesttypename_Aggregate = {
  __typename?: 'contesttypename_aggregate';
  aggregate?: Maybe<Contesttypename_Aggregate_Fields>;
  nodes: Array<Contesttypename>;
};

export type Contesttypename_Aggregate_Bool_Exp = {
  count?: InputMaybe<Contesttypename_Aggregate_Bool_Exp_Count>;
};

export type Contesttypename_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Contesttypename_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Contesttypename_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_contesttypename" */
export type Contesttypename_Aggregate_Fields = {
  __typename?: 'contesttypename_aggregate_fields';
  avg?: Maybe<Contesttypename_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Contesttypename_Max_Fields>;
  min?: Maybe<Contesttypename_Min_Fields>;
  stddev?: Maybe<Contesttypename_Stddev_Fields>;
  stddev_pop?: Maybe<Contesttypename_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Contesttypename_Stddev_Samp_Fields>;
  sum?: Maybe<Contesttypename_Sum_Fields>;
  var_pop?: Maybe<Contesttypename_Var_Pop_Fields>;
  var_samp?: Maybe<Contesttypename_Var_Samp_Fields>;
  variance?: Maybe<Contesttypename_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_contesttypename" */
export type Contesttypename_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Contesttypename_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_contesttypename" */
export type Contesttypename_Aggregate_Order_By = {
  avg?: InputMaybe<Contesttypename_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Contesttypename_Max_Order_By>;
  min?: InputMaybe<Contesttypename_Min_Order_By>;
  stddev?: InputMaybe<Contesttypename_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Contesttypename_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Contesttypename_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Contesttypename_Sum_Order_By>;
  var_pop?: InputMaybe<Contesttypename_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Contesttypename_Var_Samp_Order_By>;
  variance?: InputMaybe<Contesttypename_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Contesttypename_Avg_Fields = {
  __typename?: 'contesttypename_avg_fields';
  contest_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_contesttypename" */
export type Contesttypename_Avg_Order_By = {
  contest_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_contesttypename". All fields are combined with a logical 'AND'. */
export type Contesttypename_Bool_Exp = {
  _and?: InputMaybe<Array<Contesttypename_Bool_Exp>>;
  _not?: InputMaybe<Contesttypename_Bool_Exp>;
  _or?: InputMaybe<Array<Contesttypename_Bool_Exp>>;
  color?: InputMaybe<String_Comparison_Exp>;
  contest_type_id?: InputMaybe<Int_Comparison_Exp>;
  contesttype?: InputMaybe<Contesttype_Bool_Exp>;
  flavor?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** aggregate max on columns */
export type Contesttypename_Max_Fields = {
  __typename?: 'contesttypename_max_fields';
  color?: Maybe<Scalars['String']['output']>;
  contest_type_id?: Maybe<Scalars['Int']['output']>;
  flavor?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "pokemon_v2_contesttypename" */
export type Contesttypename_Max_Order_By = {
  color?: InputMaybe<Order_By>;
  contest_type_id?: InputMaybe<Order_By>;
  flavor?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Contesttypename_Min_Fields = {
  __typename?: 'contesttypename_min_fields';
  color?: Maybe<Scalars['String']['output']>;
  contest_type_id?: Maybe<Scalars['Int']['output']>;
  flavor?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "pokemon_v2_contesttypename" */
export type Contesttypename_Min_Order_By = {
  color?: InputMaybe<Order_By>;
  contest_type_id?: InputMaybe<Order_By>;
  flavor?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_contesttypename". */
export type Contesttypename_Order_By = {
  color?: InputMaybe<Order_By>;
  contest_type_id?: InputMaybe<Order_By>;
  contesttype?: InputMaybe<Contesttype_Order_By>;
  flavor?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_contesttypename" */
export enum Contesttypename_Select_Column {
  /** column name */
  Color = 'color',
  /** column name */
  ContestTypeId = 'contest_type_id',
  /** column name */
  Flavor = 'flavor',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Contesttypename_Stddev_Fields = {
  __typename?: 'contesttypename_stddev_fields';
  contest_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_contesttypename" */
export type Contesttypename_Stddev_Order_By = {
  contest_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Contesttypename_Stddev_Pop_Fields = {
  __typename?: 'contesttypename_stddev_pop_fields';
  contest_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_contesttypename" */
export type Contesttypename_Stddev_Pop_Order_By = {
  contest_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Contesttypename_Stddev_Samp_Fields = {
  __typename?: 'contesttypename_stddev_samp_fields';
  contest_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_contesttypename" */
export type Contesttypename_Stddev_Samp_Order_By = {
  contest_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Contesttypename_Sum_Fields = {
  __typename?: 'contesttypename_sum_fields';
  contest_type_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_contesttypename" */
export type Contesttypename_Sum_Order_By = {
  contest_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Contesttypename_Var_Pop_Fields = {
  __typename?: 'contesttypename_var_pop_fields';
  contest_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_contesttypename" */
export type Contesttypename_Var_Pop_Order_By = {
  contest_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Contesttypename_Var_Samp_Fields = {
  __typename?: 'contesttypename_var_samp_fields';
  contest_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_contesttypename" */
export type Contesttypename_Var_Samp_Order_By = {
  contest_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Contesttypename_Variance_Fields = {
  __typename?: 'contesttypename_variance_fields';
  contest_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_contesttypename" */
export type Contesttypename_Variance_Order_By = {
  contest_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_egggroup" */
export type Egggroup = {
  __typename?: 'egggroup';
  /** An array relationship */
  egggroupnames: Array<Egggroupname>;
  /** An aggregate relationship */
  egggroupnames_aggregate: Egggroupname_Aggregate;
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  /** An array relationship */
  pokemonegggroups: Array<Pokemonegggroup>;
  /** An aggregate relationship */
  pokemonegggroups_aggregate: Pokemonegggroup_Aggregate;
};


/** columns and relationships of "pokemon_v2_egggroup" */
export type EgggroupEgggroupnamesArgs = {
  distinct_on?: InputMaybe<Array<Egggroupname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Egggroupname_Order_By>>;
  where?: InputMaybe<Egggroupname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_egggroup" */
export type EgggroupEgggroupnames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Egggroupname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Egggroupname_Order_By>>;
  where?: InputMaybe<Egggroupname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_egggroup" */
export type EgggroupPokemonegggroupsArgs = {
  distinct_on?: InputMaybe<Array<Pokemonegggroup_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonegggroup_Order_By>>;
  where?: InputMaybe<Pokemonegggroup_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_egggroup" */
export type EgggroupPokemonegggroups_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonegggroup_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonegggroup_Order_By>>;
  where?: InputMaybe<Pokemonegggroup_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_egggroup" */
export type Egggroup_Aggregate = {
  __typename?: 'egggroup_aggregate';
  aggregate?: Maybe<Egggroup_Aggregate_Fields>;
  nodes: Array<Egggroup>;
};

/** aggregate fields of "pokemon_v2_egggroup" */
export type Egggroup_Aggregate_Fields = {
  __typename?: 'egggroup_aggregate_fields';
  avg?: Maybe<Egggroup_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Egggroup_Max_Fields>;
  min?: Maybe<Egggroup_Min_Fields>;
  stddev?: Maybe<Egggroup_Stddev_Fields>;
  stddev_pop?: Maybe<Egggroup_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Egggroup_Stddev_Samp_Fields>;
  sum?: Maybe<Egggroup_Sum_Fields>;
  var_pop?: Maybe<Egggroup_Var_Pop_Fields>;
  var_samp?: Maybe<Egggroup_Var_Samp_Fields>;
  variance?: Maybe<Egggroup_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_egggroup" */
export type Egggroup_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Egggroup_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Egggroup_Avg_Fields = {
  __typename?: 'egggroup_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_egggroup". All fields are combined with a logical 'AND'. */
export type Egggroup_Bool_Exp = {
  _and?: InputMaybe<Array<Egggroup_Bool_Exp>>;
  _not?: InputMaybe<Egggroup_Bool_Exp>;
  _or?: InputMaybe<Array<Egggroup_Bool_Exp>>;
  egggroupnames?: InputMaybe<Egggroupname_Bool_Exp>;
  egggroupnames_aggregate?: InputMaybe<Egggroupname_Aggregate_Bool_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  pokemonegggroups?: InputMaybe<Pokemonegggroup_Bool_Exp>;
  pokemonegggroups_aggregate?: InputMaybe<Pokemonegggroup_Aggregate_Bool_Exp>;
};

/** aggregate max on columns */
export type Egggroup_Max_Fields = {
  __typename?: 'egggroup_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Egggroup_Min_Fields = {
  __typename?: 'egggroup_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** Ordering options when selecting data from "pokemon_v2_egggroup". */
export type Egggroup_Order_By = {
  egggroupnames_aggregate?: InputMaybe<Egggroupname_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  pokemonegggroups_aggregate?: InputMaybe<Pokemonegggroup_Aggregate_Order_By>;
};

/** select columns of table "pokemon_v2_egggroup" */
export enum Egggroup_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Egggroup_Stddev_Fields = {
  __typename?: 'egggroup_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Egggroup_Stddev_Pop_Fields = {
  __typename?: 'egggroup_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Egggroup_Stddev_Samp_Fields = {
  __typename?: 'egggroup_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate sum on columns */
export type Egggroup_Sum_Fields = {
  __typename?: 'egggroup_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate var_pop on columns */
export type Egggroup_Var_Pop_Fields = {
  __typename?: 'egggroup_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Egggroup_Var_Samp_Fields = {
  __typename?: 'egggroup_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Egggroup_Variance_Fields = {
  __typename?: 'egggroup_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_egggroupname" */
export type Egggroupname = {
  __typename?: 'egggroupname';
  egg_group_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  egggroup?: Maybe<Egggroup>;
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_egggroupname" */
export type Egggroupname_Aggregate = {
  __typename?: 'egggroupname_aggregate';
  aggregate?: Maybe<Egggroupname_Aggregate_Fields>;
  nodes: Array<Egggroupname>;
};

export type Egggroupname_Aggregate_Bool_Exp = {
  count?: InputMaybe<Egggroupname_Aggregate_Bool_Exp_Count>;
};

export type Egggroupname_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Egggroupname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Egggroupname_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_egggroupname" */
export type Egggroupname_Aggregate_Fields = {
  __typename?: 'egggroupname_aggregate_fields';
  avg?: Maybe<Egggroupname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Egggroupname_Max_Fields>;
  min?: Maybe<Egggroupname_Min_Fields>;
  stddev?: Maybe<Egggroupname_Stddev_Fields>;
  stddev_pop?: Maybe<Egggroupname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Egggroupname_Stddev_Samp_Fields>;
  sum?: Maybe<Egggroupname_Sum_Fields>;
  var_pop?: Maybe<Egggroupname_Var_Pop_Fields>;
  var_samp?: Maybe<Egggroupname_Var_Samp_Fields>;
  variance?: Maybe<Egggroupname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_egggroupname" */
export type Egggroupname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Egggroupname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_egggroupname" */
export type Egggroupname_Aggregate_Order_By = {
  avg?: InputMaybe<Egggroupname_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Egggroupname_Max_Order_By>;
  min?: InputMaybe<Egggroupname_Min_Order_By>;
  stddev?: InputMaybe<Egggroupname_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Egggroupname_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Egggroupname_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Egggroupname_Sum_Order_By>;
  var_pop?: InputMaybe<Egggroupname_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Egggroupname_Var_Samp_Order_By>;
  variance?: InputMaybe<Egggroupname_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Egggroupname_Avg_Fields = {
  __typename?: 'egggroupname_avg_fields';
  egg_group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_egggroupname" */
export type Egggroupname_Avg_Order_By = {
  egg_group_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_egggroupname". All fields are combined with a logical 'AND'. */
export type Egggroupname_Bool_Exp = {
  _and?: InputMaybe<Array<Egggroupname_Bool_Exp>>;
  _not?: InputMaybe<Egggroupname_Bool_Exp>;
  _or?: InputMaybe<Array<Egggroupname_Bool_Exp>>;
  egg_group_id?: InputMaybe<Int_Comparison_Exp>;
  egggroup?: InputMaybe<Egggroup_Bool_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** aggregate max on columns */
export type Egggroupname_Max_Fields = {
  __typename?: 'egggroupname_max_fields';
  egg_group_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "pokemon_v2_egggroupname" */
export type Egggroupname_Max_Order_By = {
  egg_group_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Egggroupname_Min_Fields = {
  __typename?: 'egggroupname_min_fields';
  egg_group_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "pokemon_v2_egggroupname" */
export type Egggroupname_Min_Order_By = {
  egg_group_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_egggroupname". */
export type Egggroupname_Order_By = {
  egg_group_id?: InputMaybe<Order_By>;
  egggroup?: InputMaybe<Egggroup_Order_By>;
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_egggroupname" */
export enum Egggroupname_Select_Column {
  /** column name */
  EggGroupId = 'egg_group_id',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Egggroupname_Stddev_Fields = {
  __typename?: 'egggroupname_stddev_fields';
  egg_group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_egggroupname" */
export type Egggroupname_Stddev_Order_By = {
  egg_group_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Egggroupname_Stddev_Pop_Fields = {
  __typename?: 'egggroupname_stddev_pop_fields';
  egg_group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_egggroupname" */
export type Egggroupname_Stddev_Pop_Order_By = {
  egg_group_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Egggroupname_Stddev_Samp_Fields = {
  __typename?: 'egggroupname_stddev_samp_fields';
  egg_group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_egggroupname" */
export type Egggroupname_Stddev_Samp_Order_By = {
  egg_group_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Egggroupname_Sum_Fields = {
  __typename?: 'egggroupname_sum_fields';
  egg_group_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_egggroupname" */
export type Egggroupname_Sum_Order_By = {
  egg_group_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Egggroupname_Var_Pop_Fields = {
  __typename?: 'egggroupname_var_pop_fields';
  egg_group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_egggroupname" */
export type Egggroupname_Var_Pop_Order_By = {
  egg_group_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Egggroupname_Var_Samp_Fields = {
  __typename?: 'egggroupname_var_samp_fields';
  egg_group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_egggroupname" */
export type Egggroupname_Var_Samp_Order_By = {
  egg_group_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Egggroupname_Variance_Fields = {
  __typename?: 'egggroupname_variance_fields';
  egg_group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_egggroupname" */
export type Egggroupname_Variance_Order_By = {
  egg_group_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_encounter" */
export type Encounter = {
  __typename?: 'encounter';
  encounter_slot_id?: Maybe<Scalars['Int']['output']>;
  /** An array relationship */
  encounterconditionvaluemaps: Array<Encounterconditionvaluemap>;
  /** An aggregate relationship */
  encounterconditionvaluemaps_aggregate: Encounterconditionvaluemap_Aggregate;
  /** An object relationship */
  encounterslot?: Maybe<Encounterslot>;
  id: Scalars['Int']['output'];
  location_area_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  locationarea?: Maybe<Locationarea>;
  max_level: Scalars['Int']['output'];
  min_level: Scalars['Int']['output'];
  /** An object relationship */
  pokemon?: Maybe<Pokemon>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  version?: Maybe<Version>;
  version_id?: Maybe<Scalars['Int']['output']>;
};


/** columns and relationships of "pokemon_v2_encounter" */
export type EncounterEncounterconditionvaluemapsArgs = {
  distinct_on?: InputMaybe<Array<Encounterconditionvaluemap_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Encounterconditionvaluemap_Order_By>>;
  where?: InputMaybe<Encounterconditionvaluemap_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_encounter" */
export type EncounterEncounterconditionvaluemaps_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Encounterconditionvaluemap_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Encounterconditionvaluemap_Order_By>>;
  where?: InputMaybe<Encounterconditionvaluemap_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_encounter" */
export type Encounter_Aggregate = {
  __typename?: 'encounter_aggregate';
  aggregate?: Maybe<Encounter_Aggregate_Fields>;
  nodes: Array<Encounter>;
};

export type Encounter_Aggregate_Bool_Exp = {
  count?: InputMaybe<Encounter_Aggregate_Bool_Exp_Count>;
};

export type Encounter_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Encounter_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Encounter_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_encounter" */
export type Encounter_Aggregate_Fields = {
  __typename?: 'encounter_aggregate_fields';
  avg?: Maybe<Encounter_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Encounter_Max_Fields>;
  min?: Maybe<Encounter_Min_Fields>;
  stddev?: Maybe<Encounter_Stddev_Fields>;
  stddev_pop?: Maybe<Encounter_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Encounter_Stddev_Samp_Fields>;
  sum?: Maybe<Encounter_Sum_Fields>;
  var_pop?: Maybe<Encounter_Var_Pop_Fields>;
  var_samp?: Maybe<Encounter_Var_Samp_Fields>;
  variance?: Maybe<Encounter_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_encounter" */
export type Encounter_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Encounter_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_encounter" */
export type Encounter_Aggregate_Order_By = {
  avg?: InputMaybe<Encounter_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Encounter_Max_Order_By>;
  min?: InputMaybe<Encounter_Min_Order_By>;
  stddev?: InputMaybe<Encounter_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Encounter_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Encounter_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Encounter_Sum_Order_By>;
  var_pop?: InputMaybe<Encounter_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Encounter_Var_Samp_Order_By>;
  variance?: InputMaybe<Encounter_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Encounter_Avg_Fields = {
  __typename?: 'encounter_avg_fields';
  encounter_slot_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_area_id?: Maybe<Scalars['Float']['output']>;
  max_level?: Maybe<Scalars['Float']['output']>;
  min_level?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_encounter" */
export type Encounter_Avg_Order_By = {
  encounter_slot_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_area_id?: InputMaybe<Order_By>;
  max_level?: InputMaybe<Order_By>;
  min_level?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_encounter". All fields are combined with a logical 'AND'. */
export type Encounter_Bool_Exp = {
  _and?: InputMaybe<Array<Encounter_Bool_Exp>>;
  _not?: InputMaybe<Encounter_Bool_Exp>;
  _or?: InputMaybe<Array<Encounter_Bool_Exp>>;
  encounter_slot_id?: InputMaybe<Int_Comparison_Exp>;
  encounterconditionvaluemaps?: InputMaybe<Encounterconditionvaluemap_Bool_Exp>;
  encounterconditionvaluemaps_aggregate?: InputMaybe<Encounterconditionvaluemap_Aggregate_Bool_Exp>;
  encounterslot?: InputMaybe<Encounterslot_Bool_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  location_area_id?: InputMaybe<Int_Comparison_Exp>;
  locationarea?: InputMaybe<Locationarea_Bool_Exp>;
  max_level?: InputMaybe<Int_Comparison_Exp>;
  min_level?: InputMaybe<Int_Comparison_Exp>;
  pokemon?: InputMaybe<Pokemon_Bool_Exp>;
  pokemon_id?: InputMaybe<Int_Comparison_Exp>;
  version?: InputMaybe<Version_Bool_Exp>;
  version_id?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Encounter_Max_Fields = {
  __typename?: 'encounter_max_fields';
  encounter_slot_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  location_area_id?: Maybe<Scalars['Int']['output']>;
  max_level?: Maybe<Scalars['Int']['output']>;
  min_level?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  version_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_encounter" */
export type Encounter_Max_Order_By = {
  encounter_slot_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_area_id?: InputMaybe<Order_By>;
  max_level?: InputMaybe<Order_By>;
  min_level?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Encounter_Min_Fields = {
  __typename?: 'encounter_min_fields';
  encounter_slot_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  location_area_id?: Maybe<Scalars['Int']['output']>;
  max_level?: Maybe<Scalars['Int']['output']>;
  min_level?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  version_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_encounter" */
export type Encounter_Min_Order_By = {
  encounter_slot_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_area_id?: InputMaybe<Order_By>;
  max_level?: InputMaybe<Order_By>;
  min_level?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_encounter". */
export type Encounter_Order_By = {
  encounter_slot_id?: InputMaybe<Order_By>;
  encounterconditionvaluemaps_aggregate?: InputMaybe<Encounterconditionvaluemap_Aggregate_Order_By>;
  encounterslot?: InputMaybe<Encounterslot_Order_By>;
  id?: InputMaybe<Order_By>;
  location_area_id?: InputMaybe<Order_By>;
  locationarea?: InputMaybe<Locationarea_Order_By>;
  max_level?: InputMaybe<Order_By>;
  min_level?: InputMaybe<Order_By>;
  pokemon?: InputMaybe<Pokemon_Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  version?: InputMaybe<Version_Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_encounter" */
export enum Encounter_Select_Column {
  /** column name */
  EncounterSlotId = 'encounter_slot_id',
  /** column name */
  Id = 'id',
  /** column name */
  LocationAreaId = 'location_area_id',
  /** column name */
  MaxLevel = 'max_level',
  /** column name */
  MinLevel = 'min_level',
  /** column name */
  PokemonId = 'pokemon_id',
  /** column name */
  VersionId = 'version_id'
}

/** aggregate stddev on columns */
export type Encounter_Stddev_Fields = {
  __typename?: 'encounter_stddev_fields';
  encounter_slot_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_area_id?: Maybe<Scalars['Float']['output']>;
  max_level?: Maybe<Scalars['Float']['output']>;
  min_level?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_encounter" */
export type Encounter_Stddev_Order_By = {
  encounter_slot_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_area_id?: InputMaybe<Order_By>;
  max_level?: InputMaybe<Order_By>;
  min_level?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Encounter_Stddev_Pop_Fields = {
  __typename?: 'encounter_stddev_pop_fields';
  encounter_slot_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_area_id?: Maybe<Scalars['Float']['output']>;
  max_level?: Maybe<Scalars['Float']['output']>;
  min_level?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_encounter" */
export type Encounter_Stddev_Pop_Order_By = {
  encounter_slot_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_area_id?: InputMaybe<Order_By>;
  max_level?: InputMaybe<Order_By>;
  min_level?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Encounter_Stddev_Samp_Fields = {
  __typename?: 'encounter_stddev_samp_fields';
  encounter_slot_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_area_id?: Maybe<Scalars['Float']['output']>;
  max_level?: Maybe<Scalars['Float']['output']>;
  min_level?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_encounter" */
export type Encounter_Stddev_Samp_Order_By = {
  encounter_slot_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_area_id?: InputMaybe<Order_By>;
  max_level?: InputMaybe<Order_By>;
  min_level?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Encounter_Sum_Fields = {
  __typename?: 'encounter_sum_fields';
  encounter_slot_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  location_area_id?: Maybe<Scalars['Int']['output']>;
  max_level?: Maybe<Scalars['Int']['output']>;
  min_level?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  version_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_encounter" */
export type Encounter_Sum_Order_By = {
  encounter_slot_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_area_id?: InputMaybe<Order_By>;
  max_level?: InputMaybe<Order_By>;
  min_level?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Encounter_Var_Pop_Fields = {
  __typename?: 'encounter_var_pop_fields';
  encounter_slot_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_area_id?: Maybe<Scalars['Float']['output']>;
  max_level?: Maybe<Scalars['Float']['output']>;
  min_level?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_encounter" */
export type Encounter_Var_Pop_Order_By = {
  encounter_slot_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_area_id?: InputMaybe<Order_By>;
  max_level?: InputMaybe<Order_By>;
  min_level?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Encounter_Var_Samp_Fields = {
  __typename?: 'encounter_var_samp_fields';
  encounter_slot_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_area_id?: Maybe<Scalars['Float']['output']>;
  max_level?: Maybe<Scalars['Float']['output']>;
  min_level?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_encounter" */
export type Encounter_Var_Samp_Order_By = {
  encounter_slot_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_area_id?: InputMaybe<Order_By>;
  max_level?: InputMaybe<Order_By>;
  min_level?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Encounter_Variance_Fields = {
  __typename?: 'encounter_variance_fields';
  encounter_slot_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_area_id?: Maybe<Scalars['Float']['output']>;
  max_level?: Maybe<Scalars['Float']['output']>;
  min_level?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_encounter" */
export type Encounter_Variance_Order_By = {
  encounter_slot_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_area_id?: InputMaybe<Order_By>;
  max_level?: InputMaybe<Order_By>;
  min_level?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_encountercondition" */
export type Encountercondition = {
  __typename?: 'encountercondition';
  /** An array relationship */
  encounterconditionnames: Array<Encounterconditionname>;
  /** An aggregate relationship */
  encounterconditionnames_aggregate: Encounterconditionname_Aggregate;
  /** An array relationship */
  encounterconditionvalues: Array<Encounterconditionvalue>;
  /** An aggregate relationship */
  encounterconditionvalues_aggregate: Encounterconditionvalue_Aggregate;
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
};


/** columns and relationships of "pokemon_v2_encountercondition" */
export type EncounterconditionEncounterconditionnamesArgs = {
  distinct_on?: InputMaybe<Array<Encounterconditionname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Encounterconditionname_Order_By>>;
  where?: InputMaybe<Encounterconditionname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_encountercondition" */
export type EncounterconditionEncounterconditionnames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Encounterconditionname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Encounterconditionname_Order_By>>;
  where?: InputMaybe<Encounterconditionname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_encountercondition" */
export type EncounterconditionEncounterconditionvaluesArgs = {
  distinct_on?: InputMaybe<Array<Encounterconditionvalue_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Encounterconditionvalue_Order_By>>;
  where?: InputMaybe<Encounterconditionvalue_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_encountercondition" */
export type EncounterconditionEncounterconditionvalues_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Encounterconditionvalue_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Encounterconditionvalue_Order_By>>;
  where?: InputMaybe<Encounterconditionvalue_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_encountercondition" */
export type Encountercondition_Aggregate = {
  __typename?: 'encountercondition_aggregate';
  aggregate?: Maybe<Encountercondition_Aggregate_Fields>;
  nodes: Array<Encountercondition>;
};

/** aggregate fields of "pokemon_v2_encountercondition" */
export type Encountercondition_Aggregate_Fields = {
  __typename?: 'encountercondition_aggregate_fields';
  avg?: Maybe<Encountercondition_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Encountercondition_Max_Fields>;
  min?: Maybe<Encountercondition_Min_Fields>;
  stddev?: Maybe<Encountercondition_Stddev_Fields>;
  stddev_pop?: Maybe<Encountercondition_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Encountercondition_Stddev_Samp_Fields>;
  sum?: Maybe<Encountercondition_Sum_Fields>;
  var_pop?: Maybe<Encountercondition_Var_Pop_Fields>;
  var_samp?: Maybe<Encountercondition_Var_Samp_Fields>;
  variance?: Maybe<Encountercondition_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_encountercondition" */
export type Encountercondition_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Encountercondition_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Encountercondition_Avg_Fields = {
  __typename?: 'encountercondition_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_encountercondition". All fields are combined with a logical 'AND'. */
export type Encountercondition_Bool_Exp = {
  _and?: InputMaybe<Array<Encountercondition_Bool_Exp>>;
  _not?: InputMaybe<Encountercondition_Bool_Exp>;
  _or?: InputMaybe<Array<Encountercondition_Bool_Exp>>;
  encounterconditionnames?: InputMaybe<Encounterconditionname_Bool_Exp>;
  encounterconditionnames_aggregate?: InputMaybe<Encounterconditionname_Aggregate_Bool_Exp>;
  encounterconditionvalues?: InputMaybe<Encounterconditionvalue_Bool_Exp>;
  encounterconditionvalues_aggregate?: InputMaybe<Encounterconditionvalue_Aggregate_Bool_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** aggregate max on columns */
export type Encountercondition_Max_Fields = {
  __typename?: 'encountercondition_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Encountercondition_Min_Fields = {
  __typename?: 'encountercondition_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** Ordering options when selecting data from "pokemon_v2_encountercondition". */
export type Encountercondition_Order_By = {
  encounterconditionnames_aggregate?: InputMaybe<Encounterconditionname_Aggregate_Order_By>;
  encounterconditionvalues_aggregate?: InputMaybe<Encounterconditionvalue_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_encountercondition" */
export enum Encountercondition_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Encountercondition_Stddev_Fields = {
  __typename?: 'encountercondition_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Encountercondition_Stddev_Pop_Fields = {
  __typename?: 'encountercondition_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Encountercondition_Stddev_Samp_Fields = {
  __typename?: 'encountercondition_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate sum on columns */
export type Encountercondition_Sum_Fields = {
  __typename?: 'encountercondition_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate var_pop on columns */
export type Encountercondition_Var_Pop_Fields = {
  __typename?: 'encountercondition_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Encountercondition_Var_Samp_Fields = {
  __typename?: 'encountercondition_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Encountercondition_Variance_Fields = {
  __typename?: 'encountercondition_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_encounterconditionname" */
export type Encounterconditionname = {
  __typename?: 'encounterconditionname';
  encounter_condition_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  encountercondition?: Maybe<Encountercondition>;
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_encounterconditionname" */
export type Encounterconditionname_Aggregate = {
  __typename?: 'encounterconditionname_aggregate';
  aggregate?: Maybe<Encounterconditionname_Aggregate_Fields>;
  nodes: Array<Encounterconditionname>;
};

export type Encounterconditionname_Aggregate_Bool_Exp = {
  count?: InputMaybe<Encounterconditionname_Aggregate_Bool_Exp_Count>;
};

export type Encounterconditionname_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Encounterconditionname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Encounterconditionname_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_encounterconditionname" */
export type Encounterconditionname_Aggregate_Fields = {
  __typename?: 'encounterconditionname_aggregate_fields';
  avg?: Maybe<Encounterconditionname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Encounterconditionname_Max_Fields>;
  min?: Maybe<Encounterconditionname_Min_Fields>;
  stddev?: Maybe<Encounterconditionname_Stddev_Fields>;
  stddev_pop?: Maybe<Encounterconditionname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Encounterconditionname_Stddev_Samp_Fields>;
  sum?: Maybe<Encounterconditionname_Sum_Fields>;
  var_pop?: Maybe<Encounterconditionname_Var_Pop_Fields>;
  var_samp?: Maybe<Encounterconditionname_Var_Samp_Fields>;
  variance?: Maybe<Encounterconditionname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_encounterconditionname" */
export type Encounterconditionname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Encounterconditionname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_encounterconditionname" */
export type Encounterconditionname_Aggregate_Order_By = {
  avg?: InputMaybe<Encounterconditionname_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Encounterconditionname_Max_Order_By>;
  min?: InputMaybe<Encounterconditionname_Min_Order_By>;
  stddev?: InputMaybe<Encounterconditionname_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Encounterconditionname_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Encounterconditionname_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Encounterconditionname_Sum_Order_By>;
  var_pop?: InputMaybe<Encounterconditionname_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Encounterconditionname_Var_Samp_Order_By>;
  variance?: InputMaybe<Encounterconditionname_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Encounterconditionname_Avg_Fields = {
  __typename?: 'encounterconditionname_avg_fields';
  encounter_condition_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_encounterconditionname" */
export type Encounterconditionname_Avg_Order_By = {
  encounter_condition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_encounterconditionname". All fields are combined with a logical 'AND'. */
export type Encounterconditionname_Bool_Exp = {
  _and?: InputMaybe<Array<Encounterconditionname_Bool_Exp>>;
  _not?: InputMaybe<Encounterconditionname_Bool_Exp>;
  _or?: InputMaybe<Array<Encounterconditionname_Bool_Exp>>;
  encounter_condition_id?: InputMaybe<Int_Comparison_Exp>;
  encountercondition?: InputMaybe<Encountercondition_Bool_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** aggregate max on columns */
export type Encounterconditionname_Max_Fields = {
  __typename?: 'encounterconditionname_max_fields';
  encounter_condition_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "pokemon_v2_encounterconditionname" */
export type Encounterconditionname_Max_Order_By = {
  encounter_condition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Encounterconditionname_Min_Fields = {
  __typename?: 'encounterconditionname_min_fields';
  encounter_condition_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "pokemon_v2_encounterconditionname" */
export type Encounterconditionname_Min_Order_By = {
  encounter_condition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_encounterconditionname". */
export type Encounterconditionname_Order_By = {
  encounter_condition_id?: InputMaybe<Order_By>;
  encountercondition?: InputMaybe<Encountercondition_Order_By>;
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_encounterconditionname" */
export enum Encounterconditionname_Select_Column {
  /** column name */
  EncounterConditionId = 'encounter_condition_id',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Encounterconditionname_Stddev_Fields = {
  __typename?: 'encounterconditionname_stddev_fields';
  encounter_condition_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_encounterconditionname" */
export type Encounterconditionname_Stddev_Order_By = {
  encounter_condition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Encounterconditionname_Stddev_Pop_Fields = {
  __typename?: 'encounterconditionname_stddev_pop_fields';
  encounter_condition_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_encounterconditionname" */
export type Encounterconditionname_Stddev_Pop_Order_By = {
  encounter_condition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Encounterconditionname_Stddev_Samp_Fields = {
  __typename?: 'encounterconditionname_stddev_samp_fields';
  encounter_condition_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_encounterconditionname" */
export type Encounterconditionname_Stddev_Samp_Order_By = {
  encounter_condition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Encounterconditionname_Sum_Fields = {
  __typename?: 'encounterconditionname_sum_fields';
  encounter_condition_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_encounterconditionname" */
export type Encounterconditionname_Sum_Order_By = {
  encounter_condition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Encounterconditionname_Var_Pop_Fields = {
  __typename?: 'encounterconditionname_var_pop_fields';
  encounter_condition_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_encounterconditionname" */
export type Encounterconditionname_Var_Pop_Order_By = {
  encounter_condition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Encounterconditionname_Var_Samp_Fields = {
  __typename?: 'encounterconditionname_var_samp_fields';
  encounter_condition_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_encounterconditionname" */
export type Encounterconditionname_Var_Samp_Order_By = {
  encounter_condition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Encounterconditionname_Variance_Fields = {
  __typename?: 'encounterconditionname_variance_fields';
  encounter_condition_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_encounterconditionname" */
export type Encounterconditionname_Variance_Order_By = {
  encounter_condition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_encounterconditionvalue" */
export type Encounterconditionvalue = {
  __typename?: 'encounterconditionvalue';
  encounter_condition_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  encountercondition?: Maybe<Encountercondition>;
  /** An array relationship */
  encounterconditionvaluemaps: Array<Encounterconditionvaluemap>;
  /** An aggregate relationship */
  encounterconditionvaluemaps_aggregate: Encounterconditionvaluemap_Aggregate;
  /** An array relationship */
  encounterconditionvaluenames: Array<Encounterconditionvaluename>;
  /** An aggregate relationship */
  encounterconditionvaluenames_aggregate: Encounterconditionvaluename_Aggregate;
  id: Scalars['Int']['output'];
  is_default: Scalars['Boolean']['output'];
  name: Scalars['String']['output'];
};


/** columns and relationships of "pokemon_v2_encounterconditionvalue" */
export type EncounterconditionvalueEncounterconditionvaluemapsArgs = {
  distinct_on?: InputMaybe<Array<Encounterconditionvaluemap_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Encounterconditionvaluemap_Order_By>>;
  where?: InputMaybe<Encounterconditionvaluemap_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_encounterconditionvalue" */
export type EncounterconditionvalueEncounterconditionvaluemaps_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Encounterconditionvaluemap_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Encounterconditionvaluemap_Order_By>>;
  where?: InputMaybe<Encounterconditionvaluemap_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_encounterconditionvalue" */
export type EncounterconditionvalueEncounterconditionvaluenamesArgs = {
  distinct_on?: InputMaybe<Array<Encounterconditionvaluename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Encounterconditionvaluename_Order_By>>;
  where?: InputMaybe<Encounterconditionvaluename_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_encounterconditionvalue" */
export type EncounterconditionvalueEncounterconditionvaluenames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Encounterconditionvaluename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Encounterconditionvaluename_Order_By>>;
  where?: InputMaybe<Encounterconditionvaluename_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_encounterconditionvalue" */
export type Encounterconditionvalue_Aggregate = {
  __typename?: 'encounterconditionvalue_aggregate';
  aggregate?: Maybe<Encounterconditionvalue_Aggregate_Fields>;
  nodes: Array<Encounterconditionvalue>;
};

export type Encounterconditionvalue_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Encounterconditionvalue_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Encounterconditionvalue_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Encounterconditionvalue_Aggregate_Bool_Exp_Count>;
};

export type Encounterconditionvalue_Aggregate_Bool_Exp_Bool_And = {
  arguments: Encounterconditionvalue_Select_Column_Encounterconditionvalue_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Encounterconditionvalue_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Encounterconditionvalue_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Encounterconditionvalue_Select_Column_Encounterconditionvalue_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Encounterconditionvalue_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Encounterconditionvalue_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Encounterconditionvalue_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Encounterconditionvalue_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_encounterconditionvalue" */
export type Encounterconditionvalue_Aggregate_Fields = {
  __typename?: 'encounterconditionvalue_aggregate_fields';
  avg?: Maybe<Encounterconditionvalue_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Encounterconditionvalue_Max_Fields>;
  min?: Maybe<Encounterconditionvalue_Min_Fields>;
  stddev?: Maybe<Encounterconditionvalue_Stddev_Fields>;
  stddev_pop?: Maybe<Encounterconditionvalue_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Encounterconditionvalue_Stddev_Samp_Fields>;
  sum?: Maybe<Encounterconditionvalue_Sum_Fields>;
  var_pop?: Maybe<Encounterconditionvalue_Var_Pop_Fields>;
  var_samp?: Maybe<Encounterconditionvalue_Var_Samp_Fields>;
  variance?: Maybe<Encounterconditionvalue_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_encounterconditionvalue" */
export type Encounterconditionvalue_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Encounterconditionvalue_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_encounterconditionvalue" */
export type Encounterconditionvalue_Aggregate_Order_By = {
  avg?: InputMaybe<Encounterconditionvalue_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Encounterconditionvalue_Max_Order_By>;
  min?: InputMaybe<Encounterconditionvalue_Min_Order_By>;
  stddev?: InputMaybe<Encounterconditionvalue_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Encounterconditionvalue_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Encounterconditionvalue_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Encounterconditionvalue_Sum_Order_By>;
  var_pop?: InputMaybe<Encounterconditionvalue_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Encounterconditionvalue_Var_Samp_Order_By>;
  variance?: InputMaybe<Encounterconditionvalue_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Encounterconditionvalue_Avg_Fields = {
  __typename?: 'encounterconditionvalue_avg_fields';
  encounter_condition_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_encounterconditionvalue" */
export type Encounterconditionvalue_Avg_Order_By = {
  encounter_condition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_encounterconditionvalue". All fields are combined with a logical 'AND'. */
export type Encounterconditionvalue_Bool_Exp = {
  _and?: InputMaybe<Array<Encounterconditionvalue_Bool_Exp>>;
  _not?: InputMaybe<Encounterconditionvalue_Bool_Exp>;
  _or?: InputMaybe<Array<Encounterconditionvalue_Bool_Exp>>;
  encounter_condition_id?: InputMaybe<Int_Comparison_Exp>;
  encountercondition?: InputMaybe<Encountercondition_Bool_Exp>;
  encounterconditionvaluemaps?: InputMaybe<Encounterconditionvaluemap_Bool_Exp>;
  encounterconditionvaluemaps_aggregate?: InputMaybe<Encounterconditionvaluemap_Aggregate_Bool_Exp>;
  encounterconditionvaluenames?: InputMaybe<Encounterconditionvaluename_Bool_Exp>;
  encounterconditionvaluenames_aggregate?: InputMaybe<Encounterconditionvaluename_Aggregate_Bool_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  is_default?: InputMaybe<Boolean_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** aggregate max on columns */
export type Encounterconditionvalue_Max_Fields = {
  __typename?: 'encounterconditionvalue_max_fields';
  encounter_condition_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "pokemon_v2_encounterconditionvalue" */
export type Encounterconditionvalue_Max_Order_By = {
  encounter_condition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Encounterconditionvalue_Min_Fields = {
  __typename?: 'encounterconditionvalue_min_fields';
  encounter_condition_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "pokemon_v2_encounterconditionvalue" */
export type Encounterconditionvalue_Min_Order_By = {
  encounter_condition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_encounterconditionvalue". */
export type Encounterconditionvalue_Order_By = {
  encounter_condition_id?: InputMaybe<Order_By>;
  encountercondition?: InputMaybe<Encountercondition_Order_By>;
  encounterconditionvaluemaps_aggregate?: InputMaybe<Encounterconditionvaluemap_Aggregate_Order_By>;
  encounterconditionvaluenames_aggregate?: InputMaybe<Encounterconditionvaluename_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  is_default?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_encounterconditionvalue" */
export enum Encounterconditionvalue_Select_Column {
  /** column name */
  EncounterConditionId = 'encounter_condition_id',
  /** column name */
  Id = 'id',
  /** column name */
  IsDefault = 'is_default',
  /** column name */
  Name = 'name'
}

/** select "encounterconditionvalue_aggregate_bool_exp_bool_and_arguments_columns" columns of table "pokemon_v2_encounterconditionvalue" */
export enum Encounterconditionvalue_Select_Column_Encounterconditionvalue_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  IsDefault = 'is_default'
}

/** select "encounterconditionvalue_aggregate_bool_exp_bool_or_arguments_columns" columns of table "pokemon_v2_encounterconditionvalue" */
export enum Encounterconditionvalue_Select_Column_Encounterconditionvalue_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  IsDefault = 'is_default'
}

/** aggregate stddev on columns */
export type Encounterconditionvalue_Stddev_Fields = {
  __typename?: 'encounterconditionvalue_stddev_fields';
  encounter_condition_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_encounterconditionvalue" */
export type Encounterconditionvalue_Stddev_Order_By = {
  encounter_condition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Encounterconditionvalue_Stddev_Pop_Fields = {
  __typename?: 'encounterconditionvalue_stddev_pop_fields';
  encounter_condition_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_encounterconditionvalue" */
export type Encounterconditionvalue_Stddev_Pop_Order_By = {
  encounter_condition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Encounterconditionvalue_Stddev_Samp_Fields = {
  __typename?: 'encounterconditionvalue_stddev_samp_fields';
  encounter_condition_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_encounterconditionvalue" */
export type Encounterconditionvalue_Stddev_Samp_Order_By = {
  encounter_condition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Encounterconditionvalue_Sum_Fields = {
  __typename?: 'encounterconditionvalue_sum_fields';
  encounter_condition_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_encounterconditionvalue" */
export type Encounterconditionvalue_Sum_Order_By = {
  encounter_condition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Encounterconditionvalue_Var_Pop_Fields = {
  __typename?: 'encounterconditionvalue_var_pop_fields';
  encounter_condition_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_encounterconditionvalue" */
export type Encounterconditionvalue_Var_Pop_Order_By = {
  encounter_condition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Encounterconditionvalue_Var_Samp_Fields = {
  __typename?: 'encounterconditionvalue_var_samp_fields';
  encounter_condition_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_encounterconditionvalue" */
export type Encounterconditionvalue_Var_Samp_Order_By = {
  encounter_condition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Encounterconditionvalue_Variance_Fields = {
  __typename?: 'encounterconditionvalue_variance_fields';
  encounter_condition_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_encounterconditionvalue" */
export type Encounterconditionvalue_Variance_Order_By = {
  encounter_condition_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_encounterconditionvaluemap" */
export type Encounterconditionvaluemap = {
  __typename?: 'encounterconditionvaluemap';
  /** An object relationship */
  encounter?: Maybe<Encounter>;
  encounter_condition_value_id?: Maybe<Scalars['Int']['output']>;
  encounter_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  encounterconditionvalue?: Maybe<Encounterconditionvalue>;
  id: Scalars['Int']['output'];
};

/** aggregated selection of "pokemon_v2_encounterconditionvaluemap" */
export type Encounterconditionvaluemap_Aggregate = {
  __typename?: 'encounterconditionvaluemap_aggregate';
  aggregate?: Maybe<Encounterconditionvaluemap_Aggregate_Fields>;
  nodes: Array<Encounterconditionvaluemap>;
};

export type Encounterconditionvaluemap_Aggregate_Bool_Exp = {
  count?: InputMaybe<Encounterconditionvaluemap_Aggregate_Bool_Exp_Count>;
};

export type Encounterconditionvaluemap_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Encounterconditionvaluemap_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Encounterconditionvaluemap_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_encounterconditionvaluemap" */
export type Encounterconditionvaluemap_Aggregate_Fields = {
  __typename?: 'encounterconditionvaluemap_aggregate_fields';
  avg?: Maybe<Encounterconditionvaluemap_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Encounterconditionvaluemap_Max_Fields>;
  min?: Maybe<Encounterconditionvaluemap_Min_Fields>;
  stddev?: Maybe<Encounterconditionvaluemap_Stddev_Fields>;
  stddev_pop?: Maybe<Encounterconditionvaluemap_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Encounterconditionvaluemap_Stddev_Samp_Fields>;
  sum?: Maybe<Encounterconditionvaluemap_Sum_Fields>;
  var_pop?: Maybe<Encounterconditionvaluemap_Var_Pop_Fields>;
  var_samp?: Maybe<Encounterconditionvaluemap_Var_Samp_Fields>;
  variance?: Maybe<Encounterconditionvaluemap_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_encounterconditionvaluemap" */
export type Encounterconditionvaluemap_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Encounterconditionvaluemap_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_encounterconditionvaluemap" */
export type Encounterconditionvaluemap_Aggregate_Order_By = {
  avg?: InputMaybe<Encounterconditionvaluemap_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Encounterconditionvaluemap_Max_Order_By>;
  min?: InputMaybe<Encounterconditionvaluemap_Min_Order_By>;
  stddev?: InputMaybe<Encounterconditionvaluemap_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Encounterconditionvaluemap_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Encounterconditionvaluemap_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Encounterconditionvaluemap_Sum_Order_By>;
  var_pop?: InputMaybe<Encounterconditionvaluemap_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Encounterconditionvaluemap_Var_Samp_Order_By>;
  variance?: InputMaybe<Encounterconditionvaluemap_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Encounterconditionvaluemap_Avg_Fields = {
  __typename?: 'encounterconditionvaluemap_avg_fields';
  encounter_condition_value_id?: Maybe<Scalars['Float']['output']>;
  encounter_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_encounterconditionvaluemap" */
export type Encounterconditionvaluemap_Avg_Order_By = {
  encounter_condition_value_id?: InputMaybe<Order_By>;
  encounter_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_encounterconditionvaluemap". All fields are combined with a logical 'AND'. */
export type Encounterconditionvaluemap_Bool_Exp = {
  _and?: InputMaybe<Array<Encounterconditionvaluemap_Bool_Exp>>;
  _not?: InputMaybe<Encounterconditionvaluemap_Bool_Exp>;
  _or?: InputMaybe<Array<Encounterconditionvaluemap_Bool_Exp>>;
  encounter?: InputMaybe<Encounter_Bool_Exp>;
  encounter_condition_value_id?: InputMaybe<Int_Comparison_Exp>;
  encounter_id?: InputMaybe<Int_Comparison_Exp>;
  encounterconditionvalue?: InputMaybe<Encounterconditionvalue_Bool_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Encounterconditionvaluemap_Max_Fields = {
  __typename?: 'encounterconditionvaluemap_max_fields';
  encounter_condition_value_id?: Maybe<Scalars['Int']['output']>;
  encounter_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_encounterconditionvaluemap" */
export type Encounterconditionvaluemap_Max_Order_By = {
  encounter_condition_value_id?: InputMaybe<Order_By>;
  encounter_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Encounterconditionvaluemap_Min_Fields = {
  __typename?: 'encounterconditionvaluemap_min_fields';
  encounter_condition_value_id?: Maybe<Scalars['Int']['output']>;
  encounter_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_encounterconditionvaluemap" */
export type Encounterconditionvaluemap_Min_Order_By = {
  encounter_condition_value_id?: InputMaybe<Order_By>;
  encounter_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_encounterconditionvaluemap". */
export type Encounterconditionvaluemap_Order_By = {
  encounter?: InputMaybe<Encounter_Order_By>;
  encounter_condition_value_id?: InputMaybe<Order_By>;
  encounter_id?: InputMaybe<Order_By>;
  encounterconditionvalue?: InputMaybe<Encounterconditionvalue_Order_By>;
  id?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_encounterconditionvaluemap" */
export enum Encounterconditionvaluemap_Select_Column {
  /** column name */
  EncounterConditionValueId = 'encounter_condition_value_id',
  /** column name */
  EncounterId = 'encounter_id',
  /** column name */
  Id = 'id'
}

/** aggregate stddev on columns */
export type Encounterconditionvaluemap_Stddev_Fields = {
  __typename?: 'encounterconditionvaluemap_stddev_fields';
  encounter_condition_value_id?: Maybe<Scalars['Float']['output']>;
  encounter_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_encounterconditionvaluemap" */
export type Encounterconditionvaluemap_Stddev_Order_By = {
  encounter_condition_value_id?: InputMaybe<Order_By>;
  encounter_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Encounterconditionvaluemap_Stddev_Pop_Fields = {
  __typename?: 'encounterconditionvaluemap_stddev_pop_fields';
  encounter_condition_value_id?: Maybe<Scalars['Float']['output']>;
  encounter_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_encounterconditionvaluemap" */
export type Encounterconditionvaluemap_Stddev_Pop_Order_By = {
  encounter_condition_value_id?: InputMaybe<Order_By>;
  encounter_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Encounterconditionvaluemap_Stddev_Samp_Fields = {
  __typename?: 'encounterconditionvaluemap_stddev_samp_fields';
  encounter_condition_value_id?: Maybe<Scalars['Float']['output']>;
  encounter_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_encounterconditionvaluemap" */
export type Encounterconditionvaluemap_Stddev_Samp_Order_By = {
  encounter_condition_value_id?: InputMaybe<Order_By>;
  encounter_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Encounterconditionvaluemap_Sum_Fields = {
  __typename?: 'encounterconditionvaluemap_sum_fields';
  encounter_condition_value_id?: Maybe<Scalars['Int']['output']>;
  encounter_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_encounterconditionvaluemap" */
export type Encounterconditionvaluemap_Sum_Order_By = {
  encounter_condition_value_id?: InputMaybe<Order_By>;
  encounter_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Encounterconditionvaluemap_Var_Pop_Fields = {
  __typename?: 'encounterconditionvaluemap_var_pop_fields';
  encounter_condition_value_id?: Maybe<Scalars['Float']['output']>;
  encounter_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_encounterconditionvaluemap" */
export type Encounterconditionvaluemap_Var_Pop_Order_By = {
  encounter_condition_value_id?: InputMaybe<Order_By>;
  encounter_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Encounterconditionvaluemap_Var_Samp_Fields = {
  __typename?: 'encounterconditionvaluemap_var_samp_fields';
  encounter_condition_value_id?: Maybe<Scalars['Float']['output']>;
  encounter_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_encounterconditionvaluemap" */
export type Encounterconditionvaluemap_Var_Samp_Order_By = {
  encounter_condition_value_id?: InputMaybe<Order_By>;
  encounter_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Encounterconditionvaluemap_Variance_Fields = {
  __typename?: 'encounterconditionvaluemap_variance_fields';
  encounter_condition_value_id?: Maybe<Scalars['Float']['output']>;
  encounter_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_encounterconditionvaluemap" */
export type Encounterconditionvaluemap_Variance_Order_By = {
  encounter_condition_value_id?: InputMaybe<Order_By>;
  encounter_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_encounterconditionvaluename" */
export type Encounterconditionvaluename = {
  __typename?: 'encounterconditionvaluename';
  encounter_condition_value_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  encounterconditionvalue?: Maybe<Encounterconditionvalue>;
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_encounterconditionvaluename" */
export type Encounterconditionvaluename_Aggregate = {
  __typename?: 'encounterconditionvaluename_aggregate';
  aggregate?: Maybe<Encounterconditionvaluename_Aggregate_Fields>;
  nodes: Array<Encounterconditionvaluename>;
};

export type Encounterconditionvaluename_Aggregate_Bool_Exp = {
  count?: InputMaybe<Encounterconditionvaluename_Aggregate_Bool_Exp_Count>;
};

export type Encounterconditionvaluename_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Encounterconditionvaluename_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Encounterconditionvaluename_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_encounterconditionvaluename" */
export type Encounterconditionvaluename_Aggregate_Fields = {
  __typename?: 'encounterconditionvaluename_aggregate_fields';
  avg?: Maybe<Encounterconditionvaluename_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Encounterconditionvaluename_Max_Fields>;
  min?: Maybe<Encounterconditionvaluename_Min_Fields>;
  stddev?: Maybe<Encounterconditionvaluename_Stddev_Fields>;
  stddev_pop?: Maybe<Encounterconditionvaluename_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Encounterconditionvaluename_Stddev_Samp_Fields>;
  sum?: Maybe<Encounterconditionvaluename_Sum_Fields>;
  var_pop?: Maybe<Encounterconditionvaluename_Var_Pop_Fields>;
  var_samp?: Maybe<Encounterconditionvaluename_Var_Samp_Fields>;
  variance?: Maybe<Encounterconditionvaluename_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_encounterconditionvaluename" */
export type Encounterconditionvaluename_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Encounterconditionvaluename_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_encounterconditionvaluename" */
export type Encounterconditionvaluename_Aggregate_Order_By = {
  avg?: InputMaybe<Encounterconditionvaluename_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Encounterconditionvaluename_Max_Order_By>;
  min?: InputMaybe<Encounterconditionvaluename_Min_Order_By>;
  stddev?: InputMaybe<Encounterconditionvaluename_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Encounterconditionvaluename_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Encounterconditionvaluename_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Encounterconditionvaluename_Sum_Order_By>;
  var_pop?: InputMaybe<Encounterconditionvaluename_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Encounterconditionvaluename_Var_Samp_Order_By>;
  variance?: InputMaybe<Encounterconditionvaluename_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Encounterconditionvaluename_Avg_Fields = {
  __typename?: 'encounterconditionvaluename_avg_fields';
  encounter_condition_value_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_encounterconditionvaluename" */
export type Encounterconditionvaluename_Avg_Order_By = {
  encounter_condition_value_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_encounterconditionvaluename". All fields are combined with a logical 'AND'. */
export type Encounterconditionvaluename_Bool_Exp = {
  _and?: InputMaybe<Array<Encounterconditionvaluename_Bool_Exp>>;
  _not?: InputMaybe<Encounterconditionvaluename_Bool_Exp>;
  _or?: InputMaybe<Array<Encounterconditionvaluename_Bool_Exp>>;
  encounter_condition_value_id?: InputMaybe<Int_Comparison_Exp>;
  encounterconditionvalue?: InputMaybe<Encounterconditionvalue_Bool_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** aggregate max on columns */
export type Encounterconditionvaluename_Max_Fields = {
  __typename?: 'encounterconditionvaluename_max_fields';
  encounter_condition_value_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "pokemon_v2_encounterconditionvaluename" */
export type Encounterconditionvaluename_Max_Order_By = {
  encounter_condition_value_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Encounterconditionvaluename_Min_Fields = {
  __typename?: 'encounterconditionvaluename_min_fields';
  encounter_condition_value_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "pokemon_v2_encounterconditionvaluename" */
export type Encounterconditionvaluename_Min_Order_By = {
  encounter_condition_value_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_encounterconditionvaluename". */
export type Encounterconditionvaluename_Order_By = {
  encounter_condition_value_id?: InputMaybe<Order_By>;
  encounterconditionvalue?: InputMaybe<Encounterconditionvalue_Order_By>;
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_encounterconditionvaluename" */
export enum Encounterconditionvaluename_Select_Column {
  /** column name */
  EncounterConditionValueId = 'encounter_condition_value_id',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Encounterconditionvaluename_Stddev_Fields = {
  __typename?: 'encounterconditionvaluename_stddev_fields';
  encounter_condition_value_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_encounterconditionvaluename" */
export type Encounterconditionvaluename_Stddev_Order_By = {
  encounter_condition_value_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Encounterconditionvaluename_Stddev_Pop_Fields = {
  __typename?: 'encounterconditionvaluename_stddev_pop_fields';
  encounter_condition_value_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_encounterconditionvaluename" */
export type Encounterconditionvaluename_Stddev_Pop_Order_By = {
  encounter_condition_value_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Encounterconditionvaluename_Stddev_Samp_Fields = {
  __typename?: 'encounterconditionvaluename_stddev_samp_fields';
  encounter_condition_value_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_encounterconditionvaluename" */
export type Encounterconditionvaluename_Stddev_Samp_Order_By = {
  encounter_condition_value_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Encounterconditionvaluename_Sum_Fields = {
  __typename?: 'encounterconditionvaluename_sum_fields';
  encounter_condition_value_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_encounterconditionvaluename" */
export type Encounterconditionvaluename_Sum_Order_By = {
  encounter_condition_value_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Encounterconditionvaluename_Var_Pop_Fields = {
  __typename?: 'encounterconditionvaluename_var_pop_fields';
  encounter_condition_value_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_encounterconditionvaluename" */
export type Encounterconditionvaluename_Var_Pop_Order_By = {
  encounter_condition_value_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Encounterconditionvaluename_Var_Samp_Fields = {
  __typename?: 'encounterconditionvaluename_var_samp_fields';
  encounter_condition_value_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_encounterconditionvaluename" */
export type Encounterconditionvaluename_Var_Samp_Order_By = {
  encounter_condition_value_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Encounterconditionvaluename_Variance_Fields = {
  __typename?: 'encounterconditionvaluename_variance_fields';
  encounter_condition_value_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_encounterconditionvaluename" */
export type Encounterconditionvaluename_Variance_Order_By = {
  encounter_condition_value_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_encountermethod" */
export type Encountermethod = {
  __typename?: 'encountermethod';
  /** An array relationship */
  encountermethodnames: Array<Encountermethodname>;
  /** An aggregate relationship */
  encountermethodnames_aggregate: Encountermethodname_Aggregate;
  /** An array relationship */
  encounterslots: Array<Encounterslot>;
  /** An aggregate relationship */
  encounterslots_aggregate: Encounterslot_Aggregate;
  id: Scalars['Int']['output'];
  /** An array relationship */
  locationareaencounterrates: Array<Locationareaencounterrate>;
  /** An aggregate relationship */
  locationareaencounterrates_aggregate: Locationareaencounterrate_Aggregate;
  name: Scalars['String']['output'];
  order?: Maybe<Scalars['Int']['output']>;
};


/** columns and relationships of "pokemon_v2_encountermethod" */
export type EncountermethodEncountermethodnamesArgs = {
  distinct_on?: InputMaybe<Array<Encountermethodname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Encountermethodname_Order_By>>;
  where?: InputMaybe<Encountermethodname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_encountermethod" */
export type EncountermethodEncountermethodnames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Encountermethodname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Encountermethodname_Order_By>>;
  where?: InputMaybe<Encountermethodname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_encountermethod" */
export type EncountermethodEncounterslotsArgs = {
  distinct_on?: InputMaybe<Array<Encounterslot_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Encounterslot_Order_By>>;
  where?: InputMaybe<Encounterslot_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_encountermethod" */
export type EncountermethodEncounterslots_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Encounterslot_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Encounterslot_Order_By>>;
  where?: InputMaybe<Encounterslot_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_encountermethod" */
export type EncountermethodLocationareaencounterratesArgs = {
  distinct_on?: InputMaybe<Array<Locationareaencounterrate_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Locationareaencounterrate_Order_By>>;
  where?: InputMaybe<Locationareaencounterrate_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_encountermethod" */
export type EncountermethodLocationareaencounterrates_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Locationareaencounterrate_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Locationareaencounterrate_Order_By>>;
  where?: InputMaybe<Locationareaencounterrate_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_encountermethod" */
export type Encountermethod_Aggregate = {
  __typename?: 'encountermethod_aggregate';
  aggregate?: Maybe<Encountermethod_Aggregate_Fields>;
  nodes: Array<Encountermethod>;
};

/** aggregate fields of "pokemon_v2_encountermethod" */
export type Encountermethod_Aggregate_Fields = {
  __typename?: 'encountermethod_aggregate_fields';
  avg?: Maybe<Encountermethod_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Encountermethod_Max_Fields>;
  min?: Maybe<Encountermethod_Min_Fields>;
  stddev?: Maybe<Encountermethod_Stddev_Fields>;
  stddev_pop?: Maybe<Encountermethod_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Encountermethod_Stddev_Samp_Fields>;
  sum?: Maybe<Encountermethod_Sum_Fields>;
  var_pop?: Maybe<Encountermethod_Var_Pop_Fields>;
  var_samp?: Maybe<Encountermethod_Var_Samp_Fields>;
  variance?: Maybe<Encountermethod_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_encountermethod" */
export type Encountermethod_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Encountermethod_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Encountermethod_Avg_Fields = {
  __typename?: 'encountermethod_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_encountermethod". All fields are combined with a logical 'AND'. */
export type Encountermethod_Bool_Exp = {
  _and?: InputMaybe<Array<Encountermethod_Bool_Exp>>;
  _not?: InputMaybe<Encountermethod_Bool_Exp>;
  _or?: InputMaybe<Array<Encountermethod_Bool_Exp>>;
  encountermethodnames?: InputMaybe<Encountermethodname_Bool_Exp>;
  encountermethodnames_aggregate?: InputMaybe<Encountermethodname_Aggregate_Bool_Exp>;
  encounterslots?: InputMaybe<Encounterslot_Bool_Exp>;
  encounterslots_aggregate?: InputMaybe<Encounterslot_Aggregate_Bool_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  locationareaencounterrates?: InputMaybe<Locationareaencounterrate_Bool_Exp>;
  locationareaencounterrates_aggregate?: InputMaybe<Locationareaencounterrate_Aggregate_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  order?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Encountermethod_Max_Fields = {
  __typename?: 'encountermethod_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Encountermethod_Min_Fields = {
  __typename?: 'encountermethod_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
};

/** Ordering options when selecting data from "pokemon_v2_encountermethod". */
export type Encountermethod_Order_By = {
  encountermethodnames_aggregate?: InputMaybe<Encountermethodname_Aggregate_Order_By>;
  encounterslots_aggregate?: InputMaybe<Encounterslot_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  locationareaencounterrates_aggregate?: InputMaybe<Locationareaencounterrate_Aggregate_Order_By>;
  name?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_encountermethod" */
export enum Encountermethod_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order'
}

/** aggregate stddev on columns */
export type Encountermethod_Stddev_Fields = {
  __typename?: 'encountermethod_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Encountermethod_Stddev_Pop_Fields = {
  __typename?: 'encountermethod_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Encountermethod_Stddev_Samp_Fields = {
  __typename?: 'encountermethod_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

/** aggregate sum on columns */
export type Encountermethod_Sum_Fields = {
  __typename?: 'encountermethod_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
};

/** aggregate var_pop on columns */
export type Encountermethod_Var_Pop_Fields = {
  __typename?: 'encountermethod_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Encountermethod_Var_Samp_Fields = {
  __typename?: 'encountermethod_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Encountermethod_Variance_Fields = {
  __typename?: 'encountermethod_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_encountermethodname" */
export type Encountermethodname = {
  __typename?: 'encountermethodname';
  encounter_method_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  encountermethod?: Maybe<Encountermethod>;
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_encountermethodname" */
export type Encountermethodname_Aggregate = {
  __typename?: 'encountermethodname_aggregate';
  aggregate?: Maybe<Encountermethodname_Aggregate_Fields>;
  nodes: Array<Encountermethodname>;
};

export type Encountermethodname_Aggregate_Bool_Exp = {
  count?: InputMaybe<Encountermethodname_Aggregate_Bool_Exp_Count>;
};

export type Encountermethodname_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Encountermethodname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Encountermethodname_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_encountermethodname" */
export type Encountermethodname_Aggregate_Fields = {
  __typename?: 'encountermethodname_aggregate_fields';
  avg?: Maybe<Encountermethodname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Encountermethodname_Max_Fields>;
  min?: Maybe<Encountermethodname_Min_Fields>;
  stddev?: Maybe<Encountermethodname_Stddev_Fields>;
  stddev_pop?: Maybe<Encountermethodname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Encountermethodname_Stddev_Samp_Fields>;
  sum?: Maybe<Encountermethodname_Sum_Fields>;
  var_pop?: Maybe<Encountermethodname_Var_Pop_Fields>;
  var_samp?: Maybe<Encountermethodname_Var_Samp_Fields>;
  variance?: Maybe<Encountermethodname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_encountermethodname" */
export type Encountermethodname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Encountermethodname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_encountermethodname" */
export type Encountermethodname_Aggregate_Order_By = {
  avg?: InputMaybe<Encountermethodname_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Encountermethodname_Max_Order_By>;
  min?: InputMaybe<Encountermethodname_Min_Order_By>;
  stddev?: InputMaybe<Encountermethodname_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Encountermethodname_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Encountermethodname_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Encountermethodname_Sum_Order_By>;
  var_pop?: InputMaybe<Encountermethodname_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Encountermethodname_Var_Samp_Order_By>;
  variance?: InputMaybe<Encountermethodname_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Encountermethodname_Avg_Fields = {
  __typename?: 'encountermethodname_avg_fields';
  encounter_method_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_encountermethodname" */
export type Encountermethodname_Avg_Order_By = {
  encounter_method_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_encountermethodname". All fields are combined with a logical 'AND'. */
export type Encountermethodname_Bool_Exp = {
  _and?: InputMaybe<Array<Encountermethodname_Bool_Exp>>;
  _not?: InputMaybe<Encountermethodname_Bool_Exp>;
  _or?: InputMaybe<Array<Encountermethodname_Bool_Exp>>;
  encounter_method_id?: InputMaybe<Int_Comparison_Exp>;
  encountermethod?: InputMaybe<Encountermethod_Bool_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** aggregate max on columns */
export type Encountermethodname_Max_Fields = {
  __typename?: 'encountermethodname_max_fields';
  encounter_method_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "pokemon_v2_encountermethodname" */
export type Encountermethodname_Max_Order_By = {
  encounter_method_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Encountermethodname_Min_Fields = {
  __typename?: 'encountermethodname_min_fields';
  encounter_method_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "pokemon_v2_encountermethodname" */
export type Encountermethodname_Min_Order_By = {
  encounter_method_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_encountermethodname". */
export type Encountermethodname_Order_By = {
  encounter_method_id?: InputMaybe<Order_By>;
  encountermethod?: InputMaybe<Encountermethod_Order_By>;
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_encountermethodname" */
export enum Encountermethodname_Select_Column {
  /** column name */
  EncounterMethodId = 'encounter_method_id',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Encountermethodname_Stddev_Fields = {
  __typename?: 'encountermethodname_stddev_fields';
  encounter_method_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_encountermethodname" */
export type Encountermethodname_Stddev_Order_By = {
  encounter_method_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Encountermethodname_Stddev_Pop_Fields = {
  __typename?: 'encountermethodname_stddev_pop_fields';
  encounter_method_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_encountermethodname" */
export type Encountermethodname_Stddev_Pop_Order_By = {
  encounter_method_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Encountermethodname_Stddev_Samp_Fields = {
  __typename?: 'encountermethodname_stddev_samp_fields';
  encounter_method_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_encountermethodname" */
export type Encountermethodname_Stddev_Samp_Order_By = {
  encounter_method_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Encountermethodname_Sum_Fields = {
  __typename?: 'encountermethodname_sum_fields';
  encounter_method_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_encountermethodname" */
export type Encountermethodname_Sum_Order_By = {
  encounter_method_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Encountermethodname_Var_Pop_Fields = {
  __typename?: 'encountermethodname_var_pop_fields';
  encounter_method_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_encountermethodname" */
export type Encountermethodname_Var_Pop_Order_By = {
  encounter_method_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Encountermethodname_Var_Samp_Fields = {
  __typename?: 'encountermethodname_var_samp_fields';
  encounter_method_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_encountermethodname" */
export type Encountermethodname_Var_Samp_Order_By = {
  encounter_method_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Encountermethodname_Variance_Fields = {
  __typename?: 'encountermethodname_variance_fields';
  encounter_method_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_encountermethodname" */
export type Encountermethodname_Variance_Order_By = {
  encounter_method_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_encounterslot" */
export type Encounterslot = {
  __typename?: 'encounterslot';
  encounter_method_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  encountermethod?: Maybe<Encountermethod>;
  /** An array relationship */
  encounters: Array<Encounter>;
  /** An aggregate relationship */
  encounters_aggregate: Encounter_Aggregate;
  id: Scalars['Int']['output'];
  rarity: Scalars['Int']['output'];
  slot?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  versiongroup?: Maybe<Versiongroup>;
};


/** columns and relationships of "pokemon_v2_encounterslot" */
export type EncounterslotEncountersArgs = {
  distinct_on?: InputMaybe<Array<Encounter_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Encounter_Order_By>>;
  where?: InputMaybe<Encounter_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_encounterslot" */
export type EncounterslotEncounters_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Encounter_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Encounter_Order_By>>;
  where?: InputMaybe<Encounter_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_encounterslot" */
export type Encounterslot_Aggregate = {
  __typename?: 'encounterslot_aggregate';
  aggregate?: Maybe<Encounterslot_Aggregate_Fields>;
  nodes: Array<Encounterslot>;
};

export type Encounterslot_Aggregate_Bool_Exp = {
  count?: InputMaybe<Encounterslot_Aggregate_Bool_Exp_Count>;
};

export type Encounterslot_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Encounterslot_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Encounterslot_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_encounterslot" */
export type Encounterslot_Aggregate_Fields = {
  __typename?: 'encounterslot_aggregate_fields';
  avg?: Maybe<Encounterslot_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Encounterslot_Max_Fields>;
  min?: Maybe<Encounterslot_Min_Fields>;
  stddev?: Maybe<Encounterslot_Stddev_Fields>;
  stddev_pop?: Maybe<Encounterslot_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Encounterslot_Stddev_Samp_Fields>;
  sum?: Maybe<Encounterslot_Sum_Fields>;
  var_pop?: Maybe<Encounterslot_Var_Pop_Fields>;
  var_samp?: Maybe<Encounterslot_Var_Samp_Fields>;
  variance?: Maybe<Encounterslot_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_encounterslot" */
export type Encounterslot_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Encounterslot_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_encounterslot" */
export type Encounterslot_Aggregate_Order_By = {
  avg?: InputMaybe<Encounterslot_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Encounterslot_Max_Order_By>;
  min?: InputMaybe<Encounterslot_Min_Order_By>;
  stddev?: InputMaybe<Encounterslot_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Encounterslot_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Encounterslot_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Encounterslot_Sum_Order_By>;
  var_pop?: InputMaybe<Encounterslot_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Encounterslot_Var_Samp_Order_By>;
  variance?: InputMaybe<Encounterslot_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Encounterslot_Avg_Fields = {
  __typename?: 'encounterslot_avg_fields';
  encounter_method_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  rarity?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_encounterslot" */
export type Encounterslot_Avg_Order_By = {
  encounter_method_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  rarity?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_encounterslot". All fields are combined with a logical 'AND'. */
export type Encounterslot_Bool_Exp = {
  _and?: InputMaybe<Array<Encounterslot_Bool_Exp>>;
  _not?: InputMaybe<Encounterslot_Bool_Exp>;
  _or?: InputMaybe<Array<Encounterslot_Bool_Exp>>;
  encounter_method_id?: InputMaybe<Int_Comparison_Exp>;
  encountermethod?: InputMaybe<Encountermethod_Bool_Exp>;
  encounters?: InputMaybe<Encounter_Bool_Exp>;
  encounters_aggregate?: InputMaybe<Encounter_Aggregate_Bool_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  rarity?: InputMaybe<Int_Comparison_Exp>;
  slot?: InputMaybe<Int_Comparison_Exp>;
  version_group_id?: InputMaybe<Int_Comparison_Exp>;
  versiongroup?: InputMaybe<Versiongroup_Bool_Exp>;
};

/** aggregate max on columns */
export type Encounterslot_Max_Fields = {
  __typename?: 'encounterslot_max_fields';
  encounter_method_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  rarity?: Maybe<Scalars['Int']['output']>;
  slot?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_encounterslot" */
export type Encounterslot_Max_Order_By = {
  encounter_method_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  rarity?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Encounterslot_Min_Fields = {
  __typename?: 'encounterslot_min_fields';
  encounter_method_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  rarity?: Maybe<Scalars['Int']['output']>;
  slot?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_encounterslot" */
export type Encounterslot_Min_Order_By = {
  encounter_method_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  rarity?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_encounterslot". */
export type Encounterslot_Order_By = {
  encounter_method_id?: InputMaybe<Order_By>;
  encountermethod?: InputMaybe<Encountermethod_Order_By>;
  encounters_aggregate?: InputMaybe<Encounter_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  rarity?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
  versiongroup?: InputMaybe<Versiongroup_Order_By>;
};

/** select columns of table "pokemon_v2_encounterslot" */
export enum Encounterslot_Select_Column {
  /** column name */
  EncounterMethodId = 'encounter_method_id',
  /** column name */
  Id = 'id',
  /** column name */
  Rarity = 'rarity',
  /** column name */
  Slot = 'slot',
  /** column name */
  VersionGroupId = 'version_group_id'
}

/** aggregate stddev on columns */
export type Encounterslot_Stddev_Fields = {
  __typename?: 'encounterslot_stddev_fields';
  encounter_method_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  rarity?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_encounterslot" */
export type Encounterslot_Stddev_Order_By = {
  encounter_method_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  rarity?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Encounterslot_Stddev_Pop_Fields = {
  __typename?: 'encounterslot_stddev_pop_fields';
  encounter_method_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  rarity?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_encounterslot" */
export type Encounterslot_Stddev_Pop_Order_By = {
  encounter_method_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  rarity?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Encounterslot_Stddev_Samp_Fields = {
  __typename?: 'encounterslot_stddev_samp_fields';
  encounter_method_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  rarity?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_encounterslot" */
export type Encounterslot_Stddev_Samp_Order_By = {
  encounter_method_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  rarity?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Encounterslot_Sum_Fields = {
  __typename?: 'encounterslot_sum_fields';
  encounter_method_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  rarity?: Maybe<Scalars['Int']['output']>;
  slot?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_encounterslot" */
export type Encounterslot_Sum_Order_By = {
  encounter_method_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  rarity?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Encounterslot_Var_Pop_Fields = {
  __typename?: 'encounterslot_var_pop_fields';
  encounter_method_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  rarity?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_encounterslot" */
export type Encounterslot_Var_Pop_Order_By = {
  encounter_method_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  rarity?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Encounterslot_Var_Samp_Fields = {
  __typename?: 'encounterslot_var_samp_fields';
  encounter_method_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  rarity?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_encounterslot" */
export type Encounterslot_Var_Samp_Order_By = {
  encounter_method_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  rarity?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Encounterslot_Variance_Fields = {
  __typename?: 'encounterslot_variance_fields';
  encounter_method_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  rarity?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_encounterslot" */
export type Encounterslot_Variance_Order_By = {
  encounter_method_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  rarity?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_evolutionchain" */
export type Evolutionchain = {
  __typename?: 'evolutionchain';
  baby_trigger_item_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  /** An object relationship */
  item?: Maybe<Item>;
  /** An array relationship */
  pokemonspecies: Array<Pokemonspecies>;
  /** An aggregate relationship */
  pokemonspecies_aggregate: Pokemonspecies_Aggregate;
};


/** columns and relationships of "pokemon_v2_evolutionchain" */
export type EvolutionchainPokemonspeciesArgs = {
  distinct_on?: InputMaybe<Array<Pokemonspecies_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonspecies_Order_By>>;
  where?: InputMaybe<Pokemonspecies_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_evolutionchain" */
export type EvolutionchainPokemonspecies_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonspecies_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonspecies_Order_By>>;
  where?: InputMaybe<Pokemonspecies_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_evolutionchain" */
export type Evolutionchain_Aggregate = {
  __typename?: 'evolutionchain_aggregate';
  aggregate?: Maybe<Evolutionchain_Aggregate_Fields>;
  nodes: Array<Evolutionchain>;
};

export type Evolutionchain_Aggregate_Bool_Exp = {
  count?: InputMaybe<Evolutionchain_Aggregate_Bool_Exp_Count>;
};

export type Evolutionchain_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Evolutionchain_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Evolutionchain_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_evolutionchain" */
export type Evolutionchain_Aggregate_Fields = {
  __typename?: 'evolutionchain_aggregate_fields';
  avg?: Maybe<Evolutionchain_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Evolutionchain_Max_Fields>;
  min?: Maybe<Evolutionchain_Min_Fields>;
  stddev?: Maybe<Evolutionchain_Stddev_Fields>;
  stddev_pop?: Maybe<Evolutionchain_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Evolutionchain_Stddev_Samp_Fields>;
  sum?: Maybe<Evolutionchain_Sum_Fields>;
  var_pop?: Maybe<Evolutionchain_Var_Pop_Fields>;
  var_samp?: Maybe<Evolutionchain_Var_Samp_Fields>;
  variance?: Maybe<Evolutionchain_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_evolutionchain" */
export type Evolutionchain_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Evolutionchain_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_evolutionchain" */
export type Evolutionchain_Aggregate_Order_By = {
  avg?: InputMaybe<Evolutionchain_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Evolutionchain_Max_Order_By>;
  min?: InputMaybe<Evolutionchain_Min_Order_By>;
  stddev?: InputMaybe<Evolutionchain_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Evolutionchain_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Evolutionchain_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Evolutionchain_Sum_Order_By>;
  var_pop?: InputMaybe<Evolutionchain_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Evolutionchain_Var_Samp_Order_By>;
  variance?: InputMaybe<Evolutionchain_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Evolutionchain_Avg_Fields = {
  __typename?: 'evolutionchain_avg_fields';
  baby_trigger_item_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_evolutionchain" */
export type Evolutionchain_Avg_Order_By = {
  baby_trigger_item_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_evolutionchain". All fields are combined with a logical 'AND'. */
export type Evolutionchain_Bool_Exp = {
  _and?: InputMaybe<Array<Evolutionchain_Bool_Exp>>;
  _not?: InputMaybe<Evolutionchain_Bool_Exp>;
  _or?: InputMaybe<Array<Evolutionchain_Bool_Exp>>;
  baby_trigger_item_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  item?: InputMaybe<Item_Bool_Exp>;
  pokemonspecies?: InputMaybe<Pokemonspecies_Bool_Exp>;
  pokemonspecies_aggregate?: InputMaybe<Pokemonspecies_Aggregate_Bool_Exp>;
};

/** aggregate max on columns */
export type Evolutionchain_Max_Fields = {
  __typename?: 'evolutionchain_max_fields';
  baby_trigger_item_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_evolutionchain" */
export type Evolutionchain_Max_Order_By = {
  baby_trigger_item_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Evolutionchain_Min_Fields = {
  __typename?: 'evolutionchain_min_fields';
  baby_trigger_item_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_evolutionchain" */
export type Evolutionchain_Min_Order_By = {
  baby_trigger_item_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_evolutionchain". */
export type Evolutionchain_Order_By = {
  baby_trigger_item_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item?: InputMaybe<Item_Order_By>;
  pokemonspecies_aggregate?: InputMaybe<Pokemonspecies_Aggregate_Order_By>;
};

/** select columns of table "pokemon_v2_evolutionchain" */
export enum Evolutionchain_Select_Column {
  /** column name */
  BabyTriggerItemId = 'baby_trigger_item_id',
  /** column name */
  Id = 'id'
}

/** aggregate stddev on columns */
export type Evolutionchain_Stddev_Fields = {
  __typename?: 'evolutionchain_stddev_fields';
  baby_trigger_item_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_evolutionchain" */
export type Evolutionchain_Stddev_Order_By = {
  baby_trigger_item_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Evolutionchain_Stddev_Pop_Fields = {
  __typename?: 'evolutionchain_stddev_pop_fields';
  baby_trigger_item_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_evolutionchain" */
export type Evolutionchain_Stddev_Pop_Order_By = {
  baby_trigger_item_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Evolutionchain_Stddev_Samp_Fields = {
  __typename?: 'evolutionchain_stddev_samp_fields';
  baby_trigger_item_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_evolutionchain" */
export type Evolutionchain_Stddev_Samp_Order_By = {
  baby_trigger_item_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Evolutionchain_Sum_Fields = {
  __typename?: 'evolutionchain_sum_fields';
  baby_trigger_item_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_evolutionchain" */
export type Evolutionchain_Sum_Order_By = {
  baby_trigger_item_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Evolutionchain_Var_Pop_Fields = {
  __typename?: 'evolutionchain_var_pop_fields';
  baby_trigger_item_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_evolutionchain" */
export type Evolutionchain_Var_Pop_Order_By = {
  baby_trigger_item_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Evolutionchain_Var_Samp_Fields = {
  __typename?: 'evolutionchain_var_samp_fields';
  baby_trigger_item_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_evolutionchain" */
export type Evolutionchain_Var_Samp_Order_By = {
  baby_trigger_item_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Evolutionchain_Variance_Fields = {
  __typename?: 'evolutionchain_variance_fields';
  baby_trigger_item_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_evolutionchain" */
export type Evolutionchain_Variance_Order_By = {
  baby_trigger_item_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_evolutiontrigger" */
export type Evolutiontrigger = {
  __typename?: 'evolutiontrigger';
  /** An array relationship */
  evolutiontriggernames: Array<Evolutiontriggername>;
  /** An aggregate relationship */
  evolutiontriggernames_aggregate: Evolutiontriggername_Aggregate;
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  /** An array relationship */
  pokemonevolutions: Array<Pokemonevolution>;
  /** An aggregate relationship */
  pokemonevolutions_aggregate: Pokemonevolution_Aggregate;
};


/** columns and relationships of "pokemon_v2_evolutiontrigger" */
export type EvolutiontriggerEvolutiontriggernamesArgs = {
  distinct_on?: InputMaybe<Array<Evolutiontriggername_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Evolutiontriggername_Order_By>>;
  where?: InputMaybe<Evolutiontriggername_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_evolutiontrigger" */
export type EvolutiontriggerEvolutiontriggernames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Evolutiontriggername_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Evolutiontriggername_Order_By>>;
  where?: InputMaybe<Evolutiontriggername_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_evolutiontrigger" */
export type EvolutiontriggerPokemonevolutionsArgs = {
  distinct_on?: InputMaybe<Array<Pokemonevolution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonevolution_Order_By>>;
  where?: InputMaybe<Pokemonevolution_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_evolutiontrigger" */
export type EvolutiontriggerPokemonevolutions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonevolution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonevolution_Order_By>>;
  where?: InputMaybe<Pokemonevolution_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_evolutiontrigger" */
export type Evolutiontrigger_Aggregate = {
  __typename?: 'evolutiontrigger_aggregate';
  aggregate?: Maybe<Evolutiontrigger_Aggregate_Fields>;
  nodes: Array<Evolutiontrigger>;
};

/** aggregate fields of "pokemon_v2_evolutiontrigger" */
export type Evolutiontrigger_Aggregate_Fields = {
  __typename?: 'evolutiontrigger_aggregate_fields';
  avg?: Maybe<Evolutiontrigger_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Evolutiontrigger_Max_Fields>;
  min?: Maybe<Evolutiontrigger_Min_Fields>;
  stddev?: Maybe<Evolutiontrigger_Stddev_Fields>;
  stddev_pop?: Maybe<Evolutiontrigger_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Evolutiontrigger_Stddev_Samp_Fields>;
  sum?: Maybe<Evolutiontrigger_Sum_Fields>;
  var_pop?: Maybe<Evolutiontrigger_Var_Pop_Fields>;
  var_samp?: Maybe<Evolutiontrigger_Var_Samp_Fields>;
  variance?: Maybe<Evolutiontrigger_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_evolutiontrigger" */
export type Evolutiontrigger_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Evolutiontrigger_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Evolutiontrigger_Avg_Fields = {
  __typename?: 'evolutiontrigger_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_evolutiontrigger". All fields are combined with a logical 'AND'. */
export type Evolutiontrigger_Bool_Exp = {
  _and?: InputMaybe<Array<Evolutiontrigger_Bool_Exp>>;
  _not?: InputMaybe<Evolutiontrigger_Bool_Exp>;
  _or?: InputMaybe<Array<Evolutiontrigger_Bool_Exp>>;
  evolutiontriggernames?: InputMaybe<Evolutiontriggername_Bool_Exp>;
  evolutiontriggernames_aggregate?: InputMaybe<Evolutiontriggername_Aggregate_Bool_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  pokemonevolutions?: InputMaybe<Pokemonevolution_Bool_Exp>;
  pokemonevolutions_aggregate?: InputMaybe<Pokemonevolution_Aggregate_Bool_Exp>;
};

/** aggregate max on columns */
export type Evolutiontrigger_Max_Fields = {
  __typename?: 'evolutiontrigger_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Evolutiontrigger_Min_Fields = {
  __typename?: 'evolutiontrigger_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** Ordering options when selecting data from "pokemon_v2_evolutiontrigger". */
export type Evolutiontrigger_Order_By = {
  evolutiontriggernames_aggregate?: InputMaybe<Evolutiontriggername_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  pokemonevolutions_aggregate?: InputMaybe<Pokemonevolution_Aggregate_Order_By>;
};

/** select columns of table "pokemon_v2_evolutiontrigger" */
export enum Evolutiontrigger_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Evolutiontrigger_Stddev_Fields = {
  __typename?: 'evolutiontrigger_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Evolutiontrigger_Stddev_Pop_Fields = {
  __typename?: 'evolutiontrigger_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Evolutiontrigger_Stddev_Samp_Fields = {
  __typename?: 'evolutiontrigger_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate sum on columns */
export type Evolutiontrigger_Sum_Fields = {
  __typename?: 'evolutiontrigger_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate var_pop on columns */
export type Evolutiontrigger_Var_Pop_Fields = {
  __typename?: 'evolutiontrigger_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Evolutiontrigger_Var_Samp_Fields = {
  __typename?: 'evolutiontrigger_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Evolutiontrigger_Variance_Fields = {
  __typename?: 'evolutiontrigger_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_evolutiontriggername" */
export type Evolutiontriggername = {
  __typename?: 'evolutiontriggername';
  evolution_trigger_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  evolutiontrigger?: Maybe<Evolutiontrigger>;
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_evolutiontriggername" */
export type Evolutiontriggername_Aggregate = {
  __typename?: 'evolutiontriggername_aggregate';
  aggregate?: Maybe<Evolutiontriggername_Aggregate_Fields>;
  nodes: Array<Evolutiontriggername>;
};

export type Evolutiontriggername_Aggregate_Bool_Exp = {
  count?: InputMaybe<Evolutiontriggername_Aggregate_Bool_Exp_Count>;
};

export type Evolutiontriggername_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Evolutiontriggername_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Evolutiontriggername_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_evolutiontriggername" */
export type Evolutiontriggername_Aggregate_Fields = {
  __typename?: 'evolutiontriggername_aggregate_fields';
  avg?: Maybe<Evolutiontriggername_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Evolutiontriggername_Max_Fields>;
  min?: Maybe<Evolutiontriggername_Min_Fields>;
  stddev?: Maybe<Evolutiontriggername_Stddev_Fields>;
  stddev_pop?: Maybe<Evolutiontriggername_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Evolutiontriggername_Stddev_Samp_Fields>;
  sum?: Maybe<Evolutiontriggername_Sum_Fields>;
  var_pop?: Maybe<Evolutiontriggername_Var_Pop_Fields>;
  var_samp?: Maybe<Evolutiontriggername_Var_Samp_Fields>;
  variance?: Maybe<Evolutiontriggername_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_evolutiontriggername" */
export type Evolutiontriggername_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Evolutiontriggername_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_evolutiontriggername" */
export type Evolutiontriggername_Aggregate_Order_By = {
  avg?: InputMaybe<Evolutiontriggername_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Evolutiontriggername_Max_Order_By>;
  min?: InputMaybe<Evolutiontriggername_Min_Order_By>;
  stddev?: InputMaybe<Evolutiontriggername_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Evolutiontriggername_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Evolutiontriggername_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Evolutiontriggername_Sum_Order_By>;
  var_pop?: InputMaybe<Evolutiontriggername_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Evolutiontriggername_Var_Samp_Order_By>;
  variance?: InputMaybe<Evolutiontriggername_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Evolutiontriggername_Avg_Fields = {
  __typename?: 'evolutiontriggername_avg_fields';
  evolution_trigger_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_evolutiontriggername" */
export type Evolutiontriggername_Avg_Order_By = {
  evolution_trigger_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_evolutiontriggername". All fields are combined with a logical 'AND'. */
export type Evolutiontriggername_Bool_Exp = {
  _and?: InputMaybe<Array<Evolutiontriggername_Bool_Exp>>;
  _not?: InputMaybe<Evolutiontriggername_Bool_Exp>;
  _or?: InputMaybe<Array<Evolutiontriggername_Bool_Exp>>;
  evolution_trigger_id?: InputMaybe<Int_Comparison_Exp>;
  evolutiontrigger?: InputMaybe<Evolutiontrigger_Bool_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** aggregate max on columns */
export type Evolutiontriggername_Max_Fields = {
  __typename?: 'evolutiontriggername_max_fields';
  evolution_trigger_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "pokemon_v2_evolutiontriggername" */
export type Evolutiontriggername_Max_Order_By = {
  evolution_trigger_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Evolutiontriggername_Min_Fields = {
  __typename?: 'evolutiontriggername_min_fields';
  evolution_trigger_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "pokemon_v2_evolutiontriggername" */
export type Evolutiontriggername_Min_Order_By = {
  evolution_trigger_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_evolutiontriggername". */
export type Evolutiontriggername_Order_By = {
  evolution_trigger_id?: InputMaybe<Order_By>;
  evolutiontrigger?: InputMaybe<Evolutiontrigger_Order_By>;
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_evolutiontriggername" */
export enum Evolutiontriggername_Select_Column {
  /** column name */
  EvolutionTriggerId = 'evolution_trigger_id',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Evolutiontriggername_Stddev_Fields = {
  __typename?: 'evolutiontriggername_stddev_fields';
  evolution_trigger_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_evolutiontriggername" */
export type Evolutiontriggername_Stddev_Order_By = {
  evolution_trigger_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Evolutiontriggername_Stddev_Pop_Fields = {
  __typename?: 'evolutiontriggername_stddev_pop_fields';
  evolution_trigger_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_evolutiontriggername" */
export type Evolutiontriggername_Stddev_Pop_Order_By = {
  evolution_trigger_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Evolutiontriggername_Stddev_Samp_Fields = {
  __typename?: 'evolutiontriggername_stddev_samp_fields';
  evolution_trigger_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_evolutiontriggername" */
export type Evolutiontriggername_Stddev_Samp_Order_By = {
  evolution_trigger_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Evolutiontriggername_Sum_Fields = {
  __typename?: 'evolutiontriggername_sum_fields';
  evolution_trigger_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_evolutiontriggername" */
export type Evolutiontriggername_Sum_Order_By = {
  evolution_trigger_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Evolutiontriggername_Var_Pop_Fields = {
  __typename?: 'evolutiontriggername_var_pop_fields';
  evolution_trigger_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_evolutiontriggername" */
export type Evolutiontriggername_Var_Pop_Order_By = {
  evolution_trigger_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Evolutiontriggername_Var_Samp_Fields = {
  __typename?: 'evolutiontriggername_var_samp_fields';
  evolution_trigger_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_evolutiontriggername" */
export type Evolutiontriggername_Var_Samp_Order_By = {
  evolution_trigger_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Evolutiontriggername_Variance_Fields = {
  __typename?: 'evolutiontriggername_variance_fields';
  evolution_trigger_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_evolutiontriggername" */
export type Evolutiontriggername_Variance_Order_By = {
  evolution_trigger_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_experience" */
export type Experience = {
  __typename?: 'experience';
  experience: Scalars['Int']['output'];
  growth_rate_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  growthrate?: Maybe<Growthrate>;
  id: Scalars['Int']['output'];
  level: Scalars['Int']['output'];
};

/** aggregated selection of "pokemon_v2_experience" */
export type Experience_Aggregate = {
  __typename?: 'experience_aggregate';
  aggregate?: Maybe<Experience_Aggregate_Fields>;
  nodes: Array<Experience>;
};

export type Experience_Aggregate_Bool_Exp = {
  count?: InputMaybe<Experience_Aggregate_Bool_Exp_Count>;
};

export type Experience_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Experience_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Experience_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_experience" */
export type Experience_Aggregate_Fields = {
  __typename?: 'experience_aggregate_fields';
  avg?: Maybe<Experience_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Experience_Max_Fields>;
  min?: Maybe<Experience_Min_Fields>;
  stddev?: Maybe<Experience_Stddev_Fields>;
  stddev_pop?: Maybe<Experience_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Experience_Stddev_Samp_Fields>;
  sum?: Maybe<Experience_Sum_Fields>;
  var_pop?: Maybe<Experience_Var_Pop_Fields>;
  var_samp?: Maybe<Experience_Var_Samp_Fields>;
  variance?: Maybe<Experience_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_experience" */
export type Experience_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Experience_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_experience" */
export type Experience_Aggregate_Order_By = {
  avg?: InputMaybe<Experience_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Experience_Max_Order_By>;
  min?: InputMaybe<Experience_Min_Order_By>;
  stddev?: InputMaybe<Experience_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Experience_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Experience_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Experience_Sum_Order_By>;
  var_pop?: InputMaybe<Experience_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Experience_Var_Samp_Order_By>;
  variance?: InputMaybe<Experience_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Experience_Avg_Fields = {
  __typename?: 'experience_avg_fields';
  experience?: Maybe<Scalars['Float']['output']>;
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  level?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_experience" */
export type Experience_Avg_Order_By = {
  experience?: InputMaybe<Order_By>;
  growth_rate_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  level?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_experience". All fields are combined with a logical 'AND'. */
export type Experience_Bool_Exp = {
  _and?: InputMaybe<Array<Experience_Bool_Exp>>;
  _not?: InputMaybe<Experience_Bool_Exp>;
  _or?: InputMaybe<Array<Experience_Bool_Exp>>;
  experience?: InputMaybe<Int_Comparison_Exp>;
  growth_rate_id?: InputMaybe<Int_Comparison_Exp>;
  growthrate?: InputMaybe<Growthrate_Bool_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  level?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Experience_Max_Fields = {
  __typename?: 'experience_max_fields';
  experience?: Maybe<Scalars['Int']['output']>;
  growth_rate_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  level?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_experience" */
export type Experience_Max_Order_By = {
  experience?: InputMaybe<Order_By>;
  growth_rate_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  level?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Experience_Min_Fields = {
  __typename?: 'experience_min_fields';
  experience?: Maybe<Scalars['Int']['output']>;
  growth_rate_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  level?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_experience" */
export type Experience_Min_Order_By = {
  experience?: InputMaybe<Order_By>;
  growth_rate_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  level?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_experience". */
export type Experience_Order_By = {
  experience?: InputMaybe<Order_By>;
  growth_rate_id?: InputMaybe<Order_By>;
  growthrate?: InputMaybe<Growthrate_Order_By>;
  id?: InputMaybe<Order_By>;
  level?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_experience" */
export enum Experience_Select_Column {
  /** column name */
  Experience = 'experience',
  /** column name */
  GrowthRateId = 'growth_rate_id',
  /** column name */
  Id = 'id',
  /** column name */
  Level = 'level'
}

/** aggregate stddev on columns */
export type Experience_Stddev_Fields = {
  __typename?: 'experience_stddev_fields';
  experience?: Maybe<Scalars['Float']['output']>;
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  level?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_experience" */
export type Experience_Stddev_Order_By = {
  experience?: InputMaybe<Order_By>;
  growth_rate_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  level?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Experience_Stddev_Pop_Fields = {
  __typename?: 'experience_stddev_pop_fields';
  experience?: Maybe<Scalars['Float']['output']>;
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  level?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_experience" */
export type Experience_Stddev_Pop_Order_By = {
  experience?: InputMaybe<Order_By>;
  growth_rate_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  level?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Experience_Stddev_Samp_Fields = {
  __typename?: 'experience_stddev_samp_fields';
  experience?: Maybe<Scalars['Float']['output']>;
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  level?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_experience" */
export type Experience_Stddev_Samp_Order_By = {
  experience?: InputMaybe<Order_By>;
  growth_rate_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  level?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Experience_Sum_Fields = {
  __typename?: 'experience_sum_fields';
  experience?: Maybe<Scalars['Int']['output']>;
  growth_rate_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  level?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_experience" */
export type Experience_Sum_Order_By = {
  experience?: InputMaybe<Order_By>;
  growth_rate_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  level?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Experience_Var_Pop_Fields = {
  __typename?: 'experience_var_pop_fields';
  experience?: Maybe<Scalars['Float']['output']>;
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  level?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_experience" */
export type Experience_Var_Pop_Order_By = {
  experience?: InputMaybe<Order_By>;
  growth_rate_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  level?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Experience_Var_Samp_Fields = {
  __typename?: 'experience_var_samp_fields';
  experience?: Maybe<Scalars['Float']['output']>;
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  level?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_experience" */
export type Experience_Var_Samp_Order_By = {
  experience?: InputMaybe<Order_By>;
  growth_rate_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  level?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Experience_Variance_Fields = {
  __typename?: 'experience_variance_fields';
  experience?: Maybe<Scalars['Float']['output']>;
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  level?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_experience" */
export type Experience_Variance_Order_By = {
  experience?: InputMaybe<Order_By>;
  growth_rate_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  level?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_gender" */
export type Gender = {
  __typename?: 'gender';
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  /** An array relationship */
  pokemonevolutions: Array<Pokemonevolution>;
  /** An aggregate relationship */
  pokemonevolutions_aggregate: Pokemonevolution_Aggregate;
};


/** columns and relationships of "pokemon_v2_gender" */
export type GenderPokemonevolutionsArgs = {
  distinct_on?: InputMaybe<Array<Pokemonevolution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonevolution_Order_By>>;
  where?: InputMaybe<Pokemonevolution_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_gender" */
export type GenderPokemonevolutions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonevolution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonevolution_Order_By>>;
  where?: InputMaybe<Pokemonevolution_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_gender" */
export type Gender_Aggregate = {
  __typename?: 'gender_aggregate';
  aggregate?: Maybe<Gender_Aggregate_Fields>;
  nodes: Array<Gender>;
};

/** aggregate fields of "pokemon_v2_gender" */
export type Gender_Aggregate_Fields = {
  __typename?: 'gender_aggregate_fields';
  avg?: Maybe<Gender_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Gender_Max_Fields>;
  min?: Maybe<Gender_Min_Fields>;
  stddev?: Maybe<Gender_Stddev_Fields>;
  stddev_pop?: Maybe<Gender_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Gender_Stddev_Samp_Fields>;
  sum?: Maybe<Gender_Sum_Fields>;
  var_pop?: Maybe<Gender_Var_Pop_Fields>;
  var_samp?: Maybe<Gender_Var_Samp_Fields>;
  variance?: Maybe<Gender_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_gender" */
export type Gender_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Gender_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Gender_Avg_Fields = {
  __typename?: 'gender_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_gender". All fields are combined with a logical 'AND'. */
export type Gender_Bool_Exp = {
  _and?: InputMaybe<Array<Gender_Bool_Exp>>;
  _not?: InputMaybe<Gender_Bool_Exp>;
  _or?: InputMaybe<Array<Gender_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  pokemonevolutions?: InputMaybe<Pokemonevolution_Bool_Exp>;
  pokemonevolutions_aggregate?: InputMaybe<Pokemonevolution_Aggregate_Bool_Exp>;
};

/** aggregate max on columns */
export type Gender_Max_Fields = {
  __typename?: 'gender_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Gender_Min_Fields = {
  __typename?: 'gender_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** Ordering options when selecting data from "pokemon_v2_gender". */
export type Gender_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  pokemonevolutions_aggregate?: InputMaybe<Pokemonevolution_Aggregate_Order_By>;
};

/** select columns of table "pokemon_v2_gender" */
export enum Gender_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Gender_Stddev_Fields = {
  __typename?: 'gender_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Gender_Stddev_Pop_Fields = {
  __typename?: 'gender_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Gender_Stddev_Samp_Fields = {
  __typename?: 'gender_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate sum on columns */
export type Gender_Sum_Fields = {
  __typename?: 'gender_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate var_pop on columns */
export type Gender_Var_Pop_Fields = {
  __typename?: 'gender_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Gender_Var_Samp_Fields = {
  __typename?: 'gender_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Gender_Variance_Fields = {
  __typename?: 'gender_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_generation" */
export type Generation = {
  __typename?: 'generation';
  /** An array relationship */
  abilities: Array<Ability>;
  /** An aggregate relationship */
  abilities_aggregate: Ability_Aggregate;
  /** An array relationship */
  generationnames: Array<Generationname>;
  /** An aggregate relationship */
  generationnames_aggregate: Generationname_Aggregate;
  id: Scalars['Int']['output'];
  /** An array relationship */
  itemgameindices: Array<Itemgameindex>;
  /** An aggregate relationship */
  itemgameindices_aggregate: Itemgameindex_Aggregate;
  /** An array relationship */
  locationgameindices: Array<Locationgameindex>;
  /** An aggregate relationship */
  locationgameindices_aggregate: Locationgameindex_Aggregate;
  /** An array relationship */
  moves: Array<Move>;
  /** An aggregate relationship */
  moves_aggregate: Move_Aggregate;
  name: Scalars['String']['output'];
  /** An array relationship */
  pokemonabilitypasts: Array<Pokemonabilitypast>;
  /** An aggregate relationship */
  pokemonabilitypasts_aggregate: Pokemonabilitypast_Aggregate;
  /** An array relationship */
  pokemonformgenerations: Array<Pokemonformgeneration>;
  /** An aggregate relationship */
  pokemonformgenerations_aggregate: Pokemonformgeneration_Aggregate;
  /** An array relationship */
  pokemonspecies: Array<Pokemonspecies>;
  /** An aggregate relationship */
  pokemonspecies_aggregate: Pokemonspecies_Aggregate;
  /** An array relationship */
  pokemontypepasts: Array<Pokemontypepast>;
  /** An aggregate relationship */
  pokemontypepasts_aggregate: Pokemontypepast_Aggregate;
  /** An object relationship */
  region?: Maybe<Region>;
  region_id?: Maybe<Scalars['Int']['output']>;
  /** An array relationship */
  typeefficacypasts: Array<Typeefficacypast>;
  /** An aggregate relationship */
  typeefficacypasts_aggregate: Typeefficacypast_Aggregate;
  /** An array relationship */
  typegameindices: Array<Typegameindex>;
  /** An aggregate relationship */
  typegameindices_aggregate: Typegameindex_Aggregate;
  /** An array relationship */
  types: Array<Type>;
  /** An aggregate relationship */
  types_aggregate: Type_Aggregate;
  /** An array relationship */
  versiongroups: Array<Versiongroup>;
  /** An aggregate relationship */
  versiongroups_aggregate: Versiongroup_Aggregate;
};


/** columns and relationships of "pokemon_v2_generation" */
export type GenerationAbilitiesArgs = {
  distinct_on?: InputMaybe<Array<Ability_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Ability_Order_By>>;
  where?: InputMaybe<Ability_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_generation" */
export type GenerationAbilities_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Ability_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Ability_Order_By>>;
  where?: InputMaybe<Ability_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_generation" */
export type GenerationGenerationnamesArgs = {
  distinct_on?: InputMaybe<Array<Generationname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Generationname_Order_By>>;
  where?: InputMaybe<Generationname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_generation" */
export type GenerationGenerationnames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Generationname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Generationname_Order_By>>;
  where?: InputMaybe<Generationname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_generation" */
export type GenerationItemgameindicesArgs = {
  distinct_on?: InputMaybe<Array<Itemgameindex_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemgameindex_Order_By>>;
  where?: InputMaybe<Itemgameindex_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_generation" */
export type GenerationItemgameindices_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Itemgameindex_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemgameindex_Order_By>>;
  where?: InputMaybe<Itemgameindex_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_generation" */
export type GenerationLocationgameindicesArgs = {
  distinct_on?: InputMaybe<Array<Locationgameindex_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Locationgameindex_Order_By>>;
  where?: InputMaybe<Locationgameindex_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_generation" */
export type GenerationLocationgameindices_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Locationgameindex_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Locationgameindex_Order_By>>;
  where?: InputMaybe<Locationgameindex_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_generation" */
export type GenerationMovesArgs = {
  distinct_on?: InputMaybe<Array<Move_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Move_Order_By>>;
  where?: InputMaybe<Move_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_generation" */
export type GenerationMoves_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Move_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Move_Order_By>>;
  where?: InputMaybe<Move_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_generation" */
export type GenerationPokemonabilitypastsArgs = {
  distinct_on?: InputMaybe<Array<Pokemonabilitypast_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonabilitypast_Order_By>>;
  where?: InputMaybe<Pokemonabilitypast_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_generation" */
export type GenerationPokemonabilitypasts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonabilitypast_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonabilitypast_Order_By>>;
  where?: InputMaybe<Pokemonabilitypast_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_generation" */
export type GenerationPokemonformgenerationsArgs = {
  distinct_on?: InputMaybe<Array<Pokemonformgeneration_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonformgeneration_Order_By>>;
  where?: InputMaybe<Pokemonformgeneration_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_generation" */
export type GenerationPokemonformgenerations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonformgeneration_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonformgeneration_Order_By>>;
  where?: InputMaybe<Pokemonformgeneration_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_generation" */
export type GenerationPokemonspeciesArgs = {
  distinct_on?: InputMaybe<Array<Pokemonspecies_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonspecies_Order_By>>;
  where?: InputMaybe<Pokemonspecies_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_generation" */
export type GenerationPokemonspecies_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonspecies_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonspecies_Order_By>>;
  where?: InputMaybe<Pokemonspecies_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_generation" */
export type GenerationPokemontypepastsArgs = {
  distinct_on?: InputMaybe<Array<Pokemontypepast_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemontypepast_Order_By>>;
  where?: InputMaybe<Pokemontypepast_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_generation" */
export type GenerationPokemontypepasts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemontypepast_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemontypepast_Order_By>>;
  where?: InputMaybe<Pokemontypepast_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_generation" */
export type GenerationTypeefficacypastsArgs = {
  distinct_on?: InputMaybe<Array<Typeefficacypast_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Typeefficacypast_Order_By>>;
  where?: InputMaybe<Typeefficacypast_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_generation" */
export type GenerationTypeefficacypasts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Typeefficacypast_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Typeefficacypast_Order_By>>;
  where?: InputMaybe<Typeefficacypast_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_generation" */
export type GenerationTypegameindicesArgs = {
  distinct_on?: InputMaybe<Array<Typegameindex_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Typegameindex_Order_By>>;
  where?: InputMaybe<Typegameindex_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_generation" */
export type GenerationTypegameindices_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Typegameindex_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Typegameindex_Order_By>>;
  where?: InputMaybe<Typegameindex_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_generation" */
export type GenerationTypesArgs = {
  distinct_on?: InputMaybe<Array<Type_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Type_Order_By>>;
  where?: InputMaybe<Type_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_generation" */
export type GenerationTypes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Type_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Type_Order_By>>;
  where?: InputMaybe<Type_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_generation" */
export type GenerationVersiongroupsArgs = {
  distinct_on?: InputMaybe<Array<Versiongroup_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Versiongroup_Order_By>>;
  where?: InputMaybe<Versiongroup_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_generation" */
export type GenerationVersiongroups_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Versiongroup_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Versiongroup_Order_By>>;
  where?: InputMaybe<Versiongroup_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_generation" */
export type Generation_Aggregate = {
  __typename?: 'generation_aggregate';
  aggregate?: Maybe<Generation_Aggregate_Fields>;
  nodes: Array<Generation>;
};

export type Generation_Aggregate_Bool_Exp = {
  count?: InputMaybe<Generation_Aggregate_Bool_Exp_Count>;
};

export type Generation_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Generation_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Generation_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_generation" */
export type Generation_Aggregate_Fields = {
  __typename?: 'generation_aggregate_fields';
  avg?: Maybe<Generation_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Generation_Max_Fields>;
  min?: Maybe<Generation_Min_Fields>;
  stddev?: Maybe<Generation_Stddev_Fields>;
  stddev_pop?: Maybe<Generation_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Generation_Stddev_Samp_Fields>;
  sum?: Maybe<Generation_Sum_Fields>;
  var_pop?: Maybe<Generation_Var_Pop_Fields>;
  var_samp?: Maybe<Generation_Var_Samp_Fields>;
  variance?: Maybe<Generation_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_generation" */
export type Generation_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Generation_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_generation" */
export type Generation_Aggregate_Order_By = {
  avg?: InputMaybe<Generation_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Generation_Max_Order_By>;
  min?: InputMaybe<Generation_Min_Order_By>;
  stddev?: InputMaybe<Generation_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Generation_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Generation_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Generation_Sum_Order_By>;
  var_pop?: InputMaybe<Generation_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Generation_Var_Samp_Order_By>;
  variance?: InputMaybe<Generation_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Generation_Avg_Fields = {
  __typename?: 'generation_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_generation" */
export type Generation_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_generation". All fields are combined with a logical 'AND'. */
export type Generation_Bool_Exp = {
  _and?: InputMaybe<Array<Generation_Bool_Exp>>;
  _not?: InputMaybe<Generation_Bool_Exp>;
  _or?: InputMaybe<Array<Generation_Bool_Exp>>;
  abilities?: InputMaybe<Ability_Bool_Exp>;
  abilities_aggregate?: InputMaybe<Ability_Aggregate_Bool_Exp>;
  generationnames?: InputMaybe<Generationname_Bool_Exp>;
  generationnames_aggregate?: InputMaybe<Generationname_Aggregate_Bool_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  itemgameindices?: InputMaybe<Itemgameindex_Bool_Exp>;
  itemgameindices_aggregate?: InputMaybe<Itemgameindex_Aggregate_Bool_Exp>;
  locationgameindices?: InputMaybe<Locationgameindex_Bool_Exp>;
  locationgameindices_aggregate?: InputMaybe<Locationgameindex_Aggregate_Bool_Exp>;
  moves?: InputMaybe<Move_Bool_Exp>;
  moves_aggregate?: InputMaybe<Move_Aggregate_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  pokemonabilitypasts?: InputMaybe<Pokemonabilitypast_Bool_Exp>;
  pokemonabilitypasts_aggregate?: InputMaybe<Pokemonabilitypast_Aggregate_Bool_Exp>;
  pokemonformgenerations?: InputMaybe<Pokemonformgeneration_Bool_Exp>;
  pokemonformgenerations_aggregate?: InputMaybe<Pokemonformgeneration_Aggregate_Bool_Exp>;
  pokemonspecies?: InputMaybe<Pokemonspecies_Bool_Exp>;
  pokemonspecies_aggregate?: InputMaybe<Pokemonspecies_Aggregate_Bool_Exp>;
  pokemontypepasts?: InputMaybe<Pokemontypepast_Bool_Exp>;
  pokemontypepasts_aggregate?: InputMaybe<Pokemontypepast_Aggregate_Bool_Exp>;
  region?: InputMaybe<Region_Bool_Exp>;
  region_id?: InputMaybe<Int_Comparison_Exp>;
  typeefficacypasts?: InputMaybe<Typeefficacypast_Bool_Exp>;
  typeefficacypasts_aggregate?: InputMaybe<Typeefficacypast_Aggregate_Bool_Exp>;
  typegameindices?: InputMaybe<Typegameindex_Bool_Exp>;
  typegameindices_aggregate?: InputMaybe<Typegameindex_Aggregate_Bool_Exp>;
  types?: InputMaybe<Type_Bool_Exp>;
  types_aggregate?: InputMaybe<Type_Aggregate_Bool_Exp>;
  versiongroups?: InputMaybe<Versiongroup_Bool_Exp>;
  versiongroups_aggregate?: InputMaybe<Versiongroup_Aggregate_Bool_Exp>;
};

/** aggregate max on columns */
export type Generation_Max_Fields = {
  __typename?: 'generation_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  region_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_generation" */
export type Generation_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Generation_Min_Fields = {
  __typename?: 'generation_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  region_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_generation" */
export type Generation_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_generation". */
export type Generation_Order_By = {
  abilities_aggregate?: InputMaybe<Ability_Aggregate_Order_By>;
  generationnames_aggregate?: InputMaybe<Generationname_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  itemgameindices_aggregate?: InputMaybe<Itemgameindex_Aggregate_Order_By>;
  locationgameindices_aggregate?: InputMaybe<Locationgameindex_Aggregate_Order_By>;
  moves_aggregate?: InputMaybe<Move_Aggregate_Order_By>;
  name?: InputMaybe<Order_By>;
  pokemonabilitypasts_aggregate?: InputMaybe<Pokemonabilitypast_Aggregate_Order_By>;
  pokemonformgenerations_aggregate?: InputMaybe<Pokemonformgeneration_Aggregate_Order_By>;
  pokemonspecies_aggregate?: InputMaybe<Pokemonspecies_Aggregate_Order_By>;
  pokemontypepasts_aggregate?: InputMaybe<Pokemontypepast_Aggregate_Order_By>;
  region?: InputMaybe<Region_Order_By>;
  region_id?: InputMaybe<Order_By>;
  typeefficacypasts_aggregate?: InputMaybe<Typeefficacypast_Aggregate_Order_By>;
  typegameindices_aggregate?: InputMaybe<Typegameindex_Aggregate_Order_By>;
  types_aggregate?: InputMaybe<Type_Aggregate_Order_By>;
  versiongroups_aggregate?: InputMaybe<Versiongroup_Aggregate_Order_By>;
};

/** select columns of table "pokemon_v2_generation" */
export enum Generation_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  RegionId = 'region_id'
}

/** aggregate stddev on columns */
export type Generation_Stddev_Fields = {
  __typename?: 'generation_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_generation" */
export type Generation_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Generation_Stddev_Pop_Fields = {
  __typename?: 'generation_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_generation" */
export type Generation_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Generation_Stddev_Samp_Fields = {
  __typename?: 'generation_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_generation" */
export type Generation_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Generation_Sum_Fields = {
  __typename?: 'generation_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  region_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_generation" */
export type Generation_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Generation_Var_Pop_Fields = {
  __typename?: 'generation_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_generation" */
export type Generation_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Generation_Var_Samp_Fields = {
  __typename?: 'generation_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_generation" */
export type Generation_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Generation_Variance_Fields = {
  __typename?: 'generation_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_generation" */
export type Generation_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_generationname" */
export type Generationname = {
  __typename?: 'generationname';
  /** An object relationship */
  generation?: Maybe<Generation>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_generationname" */
export type Generationname_Aggregate = {
  __typename?: 'generationname_aggregate';
  aggregate?: Maybe<Generationname_Aggregate_Fields>;
  nodes: Array<Generationname>;
};

export type Generationname_Aggregate_Bool_Exp = {
  count?: InputMaybe<Generationname_Aggregate_Bool_Exp_Count>;
};

export type Generationname_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Generationname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Generationname_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_generationname" */
export type Generationname_Aggregate_Fields = {
  __typename?: 'generationname_aggregate_fields';
  avg?: Maybe<Generationname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Generationname_Max_Fields>;
  min?: Maybe<Generationname_Min_Fields>;
  stddev?: Maybe<Generationname_Stddev_Fields>;
  stddev_pop?: Maybe<Generationname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Generationname_Stddev_Samp_Fields>;
  sum?: Maybe<Generationname_Sum_Fields>;
  var_pop?: Maybe<Generationname_Var_Pop_Fields>;
  var_samp?: Maybe<Generationname_Var_Samp_Fields>;
  variance?: Maybe<Generationname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_generationname" */
export type Generationname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Generationname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_generationname" */
export type Generationname_Aggregate_Order_By = {
  avg?: InputMaybe<Generationname_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Generationname_Max_Order_By>;
  min?: InputMaybe<Generationname_Min_Order_By>;
  stddev?: InputMaybe<Generationname_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Generationname_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Generationname_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Generationname_Sum_Order_By>;
  var_pop?: InputMaybe<Generationname_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Generationname_Var_Samp_Order_By>;
  variance?: InputMaybe<Generationname_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Generationname_Avg_Fields = {
  __typename?: 'generationname_avg_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_generationname" */
export type Generationname_Avg_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_generationname". All fields are combined with a logical 'AND'. */
export type Generationname_Bool_Exp = {
  _and?: InputMaybe<Array<Generationname_Bool_Exp>>;
  _not?: InputMaybe<Generationname_Bool_Exp>;
  _or?: InputMaybe<Array<Generationname_Bool_Exp>>;
  generation?: InputMaybe<Generation_Bool_Exp>;
  generation_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** aggregate max on columns */
export type Generationname_Max_Fields = {
  __typename?: 'generationname_max_fields';
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "pokemon_v2_generationname" */
export type Generationname_Max_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Generationname_Min_Fields = {
  __typename?: 'generationname_min_fields';
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "pokemon_v2_generationname" */
export type Generationname_Min_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_generationname". */
export type Generationname_Order_By = {
  generation?: InputMaybe<Generation_Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_generationname" */
export enum Generationname_Select_Column {
  /** column name */
  GenerationId = 'generation_id',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Generationname_Stddev_Fields = {
  __typename?: 'generationname_stddev_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_generationname" */
export type Generationname_Stddev_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Generationname_Stddev_Pop_Fields = {
  __typename?: 'generationname_stddev_pop_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_generationname" */
export type Generationname_Stddev_Pop_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Generationname_Stddev_Samp_Fields = {
  __typename?: 'generationname_stddev_samp_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_generationname" */
export type Generationname_Stddev_Samp_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Generationname_Sum_Fields = {
  __typename?: 'generationname_sum_fields';
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_generationname" */
export type Generationname_Sum_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Generationname_Var_Pop_Fields = {
  __typename?: 'generationname_var_pop_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_generationname" */
export type Generationname_Var_Pop_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Generationname_Var_Samp_Fields = {
  __typename?: 'generationname_var_samp_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_generationname" */
export type Generationname_Var_Samp_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Generationname_Variance_Fields = {
  __typename?: 'generationname_variance_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_generationname" */
export type Generationname_Variance_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_growthrate" */
export type Growthrate = {
  __typename?: 'growthrate';
  /** An array relationship */
  experiences: Array<Experience>;
  /** An aggregate relationship */
  experiences_aggregate: Experience_Aggregate;
  formula: Scalars['String']['output'];
  /** An array relationship */
  growthratedescriptions: Array<Growthratedescription>;
  /** An aggregate relationship */
  growthratedescriptions_aggregate: Growthratedescription_Aggregate;
  id: Scalars['Int']['output'];
  /** An array relationship */
  machines: Array<Machine>;
  /** An aggregate relationship */
  machines_aggregate: Machine_Aggregate;
  name: Scalars['String']['output'];
  /** An array relationship */
  pokemonspecies: Array<Pokemonspecies>;
  /** An aggregate relationship */
  pokemonspecies_aggregate: Pokemonspecies_Aggregate;
};


/** columns and relationships of "pokemon_v2_growthrate" */
export type GrowthrateExperiencesArgs = {
  distinct_on?: InputMaybe<Array<Experience_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Experience_Order_By>>;
  where?: InputMaybe<Experience_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_growthrate" */
export type GrowthrateExperiences_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Experience_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Experience_Order_By>>;
  where?: InputMaybe<Experience_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_growthrate" */
export type GrowthrateGrowthratedescriptionsArgs = {
  distinct_on?: InputMaybe<Array<Growthratedescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Growthratedescription_Order_By>>;
  where?: InputMaybe<Growthratedescription_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_growthrate" */
export type GrowthrateGrowthratedescriptions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Growthratedescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Growthratedescription_Order_By>>;
  where?: InputMaybe<Growthratedescription_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_growthrate" */
export type GrowthrateMachinesArgs = {
  distinct_on?: InputMaybe<Array<Machine_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Machine_Order_By>>;
  where?: InputMaybe<Machine_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_growthrate" */
export type GrowthrateMachines_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Machine_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Machine_Order_By>>;
  where?: InputMaybe<Machine_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_growthrate" */
export type GrowthratePokemonspeciesArgs = {
  distinct_on?: InputMaybe<Array<Pokemonspecies_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonspecies_Order_By>>;
  where?: InputMaybe<Pokemonspecies_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_growthrate" */
export type GrowthratePokemonspecies_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonspecies_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonspecies_Order_By>>;
  where?: InputMaybe<Pokemonspecies_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_growthrate" */
export type Growthrate_Aggregate = {
  __typename?: 'growthrate_aggregate';
  aggregate?: Maybe<Growthrate_Aggregate_Fields>;
  nodes: Array<Growthrate>;
};

/** aggregate fields of "pokemon_v2_growthrate" */
export type Growthrate_Aggregate_Fields = {
  __typename?: 'growthrate_aggregate_fields';
  avg?: Maybe<Growthrate_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Growthrate_Max_Fields>;
  min?: Maybe<Growthrate_Min_Fields>;
  stddev?: Maybe<Growthrate_Stddev_Fields>;
  stddev_pop?: Maybe<Growthrate_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Growthrate_Stddev_Samp_Fields>;
  sum?: Maybe<Growthrate_Sum_Fields>;
  var_pop?: Maybe<Growthrate_Var_Pop_Fields>;
  var_samp?: Maybe<Growthrate_Var_Samp_Fields>;
  variance?: Maybe<Growthrate_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_growthrate" */
export type Growthrate_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Growthrate_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Growthrate_Avg_Fields = {
  __typename?: 'growthrate_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_growthrate". All fields are combined with a logical 'AND'. */
export type Growthrate_Bool_Exp = {
  _and?: InputMaybe<Array<Growthrate_Bool_Exp>>;
  _not?: InputMaybe<Growthrate_Bool_Exp>;
  _or?: InputMaybe<Array<Growthrate_Bool_Exp>>;
  experiences?: InputMaybe<Experience_Bool_Exp>;
  experiences_aggregate?: InputMaybe<Experience_Aggregate_Bool_Exp>;
  formula?: InputMaybe<String_Comparison_Exp>;
  growthratedescriptions?: InputMaybe<Growthratedescription_Bool_Exp>;
  growthratedescriptions_aggregate?: InputMaybe<Growthratedescription_Aggregate_Bool_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  machines?: InputMaybe<Machine_Bool_Exp>;
  machines_aggregate?: InputMaybe<Machine_Aggregate_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  pokemonspecies?: InputMaybe<Pokemonspecies_Bool_Exp>;
  pokemonspecies_aggregate?: InputMaybe<Pokemonspecies_Aggregate_Bool_Exp>;
};

/** aggregate max on columns */
export type Growthrate_Max_Fields = {
  __typename?: 'growthrate_max_fields';
  formula?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Growthrate_Min_Fields = {
  __typename?: 'growthrate_min_fields';
  formula?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** Ordering options when selecting data from "pokemon_v2_growthrate". */
export type Growthrate_Order_By = {
  experiences_aggregate?: InputMaybe<Experience_Aggregate_Order_By>;
  formula?: InputMaybe<Order_By>;
  growthratedescriptions_aggregate?: InputMaybe<Growthratedescription_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  machines_aggregate?: InputMaybe<Machine_Aggregate_Order_By>;
  name?: InputMaybe<Order_By>;
  pokemonspecies_aggregate?: InputMaybe<Pokemonspecies_Aggregate_Order_By>;
};

/** select columns of table "pokemon_v2_growthrate" */
export enum Growthrate_Select_Column {
  /** column name */
  Formula = 'formula',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Growthrate_Stddev_Fields = {
  __typename?: 'growthrate_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Growthrate_Stddev_Pop_Fields = {
  __typename?: 'growthrate_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Growthrate_Stddev_Samp_Fields = {
  __typename?: 'growthrate_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate sum on columns */
export type Growthrate_Sum_Fields = {
  __typename?: 'growthrate_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate var_pop on columns */
export type Growthrate_Var_Pop_Fields = {
  __typename?: 'growthrate_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Growthrate_Var_Samp_Fields = {
  __typename?: 'growthrate_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Growthrate_Variance_Fields = {
  __typename?: 'growthrate_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_growthratedescription" */
export type Growthratedescription = {
  __typename?: 'growthratedescription';
  description: Scalars['String']['output'];
  growth_rate_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  growthrate?: Maybe<Growthrate>;
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_growthratedescription" */
export type Growthratedescription_Aggregate = {
  __typename?: 'growthratedescription_aggregate';
  aggregate?: Maybe<Growthratedescription_Aggregate_Fields>;
  nodes: Array<Growthratedescription>;
};

export type Growthratedescription_Aggregate_Bool_Exp = {
  count?: InputMaybe<Growthratedescription_Aggregate_Bool_Exp_Count>;
};

export type Growthratedescription_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Growthratedescription_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Growthratedescription_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_growthratedescription" */
export type Growthratedescription_Aggregate_Fields = {
  __typename?: 'growthratedescription_aggregate_fields';
  avg?: Maybe<Growthratedescription_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Growthratedescription_Max_Fields>;
  min?: Maybe<Growthratedescription_Min_Fields>;
  stddev?: Maybe<Growthratedescription_Stddev_Fields>;
  stddev_pop?: Maybe<Growthratedescription_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Growthratedescription_Stddev_Samp_Fields>;
  sum?: Maybe<Growthratedescription_Sum_Fields>;
  var_pop?: Maybe<Growthratedescription_Var_Pop_Fields>;
  var_samp?: Maybe<Growthratedescription_Var_Samp_Fields>;
  variance?: Maybe<Growthratedescription_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_growthratedescription" */
export type Growthratedescription_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Growthratedescription_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_growthratedescription" */
export type Growthratedescription_Aggregate_Order_By = {
  avg?: InputMaybe<Growthratedescription_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Growthratedescription_Max_Order_By>;
  min?: InputMaybe<Growthratedescription_Min_Order_By>;
  stddev?: InputMaybe<Growthratedescription_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Growthratedescription_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Growthratedescription_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Growthratedescription_Sum_Order_By>;
  var_pop?: InputMaybe<Growthratedescription_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Growthratedescription_Var_Samp_Order_By>;
  variance?: InputMaybe<Growthratedescription_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Growthratedescription_Avg_Fields = {
  __typename?: 'growthratedescription_avg_fields';
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_growthratedescription" */
export type Growthratedescription_Avg_Order_By = {
  growth_rate_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_growthratedescription". All fields are combined with a logical 'AND'. */
export type Growthratedescription_Bool_Exp = {
  _and?: InputMaybe<Array<Growthratedescription_Bool_Exp>>;
  _not?: InputMaybe<Growthratedescription_Bool_Exp>;
  _or?: InputMaybe<Array<Growthratedescription_Bool_Exp>>;
  description?: InputMaybe<String_Comparison_Exp>;
  growth_rate_id?: InputMaybe<Int_Comparison_Exp>;
  growthrate?: InputMaybe<Growthrate_Bool_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Growthratedescription_Max_Fields = {
  __typename?: 'growthratedescription_max_fields';
  description?: Maybe<Scalars['String']['output']>;
  growth_rate_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_growthratedescription" */
export type Growthratedescription_Max_Order_By = {
  description?: InputMaybe<Order_By>;
  growth_rate_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Growthratedescription_Min_Fields = {
  __typename?: 'growthratedescription_min_fields';
  description?: Maybe<Scalars['String']['output']>;
  growth_rate_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_growthratedescription" */
export type Growthratedescription_Min_Order_By = {
  description?: InputMaybe<Order_By>;
  growth_rate_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_growthratedescription". */
export type Growthratedescription_Order_By = {
  description?: InputMaybe<Order_By>;
  growth_rate_id?: InputMaybe<Order_By>;
  growthrate?: InputMaybe<Growthrate_Order_By>;
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_growthratedescription" */
export enum Growthratedescription_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  GrowthRateId = 'growth_rate_id',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id'
}

/** aggregate stddev on columns */
export type Growthratedescription_Stddev_Fields = {
  __typename?: 'growthratedescription_stddev_fields';
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_growthratedescription" */
export type Growthratedescription_Stddev_Order_By = {
  growth_rate_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Growthratedescription_Stddev_Pop_Fields = {
  __typename?: 'growthratedescription_stddev_pop_fields';
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_growthratedescription" */
export type Growthratedescription_Stddev_Pop_Order_By = {
  growth_rate_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Growthratedescription_Stddev_Samp_Fields = {
  __typename?: 'growthratedescription_stddev_samp_fields';
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_growthratedescription" */
export type Growthratedescription_Stddev_Samp_Order_By = {
  growth_rate_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Growthratedescription_Sum_Fields = {
  __typename?: 'growthratedescription_sum_fields';
  growth_rate_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_growthratedescription" */
export type Growthratedescription_Sum_Order_By = {
  growth_rate_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Growthratedescription_Var_Pop_Fields = {
  __typename?: 'growthratedescription_var_pop_fields';
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_growthratedescription" */
export type Growthratedescription_Var_Pop_Order_By = {
  growth_rate_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Growthratedescription_Var_Samp_Fields = {
  __typename?: 'growthratedescription_var_samp_fields';
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_growthratedescription" */
export type Growthratedescription_Var_Samp_Order_By = {
  growth_rate_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Growthratedescription_Variance_Fields = {
  __typename?: 'growthratedescription_variance_fields';
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_growthratedescription" */
export type Growthratedescription_Variance_Order_By = {
  growth_rate_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_item" */
export type Item = {
  __typename?: 'item';
  /** An array relationship */
  PokemonevolutionsByHeldItemId: Array<Pokemonevolution>;
  /** An aggregate relationship */
  PokemonevolutionsByHeldItemId_aggregate: Pokemonevolution_Aggregate;
  /** An array relationship */
  berries: Array<Berry>;
  /** An aggregate relationship */
  berries_aggregate: Berry_Aggregate;
  cost?: Maybe<Scalars['Int']['output']>;
  /** An array relationship */
  evolutionchains: Array<Evolutionchain>;
  /** An aggregate relationship */
  evolutionchains_aggregate: Evolutionchain_Aggregate;
  fling_power?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  item_category_id?: Maybe<Scalars['Int']['output']>;
  item_fling_effect_id?: Maybe<Scalars['Int']['output']>;
  /** An array relationship */
  itemattributemaps: Array<Itemattributemap>;
  /** An aggregate relationship */
  itemattributemaps_aggregate: Itemattributemap_Aggregate;
  /** An object relationship */
  itemcategory?: Maybe<Itemcategory>;
  /** An array relationship */
  itemeffecttexts: Array<Itemeffecttext>;
  /** An aggregate relationship */
  itemeffecttexts_aggregate: Itemeffecttext_Aggregate;
  /** An array relationship */
  itemflavortexts: Array<Itemflavortext>;
  /** An aggregate relationship */
  itemflavortexts_aggregate: Itemflavortext_Aggregate;
  /** An object relationship */
  itemflingeffect?: Maybe<Itemflingeffect>;
  /** An array relationship */
  itemgameindices: Array<Itemgameindex>;
  /** An aggregate relationship */
  itemgameindices_aggregate: Itemgameindex_Aggregate;
  /** An array relationship */
  itemnames: Array<Itemname>;
  /** An aggregate relationship */
  itemnames_aggregate: Itemname_Aggregate;
  /** An array relationship */
  itemsprites: Array<Itemsprites>;
  /** An aggregate relationship */
  itemsprites_aggregate: Itemsprites_Aggregate;
  /** An array relationship */
  machines: Array<Machine>;
  /** An aggregate relationship */
  machines_aggregate: Machine_Aggregate;
  name: Scalars['String']['output'];
  /** An array relationship */
  pokemonevolutions: Array<Pokemonevolution>;
  /** An aggregate relationship */
  pokemonevolutions_aggregate: Pokemonevolution_Aggregate;
  /** An array relationship */
  pokemonitems: Array<Pokemonitem>;
  /** An aggregate relationship */
  pokemonitems_aggregate: Pokemonitem_Aggregate;
};


/** columns and relationships of "pokemon_v2_item" */
export type ItemPokemonevolutionsByHeldItemIdArgs = {
  distinct_on?: InputMaybe<Array<Pokemonevolution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonevolution_Order_By>>;
  where?: InputMaybe<Pokemonevolution_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_item" */
export type ItemPokemonevolutionsByHeldItemId_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonevolution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonevolution_Order_By>>;
  where?: InputMaybe<Pokemonevolution_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_item" */
export type ItemBerriesArgs = {
  distinct_on?: InputMaybe<Array<Berry_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Berry_Order_By>>;
  where?: InputMaybe<Berry_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_item" */
export type ItemBerries_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Berry_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Berry_Order_By>>;
  where?: InputMaybe<Berry_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_item" */
export type ItemEvolutionchainsArgs = {
  distinct_on?: InputMaybe<Array<Evolutionchain_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Evolutionchain_Order_By>>;
  where?: InputMaybe<Evolutionchain_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_item" */
export type ItemEvolutionchains_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Evolutionchain_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Evolutionchain_Order_By>>;
  where?: InputMaybe<Evolutionchain_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_item" */
export type ItemItemattributemapsArgs = {
  distinct_on?: InputMaybe<Array<Itemattributemap_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemattributemap_Order_By>>;
  where?: InputMaybe<Itemattributemap_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_item" */
export type ItemItemattributemaps_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Itemattributemap_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemattributemap_Order_By>>;
  where?: InputMaybe<Itemattributemap_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_item" */
export type ItemItemeffecttextsArgs = {
  distinct_on?: InputMaybe<Array<Itemeffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemeffecttext_Order_By>>;
  where?: InputMaybe<Itemeffecttext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_item" */
export type ItemItemeffecttexts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Itemeffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemeffecttext_Order_By>>;
  where?: InputMaybe<Itemeffecttext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_item" */
export type ItemItemflavortextsArgs = {
  distinct_on?: InputMaybe<Array<Itemflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemflavortext_Order_By>>;
  where?: InputMaybe<Itemflavortext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_item" */
export type ItemItemflavortexts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Itemflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemflavortext_Order_By>>;
  where?: InputMaybe<Itemflavortext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_item" */
export type ItemItemgameindicesArgs = {
  distinct_on?: InputMaybe<Array<Itemgameindex_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemgameindex_Order_By>>;
  where?: InputMaybe<Itemgameindex_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_item" */
export type ItemItemgameindices_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Itemgameindex_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemgameindex_Order_By>>;
  where?: InputMaybe<Itemgameindex_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_item" */
export type ItemItemnamesArgs = {
  distinct_on?: InputMaybe<Array<Itemname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemname_Order_By>>;
  where?: InputMaybe<Itemname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_item" */
export type ItemItemnames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Itemname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemname_Order_By>>;
  where?: InputMaybe<Itemname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_item" */
export type ItemItemspritesArgs = {
  distinct_on?: InputMaybe<Array<Itemsprites_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemsprites_Order_By>>;
  where?: InputMaybe<Itemsprites_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_item" */
export type ItemItemsprites_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Itemsprites_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemsprites_Order_By>>;
  where?: InputMaybe<Itemsprites_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_item" */
export type ItemMachinesArgs = {
  distinct_on?: InputMaybe<Array<Machine_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Machine_Order_By>>;
  where?: InputMaybe<Machine_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_item" */
export type ItemMachines_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Machine_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Machine_Order_By>>;
  where?: InputMaybe<Machine_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_item" */
export type ItemPokemonevolutionsArgs = {
  distinct_on?: InputMaybe<Array<Pokemonevolution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonevolution_Order_By>>;
  where?: InputMaybe<Pokemonevolution_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_item" */
export type ItemPokemonevolutions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonevolution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonevolution_Order_By>>;
  where?: InputMaybe<Pokemonevolution_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_item" */
export type ItemPokemonitemsArgs = {
  distinct_on?: InputMaybe<Array<Pokemonitem_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonitem_Order_By>>;
  where?: InputMaybe<Pokemonitem_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_item" */
export type ItemPokemonitems_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonitem_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonitem_Order_By>>;
  where?: InputMaybe<Pokemonitem_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_item" */
export type Item_Aggregate = {
  __typename?: 'item_aggregate';
  aggregate?: Maybe<Item_Aggregate_Fields>;
  nodes: Array<Item>;
};

export type Item_Aggregate_Bool_Exp = {
  count?: InputMaybe<Item_Aggregate_Bool_Exp_Count>;
};

export type Item_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Item_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Item_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_item" */
export type Item_Aggregate_Fields = {
  __typename?: 'item_aggregate_fields';
  avg?: Maybe<Item_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Item_Max_Fields>;
  min?: Maybe<Item_Min_Fields>;
  stddev?: Maybe<Item_Stddev_Fields>;
  stddev_pop?: Maybe<Item_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Item_Stddev_Samp_Fields>;
  sum?: Maybe<Item_Sum_Fields>;
  var_pop?: Maybe<Item_Var_Pop_Fields>;
  var_samp?: Maybe<Item_Var_Samp_Fields>;
  variance?: Maybe<Item_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_item" */
export type Item_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Item_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_item" */
export type Item_Aggregate_Order_By = {
  avg?: InputMaybe<Item_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Item_Max_Order_By>;
  min?: InputMaybe<Item_Min_Order_By>;
  stddev?: InputMaybe<Item_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Item_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Item_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Item_Sum_Order_By>;
  var_pop?: InputMaybe<Item_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Item_Var_Samp_Order_By>;
  variance?: InputMaybe<Item_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Item_Avg_Fields = {
  __typename?: 'item_avg_fields';
  cost?: Maybe<Scalars['Float']['output']>;
  fling_power?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_category_id?: Maybe<Scalars['Float']['output']>;
  item_fling_effect_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_item" */
export type Item_Avg_Order_By = {
  cost?: InputMaybe<Order_By>;
  fling_power?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_category_id?: InputMaybe<Order_By>;
  item_fling_effect_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_item". All fields are combined with a logical 'AND'. */
export type Item_Bool_Exp = {
  PokemonevolutionsByHeldItemId?: InputMaybe<Pokemonevolution_Bool_Exp>;
  PokemonevolutionsByHeldItemId_aggregate?: InputMaybe<Pokemonevolution_Aggregate_Bool_Exp>;
  _and?: InputMaybe<Array<Item_Bool_Exp>>;
  _not?: InputMaybe<Item_Bool_Exp>;
  _or?: InputMaybe<Array<Item_Bool_Exp>>;
  berries?: InputMaybe<Berry_Bool_Exp>;
  berries_aggregate?: InputMaybe<Berry_Aggregate_Bool_Exp>;
  cost?: InputMaybe<Int_Comparison_Exp>;
  evolutionchains?: InputMaybe<Evolutionchain_Bool_Exp>;
  evolutionchains_aggregate?: InputMaybe<Evolutionchain_Aggregate_Bool_Exp>;
  fling_power?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  item_category_id?: InputMaybe<Int_Comparison_Exp>;
  item_fling_effect_id?: InputMaybe<Int_Comparison_Exp>;
  itemattributemaps?: InputMaybe<Itemattributemap_Bool_Exp>;
  itemattributemaps_aggregate?: InputMaybe<Itemattributemap_Aggregate_Bool_Exp>;
  itemcategory?: InputMaybe<Itemcategory_Bool_Exp>;
  itemeffecttexts?: InputMaybe<Itemeffecttext_Bool_Exp>;
  itemeffecttexts_aggregate?: InputMaybe<Itemeffecttext_Aggregate_Bool_Exp>;
  itemflavortexts?: InputMaybe<Itemflavortext_Bool_Exp>;
  itemflavortexts_aggregate?: InputMaybe<Itemflavortext_Aggregate_Bool_Exp>;
  itemflingeffect?: InputMaybe<Itemflingeffect_Bool_Exp>;
  itemgameindices?: InputMaybe<Itemgameindex_Bool_Exp>;
  itemgameindices_aggregate?: InputMaybe<Itemgameindex_Aggregate_Bool_Exp>;
  itemnames?: InputMaybe<Itemname_Bool_Exp>;
  itemnames_aggregate?: InputMaybe<Itemname_Aggregate_Bool_Exp>;
  itemsprites?: InputMaybe<Itemsprites_Bool_Exp>;
  itemsprites_aggregate?: InputMaybe<Itemsprites_Aggregate_Bool_Exp>;
  machines?: InputMaybe<Machine_Bool_Exp>;
  machines_aggregate?: InputMaybe<Machine_Aggregate_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  pokemonevolutions?: InputMaybe<Pokemonevolution_Bool_Exp>;
  pokemonevolutions_aggregate?: InputMaybe<Pokemonevolution_Aggregate_Bool_Exp>;
  pokemonitems?: InputMaybe<Pokemonitem_Bool_Exp>;
  pokemonitems_aggregate?: InputMaybe<Pokemonitem_Aggregate_Bool_Exp>;
};

/** aggregate max on columns */
export type Item_Max_Fields = {
  __typename?: 'item_max_fields';
  cost?: Maybe<Scalars['Int']['output']>;
  fling_power?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  item_category_id?: Maybe<Scalars['Int']['output']>;
  item_fling_effect_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "pokemon_v2_item" */
export type Item_Max_Order_By = {
  cost?: InputMaybe<Order_By>;
  fling_power?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_category_id?: InputMaybe<Order_By>;
  item_fling_effect_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Item_Min_Fields = {
  __typename?: 'item_min_fields';
  cost?: Maybe<Scalars['Int']['output']>;
  fling_power?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  item_category_id?: Maybe<Scalars['Int']['output']>;
  item_fling_effect_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "pokemon_v2_item" */
export type Item_Min_Order_By = {
  cost?: InputMaybe<Order_By>;
  fling_power?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_category_id?: InputMaybe<Order_By>;
  item_fling_effect_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_item". */
export type Item_Order_By = {
  PokemonevolutionsByHeldItemId_aggregate?: InputMaybe<Pokemonevolution_Aggregate_Order_By>;
  berries_aggregate?: InputMaybe<Berry_Aggregate_Order_By>;
  cost?: InputMaybe<Order_By>;
  evolutionchains_aggregate?: InputMaybe<Evolutionchain_Aggregate_Order_By>;
  fling_power?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_category_id?: InputMaybe<Order_By>;
  item_fling_effect_id?: InputMaybe<Order_By>;
  itemattributemaps_aggregate?: InputMaybe<Itemattributemap_Aggregate_Order_By>;
  itemcategory?: InputMaybe<Itemcategory_Order_By>;
  itemeffecttexts_aggregate?: InputMaybe<Itemeffecttext_Aggregate_Order_By>;
  itemflavortexts_aggregate?: InputMaybe<Itemflavortext_Aggregate_Order_By>;
  itemflingeffect?: InputMaybe<Itemflingeffect_Order_By>;
  itemgameindices_aggregate?: InputMaybe<Itemgameindex_Aggregate_Order_By>;
  itemnames_aggregate?: InputMaybe<Itemname_Aggregate_Order_By>;
  itemsprites_aggregate?: InputMaybe<Itemsprites_Aggregate_Order_By>;
  machines_aggregate?: InputMaybe<Machine_Aggregate_Order_By>;
  name?: InputMaybe<Order_By>;
  pokemonevolutions_aggregate?: InputMaybe<Pokemonevolution_Aggregate_Order_By>;
  pokemonitems_aggregate?: InputMaybe<Pokemonitem_Aggregate_Order_By>;
};

/** select columns of table "pokemon_v2_item" */
export enum Item_Select_Column {
  /** column name */
  Cost = 'cost',
  /** column name */
  FlingPower = 'fling_power',
  /** column name */
  Id = 'id',
  /** column name */
  ItemCategoryId = 'item_category_id',
  /** column name */
  ItemFlingEffectId = 'item_fling_effect_id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Item_Stddev_Fields = {
  __typename?: 'item_stddev_fields';
  cost?: Maybe<Scalars['Float']['output']>;
  fling_power?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_category_id?: Maybe<Scalars['Float']['output']>;
  item_fling_effect_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_item" */
export type Item_Stddev_Order_By = {
  cost?: InputMaybe<Order_By>;
  fling_power?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_category_id?: InputMaybe<Order_By>;
  item_fling_effect_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Item_Stddev_Pop_Fields = {
  __typename?: 'item_stddev_pop_fields';
  cost?: Maybe<Scalars['Float']['output']>;
  fling_power?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_category_id?: Maybe<Scalars['Float']['output']>;
  item_fling_effect_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_item" */
export type Item_Stddev_Pop_Order_By = {
  cost?: InputMaybe<Order_By>;
  fling_power?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_category_id?: InputMaybe<Order_By>;
  item_fling_effect_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Item_Stddev_Samp_Fields = {
  __typename?: 'item_stddev_samp_fields';
  cost?: Maybe<Scalars['Float']['output']>;
  fling_power?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_category_id?: Maybe<Scalars['Float']['output']>;
  item_fling_effect_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_item" */
export type Item_Stddev_Samp_Order_By = {
  cost?: InputMaybe<Order_By>;
  fling_power?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_category_id?: InputMaybe<Order_By>;
  item_fling_effect_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Item_Sum_Fields = {
  __typename?: 'item_sum_fields';
  cost?: Maybe<Scalars['Int']['output']>;
  fling_power?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  item_category_id?: Maybe<Scalars['Int']['output']>;
  item_fling_effect_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_item" */
export type Item_Sum_Order_By = {
  cost?: InputMaybe<Order_By>;
  fling_power?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_category_id?: InputMaybe<Order_By>;
  item_fling_effect_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Item_Var_Pop_Fields = {
  __typename?: 'item_var_pop_fields';
  cost?: Maybe<Scalars['Float']['output']>;
  fling_power?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_category_id?: Maybe<Scalars['Float']['output']>;
  item_fling_effect_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_item" */
export type Item_Var_Pop_Order_By = {
  cost?: InputMaybe<Order_By>;
  fling_power?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_category_id?: InputMaybe<Order_By>;
  item_fling_effect_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Item_Var_Samp_Fields = {
  __typename?: 'item_var_samp_fields';
  cost?: Maybe<Scalars['Float']['output']>;
  fling_power?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_category_id?: Maybe<Scalars['Float']['output']>;
  item_fling_effect_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_item" */
export type Item_Var_Samp_Order_By = {
  cost?: InputMaybe<Order_By>;
  fling_power?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_category_id?: InputMaybe<Order_By>;
  item_fling_effect_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Item_Variance_Fields = {
  __typename?: 'item_variance_fields';
  cost?: Maybe<Scalars['Float']['output']>;
  fling_power?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_category_id?: Maybe<Scalars['Float']['output']>;
  item_fling_effect_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_item" */
export type Item_Variance_Order_By = {
  cost?: InputMaybe<Order_By>;
  fling_power?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_category_id?: InputMaybe<Order_By>;
  item_fling_effect_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_itemattribute" */
export type Itemattribute = {
  __typename?: 'itemattribute';
  id: Scalars['Int']['output'];
  /** An array relationship */
  itemattributedescriptions: Array<Itemattributedescription>;
  /** An aggregate relationship */
  itemattributedescriptions_aggregate: Itemattributedescription_Aggregate;
  /** An array relationship */
  itemattributemaps: Array<Itemattributemap>;
  /** An aggregate relationship */
  itemattributemaps_aggregate: Itemattributemap_Aggregate;
  /** An array relationship */
  itemattributenames: Array<Itemattributename>;
  /** An aggregate relationship */
  itemattributenames_aggregate: Itemattributename_Aggregate;
  name: Scalars['String']['output'];
};


/** columns and relationships of "pokemon_v2_itemattribute" */
export type ItemattributeItemattributedescriptionsArgs = {
  distinct_on?: InputMaybe<Array<Itemattributedescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemattributedescription_Order_By>>;
  where?: InputMaybe<Itemattributedescription_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_itemattribute" */
export type ItemattributeItemattributedescriptions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Itemattributedescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemattributedescription_Order_By>>;
  where?: InputMaybe<Itemattributedescription_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_itemattribute" */
export type ItemattributeItemattributemapsArgs = {
  distinct_on?: InputMaybe<Array<Itemattributemap_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemattributemap_Order_By>>;
  where?: InputMaybe<Itemattributemap_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_itemattribute" */
export type ItemattributeItemattributemaps_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Itemattributemap_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemattributemap_Order_By>>;
  where?: InputMaybe<Itemattributemap_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_itemattribute" */
export type ItemattributeItemattributenamesArgs = {
  distinct_on?: InputMaybe<Array<Itemattributename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemattributename_Order_By>>;
  where?: InputMaybe<Itemattributename_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_itemattribute" */
export type ItemattributeItemattributenames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Itemattributename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemattributename_Order_By>>;
  where?: InputMaybe<Itemattributename_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_itemattribute" */
export type Itemattribute_Aggregate = {
  __typename?: 'itemattribute_aggregate';
  aggregate?: Maybe<Itemattribute_Aggregate_Fields>;
  nodes: Array<Itemattribute>;
};

/** aggregate fields of "pokemon_v2_itemattribute" */
export type Itemattribute_Aggregate_Fields = {
  __typename?: 'itemattribute_aggregate_fields';
  avg?: Maybe<Itemattribute_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Itemattribute_Max_Fields>;
  min?: Maybe<Itemattribute_Min_Fields>;
  stddev?: Maybe<Itemattribute_Stddev_Fields>;
  stddev_pop?: Maybe<Itemattribute_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Itemattribute_Stddev_Samp_Fields>;
  sum?: Maybe<Itemattribute_Sum_Fields>;
  var_pop?: Maybe<Itemattribute_Var_Pop_Fields>;
  var_samp?: Maybe<Itemattribute_Var_Samp_Fields>;
  variance?: Maybe<Itemattribute_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_itemattribute" */
export type Itemattribute_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Itemattribute_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Itemattribute_Avg_Fields = {
  __typename?: 'itemattribute_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_itemattribute". All fields are combined with a logical 'AND'. */
export type Itemattribute_Bool_Exp = {
  _and?: InputMaybe<Array<Itemattribute_Bool_Exp>>;
  _not?: InputMaybe<Itemattribute_Bool_Exp>;
  _or?: InputMaybe<Array<Itemattribute_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  itemattributedescriptions?: InputMaybe<Itemattributedescription_Bool_Exp>;
  itemattributedescriptions_aggregate?: InputMaybe<Itemattributedescription_Aggregate_Bool_Exp>;
  itemattributemaps?: InputMaybe<Itemattributemap_Bool_Exp>;
  itemattributemaps_aggregate?: InputMaybe<Itemattributemap_Aggregate_Bool_Exp>;
  itemattributenames?: InputMaybe<Itemattributename_Bool_Exp>;
  itemattributenames_aggregate?: InputMaybe<Itemattributename_Aggregate_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** aggregate max on columns */
export type Itemattribute_Max_Fields = {
  __typename?: 'itemattribute_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Itemattribute_Min_Fields = {
  __typename?: 'itemattribute_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** Ordering options when selecting data from "pokemon_v2_itemattribute". */
export type Itemattribute_Order_By = {
  id?: InputMaybe<Order_By>;
  itemattributedescriptions_aggregate?: InputMaybe<Itemattributedescription_Aggregate_Order_By>;
  itemattributemaps_aggregate?: InputMaybe<Itemattributemap_Aggregate_Order_By>;
  itemattributenames_aggregate?: InputMaybe<Itemattributename_Aggregate_Order_By>;
  name?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_itemattribute" */
export enum Itemattribute_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Itemattribute_Stddev_Fields = {
  __typename?: 'itemattribute_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Itemattribute_Stddev_Pop_Fields = {
  __typename?: 'itemattribute_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Itemattribute_Stddev_Samp_Fields = {
  __typename?: 'itemattribute_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate sum on columns */
export type Itemattribute_Sum_Fields = {
  __typename?: 'itemattribute_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate var_pop on columns */
export type Itemattribute_Var_Pop_Fields = {
  __typename?: 'itemattribute_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Itemattribute_Var_Samp_Fields = {
  __typename?: 'itemattribute_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Itemattribute_Variance_Fields = {
  __typename?: 'itemattribute_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_itemattributedescription" */
export type Itemattributedescription = {
  __typename?: 'itemattributedescription';
  description: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  item_attribute_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  itemattribute?: Maybe<Itemattribute>;
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_itemattributedescription" */
export type Itemattributedescription_Aggregate = {
  __typename?: 'itemattributedescription_aggregate';
  aggregate?: Maybe<Itemattributedescription_Aggregate_Fields>;
  nodes: Array<Itemattributedescription>;
};

export type Itemattributedescription_Aggregate_Bool_Exp = {
  count?: InputMaybe<Itemattributedescription_Aggregate_Bool_Exp_Count>;
};

export type Itemattributedescription_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Itemattributedescription_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Itemattributedescription_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_itemattributedescription" */
export type Itemattributedescription_Aggregate_Fields = {
  __typename?: 'itemattributedescription_aggregate_fields';
  avg?: Maybe<Itemattributedescription_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Itemattributedescription_Max_Fields>;
  min?: Maybe<Itemattributedescription_Min_Fields>;
  stddev?: Maybe<Itemattributedescription_Stddev_Fields>;
  stddev_pop?: Maybe<Itemattributedescription_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Itemattributedescription_Stddev_Samp_Fields>;
  sum?: Maybe<Itemattributedescription_Sum_Fields>;
  var_pop?: Maybe<Itemattributedescription_Var_Pop_Fields>;
  var_samp?: Maybe<Itemattributedescription_Var_Samp_Fields>;
  variance?: Maybe<Itemattributedescription_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_itemattributedescription" */
export type Itemattributedescription_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Itemattributedescription_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_itemattributedescription" */
export type Itemattributedescription_Aggregate_Order_By = {
  avg?: InputMaybe<Itemattributedescription_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Itemattributedescription_Max_Order_By>;
  min?: InputMaybe<Itemattributedescription_Min_Order_By>;
  stddev?: InputMaybe<Itemattributedescription_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Itemattributedescription_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Itemattributedescription_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Itemattributedescription_Sum_Order_By>;
  var_pop?: InputMaybe<Itemattributedescription_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Itemattributedescription_Var_Samp_Order_By>;
  variance?: InputMaybe<Itemattributedescription_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Itemattributedescription_Avg_Fields = {
  __typename?: 'itemattributedescription_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_attribute_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_itemattributedescription" */
export type Itemattributedescription_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  item_attribute_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_itemattributedescription". All fields are combined with a logical 'AND'. */
export type Itemattributedescription_Bool_Exp = {
  _and?: InputMaybe<Array<Itemattributedescription_Bool_Exp>>;
  _not?: InputMaybe<Itemattributedescription_Bool_Exp>;
  _or?: InputMaybe<Array<Itemattributedescription_Bool_Exp>>;
  description?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  item_attribute_id?: InputMaybe<Int_Comparison_Exp>;
  itemattribute?: InputMaybe<Itemattribute_Bool_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Itemattributedescription_Max_Fields = {
  __typename?: 'itemattributedescription_max_fields';
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  item_attribute_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_itemattributedescription" */
export type Itemattributedescription_Max_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_attribute_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Itemattributedescription_Min_Fields = {
  __typename?: 'itemattributedescription_min_fields';
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  item_attribute_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_itemattributedescription" */
export type Itemattributedescription_Min_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_attribute_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_itemattributedescription". */
export type Itemattributedescription_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_attribute_id?: InputMaybe<Order_By>;
  itemattribute?: InputMaybe<Itemattribute_Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_itemattributedescription" */
export enum Itemattributedescription_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  ItemAttributeId = 'item_attribute_id',
  /** column name */
  LanguageId = 'language_id'
}

/** aggregate stddev on columns */
export type Itemattributedescription_Stddev_Fields = {
  __typename?: 'itemattributedescription_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_attribute_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_itemattributedescription" */
export type Itemattributedescription_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  item_attribute_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Itemattributedescription_Stddev_Pop_Fields = {
  __typename?: 'itemattributedescription_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_attribute_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_itemattributedescription" */
export type Itemattributedescription_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  item_attribute_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Itemattributedescription_Stddev_Samp_Fields = {
  __typename?: 'itemattributedescription_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_attribute_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_itemattributedescription" */
export type Itemattributedescription_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  item_attribute_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Itemattributedescription_Sum_Fields = {
  __typename?: 'itemattributedescription_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_attribute_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_itemattributedescription" */
export type Itemattributedescription_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  item_attribute_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Itemattributedescription_Var_Pop_Fields = {
  __typename?: 'itemattributedescription_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_attribute_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_itemattributedescription" */
export type Itemattributedescription_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  item_attribute_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Itemattributedescription_Var_Samp_Fields = {
  __typename?: 'itemattributedescription_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_attribute_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_itemattributedescription" */
export type Itemattributedescription_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  item_attribute_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Itemattributedescription_Variance_Fields = {
  __typename?: 'itemattributedescription_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_attribute_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_itemattributedescription" */
export type Itemattributedescription_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  item_attribute_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_itemattributemap" */
export type Itemattributemap = {
  __typename?: 'itemattributemap';
  id: Scalars['Int']['output'];
  /** An object relationship */
  item?: Maybe<Item>;
  item_attribute_id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  itemattribute?: Maybe<Itemattribute>;
};

/** aggregated selection of "pokemon_v2_itemattributemap" */
export type Itemattributemap_Aggregate = {
  __typename?: 'itemattributemap_aggregate';
  aggregate?: Maybe<Itemattributemap_Aggregate_Fields>;
  nodes: Array<Itemattributemap>;
};

export type Itemattributemap_Aggregate_Bool_Exp = {
  count?: InputMaybe<Itemattributemap_Aggregate_Bool_Exp_Count>;
};

export type Itemattributemap_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Itemattributemap_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Itemattributemap_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_itemattributemap" */
export type Itemattributemap_Aggregate_Fields = {
  __typename?: 'itemattributemap_aggregate_fields';
  avg?: Maybe<Itemattributemap_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Itemattributemap_Max_Fields>;
  min?: Maybe<Itemattributemap_Min_Fields>;
  stddev?: Maybe<Itemattributemap_Stddev_Fields>;
  stddev_pop?: Maybe<Itemattributemap_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Itemattributemap_Stddev_Samp_Fields>;
  sum?: Maybe<Itemattributemap_Sum_Fields>;
  var_pop?: Maybe<Itemattributemap_Var_Pop_Fields>;
  var_samp?: Maybe<Itemattributemap_Var_Samp_Fields>;
  variance?: Maybe<Itemattributemap_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_itemattributemap" */
export type Itemattributemap_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Itemattributemap_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_itemattributemap" */
export type Itemattributemap_Aggregate_Order_By = {
  avg?: InputMaybe<Itemattributemap_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Itemattributemap_Max_Order_By>;
  min?: InputMaybe<Itemattributemap_Min_Order_By>;
  stddev?: InputMaybe<Itemattributemap_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Itemattributemap_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Itemattributemap_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Itemattributemap_Sum_Order_By>;
  var_pop?: InputMaybe<Itemattributemap_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Itemattributemap_Var_Samp_Order_By>;
  variance?: InputMaybe<Itemattributemap_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Itemattributemap_Avg_Fields = {
  __typename?: 'itemattributemap_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_attribute_id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_itemattributemap" */
export type Itemattributemap_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  item_attribute_id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_itemattributemap". All fields are combined with a logical 'AND'. */
export type Itemattributemap_Bool_Exp = {
  _and?: InputMaybe<Array<Itemattributemap_Bool_Exp>>;
  _not?: InputMaybe<Itemattributemap_Bool_Exp>;
  _or?: InputMaybe<Array<Itemattributemap_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  item?: InputMaybe<Item_Bool_Exp>;
  item_attribute_id?: InputMaybe<Int_Comparison_Exp>;
  item_id?: InputMaybe<Int_Comparison_Exp>;
  itemattribute?: InputMaybe<Itemattribute_Bool_Exp>;
};

/** aggregate max on columns */
export type Itemattributemap_Max_Fields = {
  __typename?: 'itemattributemap_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_attribute_id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_itemattributemap" */
export type Itemattributemap_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  item_attribute_id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Itemattributemap_Min_Fields = {
  __typename?: 'itemattributemap_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_attribute_id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_itemattributemap" */
export type Itemattributemap_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  item_attribute_id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_itemattributemap". */
export type Itemattributemap_Order_By = {
  id?: InputMaybe<Order_By>;
  item?: InputMaybe<Item_Order_By>;
  item_attribute_id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  itemattribute?: InputMaybe<Itemattribute_Order_By>;
};

/** select columns of table "pokemon_v2_itemattributemap" */
export enum Itemattributemap_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  ItemAttributeId = 'item_attribute_id',
  /** column name */
  ItemId = 'item_id'
}

/** aggregate stddev on columns */
export type Itemattributemap_Stddev_Fields = {
  __typename?: 'itemattributemap_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_attribute_id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_itemattributemap" */
export type Itemattributemap_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  item_attribute_id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Itemattributemap_Stddev_Pop_Fields = {
  __typename?: 'itemattributemap_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_attribute_id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_itemattributemap" */
export type Itemattributemap_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  item_attribute_id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Itemattributemap_Stddev_Samp_Fields = {
  __typename?: 'itemattributemap_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_attribute_id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_itemattributemap" */
export type Itemattributemap_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  item_attribute_id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Itemattributemap_Sum_Fields = {
  __typename?: 'itemattributemap_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_attribute_id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_itemattributemap" */
export type Itemattributemap_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  item_attribute_id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Itemattributemap_Var_Pop_Fields = {
  __typename?: 'itemattributemap_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_attribute_id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_itemattributemap" */
export type Itemattributemap_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  item_attribute_id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Itemattributemap_Var_Samp_Fields = {
  __typename?: 'itemattributemap_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_attribute_id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_itemattributemap" */
export type Itemattributemap_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  item_attribute_id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Itemattributemap_Variance_Fields = {
  __typename?: 'itemattributemap_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_attribute_id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_itemattributemap" */
export type Itemattributemap_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  item_attribute_id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_itemattributename" */
export type Itemattributename = {
  __typename?: 'itemattributename';
  id: Scalars['Int']['output'];
  item_attribute_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  itemattribute?: Maybe<Itemattribute>;
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_itemattributename" */
export type Itemattributename_Aggregate = {
  __typename?: 'itemattributename_aggregate';
  aggregate?: Maybe<Itemattributename_Aggregate_Fields>;
  nodes: Array<Itemattributename>;
};

export type Itemattributename_Aggregate_Bool_Exp = {
  count?: InputMaybe<Itemattributename_Aggregate_Bool_Exp_Count>;
};

export type Itemattributename_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Itemattributename_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Itemattributename_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_itemattributename" */
export type Itemattributename_Aggregate_Fields = {
  __typename?: 'itemattributename_aggregate_fields';
  avg?: Maybe<Itemattributename_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Itemattributename_Max_Fields>;
  min?: Maybe<Itemattributename_Min_Fields>;
  stddev?: Maybe<Itemattributename_Stddev_Fields>;
  stddev_pop?: Maybe<Itemattributename_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Itemattributename_Stddev_Samp_Fields>;
  sum?: Maybe<Itemattributename_Sum_Fields>;
  var_pop?: Maybe<Itemattributename_Var_Pop_Fields>;
  var_samp?: Maybe<Itemattributename_Var_Samp_Fields>;
  variance?: Maybe<Itemattributename_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_itemattributename" */
export type Itemattributename_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Itemattributename_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_itemattributename" */
export type Itemattributename_Aggregate_Order_By = {
  avg?: InputMaybe<Itemattributename_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Itemattributename_Max_Order_By>;
  min?: InputMaybe<Itemattributename_Min_Order_By>;
  stddev?: InputMaybe<Itemattributename_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Itemattributename_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Itemattributename_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Itemattributename_Sum_Order_By>;
  var_pop?: InputMaybe<Itemattributename_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Itemattributename_Var_Samp_Order_By>;
  variance?: InputMaybe<Itemattributename_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Itemattributename_Avg_Fields = {
  __typename?: 'itemattributename_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_attribute_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_itemattributename" */
export type Itemattributename_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  item_attribute_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_itemattributename". All fields are combined with a logical 'AND'. */
export type Itemattributename_Bool_Exp = {
  _and?: InputMaybe<Array<Itemattributename_Bool_Exp>>;
  _not?: InputMaybe<Itemattributename_Bool_Exp>;
  _or?: InputMaybe<Array<Itemattributename_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  item_attribute_id?: InputMaybe<Int_Comparison_Exp>;
  itemattribute?: InputMaybe<Itemattribute_Bool_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** aggregate max on columns */
export type Itemattributename_Max_Fields = {
  __typename?: 'itemattributename_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_attribute_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "pokemon_v2_itemattributename" */
export type Itemattributename_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  item_attribute_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Itemattributename_Min_Fields = {
  __typename?: 'itemattributename_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_attribute_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "pokemon_v2_itemattributename" */
export type Itemattributename_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  item_attribute_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_itemattributename". */
export type Itemattributename_Order_By = {
  id?: InputMaybe<Order_By>;
  item_attribute_id?: InputMaybe<Order_By>;
  itemattribute?: InputMaybe<Itemattribute_Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_itemattributename" */
export enum Itemattributename_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  ItemAttributeId = 'item_attribute_id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Itemattributename_Stddev_Fields = {
  __typename?: 'itemattributename_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_attribute_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_itemattributename" */
export type Itemattributename_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  item_attribute_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Itemattributename_Stddev_Pop_Fields = {
  __typename?: 'itemattributename_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_attribute_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_itemattributename" */
export type Itemattributename_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  item_attribute_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Itemattributename_Stddev_Samp_Fields = {
  __typename?: 'itemattributename_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_attribute_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_itemattributename" */
export type Itemattributename_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  item_attribute_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Itemattributename_Sum_Fields = {
  __typename?: 'itemattributename_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_attribute_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_itemattributename" */
export type Itemattributename_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  item_attribute_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Itemattributename_Var_Pop_Fields = {
  __typename?: 'itemattributename_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_attribute_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_itemattributename" */
export type Itemattributename_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  item_attribute_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Itemattributename_Var_Samp_Fields = {
  __typename?: 'itemattributename_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_attribute_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_itemattributename" */
export type Itemattributename_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  item_attribute_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Itemattributename_Variance_Fields = {
  __typename?: 'itemattributename_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_attribute_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_itemattributename" */
export type Itemattributename_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  item_attribute_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_itemcategory" */
export type Itemcategory = {
  __typename?: 'itemcategory';
  id: Scalars['Int']['output'];
  item_pocket_id?: Maybe<Scalars['Int']['output']>;
  /** An array relationship */
  itemcategorynames: Array<Itemcategoryname>;
  /** An aggregate relationship */
  itemcategorynames_aggregate: Itemcategoryname_Aggregate;
  /** An object relationship */
  itempocket?: Maybe<Itempocket>;
  /** An array relationship */
  items: Array<Item>;
  /** An aggregate relationship */
  items_aggregate: Item_Aggregate;
  name: Scalars['String']['output'];
};


/** columns and relationships of "pokemon_v2_itemcategory" */
export type ItemcategoryItemcategorynamesArgs = {
  distinct_on?: InputMaybe<Array<Itemcategoryname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemcategoryname_Order_By>>;
  where?: InputMaybe<Itemcategoryname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_itemcategory" */
export type ItemcategoryItemcategorynames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Itemcategoryname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemcategoryname_Order_By>>;
  where?: InputMaybe<Itemcategoryname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_itemcategory" */
export type ItemcategoryItemsArgs = {
  distinct_on?: InputMaybe<Array<Item_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Item_Order_By>>;
  where?: InputMaybe<Item_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_itemcategory" */
export type ItemcategoryItems_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Item_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Item_Order_By>>;
  where?: InputMaybe<Item_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_itemcategory" */
export type Itemcategory_Aggregate = {
  __typename?: 'itemcategory_aggregate';
  aggregate?: Maybe<Itemcategory_Aggregate_Fields>;
  nodes: Array<Itemcategory>;
};

export type Itemcategory_Aggregate_Bool_Exp = {
  count?: InputMaybe<Itemcategory_Aggregate_Bool_Exp_Count>;
};

export type Itemcategory_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Itemcategory_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Itemcategory_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_itemcategory" */
export type Itemcategory_Aggregate_Fields = {
  __typename?: 'itemcategory_aggregate_fields';
  avg?: Maybe<Itemcategory_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Itemcategory_Max_Fields>;
  min?: Maybe<Itemcategory_Min_Fields>;
  stddev?: Maybe<Itemcategory_Stddev_Fields>;
  stddev_pop?: Maybe<Itemcategory_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Itemcategory_Stddev_Samp_Fields>;
  sum?: Maybe<Itemcategory_Sum_Fields>;
  var_pop?: Maybe<Itemcategory_Var_Pop_Fields>;
  var_samp?: Maybe<Itemcategory_Var_Samp_Fields>;
  variance?: Maybe<Itemcategory_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_itemcategory" */
export type Itemcategory_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Itemcategory_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_itemcategory" */
export type Itemcategory_Aggregate_Order_By = {
  avg?: InputMaybe<Itemcategory_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Itemcategory_Max_Order_By>;
  min?: InputMaybe<Itemcategory_Min_Order_By>;
  stddev?: InputMaybe<Itemcategory_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Itemcategory_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Itemcategory_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Itemcategory_Sum_Order_By>;
  var_pop?: InputMaybe<Itemcategory_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Itemcategory_Var_Samp_Order_By>;
  variance?: InputMaybe<Itemcategory_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Itemcategory_Avg_Fields = {
  __typename?: 'itemcategory_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_pocket_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_itemcategory" */
export type Itemcategory_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  item_pocket_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_itemcategory". All fields are combined with a logical 'AND'. */
export type Itemcategory_Bool_Exp = {
  _and?: InputMaybe<Array<Itemcategory_Bool_Exp>>;
  _not?: InputMaybe<Itemcategory_Bool_Exp>;
  _or?: InputMaybe<Array<Itemcategory_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  item_pocket_id?: InputMaybe<Int_Comparison_Exp>;
  itemcategorynames?: InputMaybe<Itemcategoryname_Bool_Exp>;
  itemcategorynames_aggregate?: InputMaybe<Itemcategoryname_Aggregate_Bool_Exp>;
  itempocket?: InputMaybe<Itempocket_Bool_Exp>;
  items?: InputMaybe<Item_Bool_Exp>;
  items_aggregate?: InputMaybe<Item_Aggregate_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** aggregate max on columns */
export type Itemcategory_Max_Fields = {
  __typename?: 'itemcategory_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_pocket_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "pokemon_v2_itemcategory" */
export type Itemcategory_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  item_pocket_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Itemcategory_Min_Fields = {
  __typename?: 'itemcategory_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_pocket_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "pokemon_v2_itemcategory" */
export type Itemcategory_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  item_pocket_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_itemcategory". */
export type Itemcategory_Order_By = {
  id?: InputMaybe<Order_By>;
  item_pocket_id?: InputMaybe<Order_By>;
  itemcategorynames_aggregate?: InputMaybe<Itemcategoryname_Aggregate_Order_By>;
  itempocket?: InputMaybe<Itempocket_Order_By>;
  items_aggregate?: InputMaybe<Item_Aggregate_Order_By>;
  name?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_itemcategory" */
export enum Itemcategory_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  ItemPocketId = 'item_pocket_id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Itemcategory_Stddev_Fields = {
  __typename?: 'itemcategory_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_pocket_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_itemcategory" */
export type Itemcategory_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  item_pocket_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Itemcategory_Stddev_Pop_Fields = {
  __typename?: 'itemcategory_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_pocket_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_itemcategory" */
export type Itemcategory_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  item_pocket_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Itemcategory_Stddev_Samp_Fields = {
  __typename?: 'itemcategory_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_pocket_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_itemcategory" */
export type Itemcategory_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  item_pocket_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Itemcategory_Sum_Fields = {
  __typename?: 'itemcategory_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_pocket_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_itemcategory" */
export type Itemcategory_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  item_pocket_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Itemcategory_Var_Pop_Fields = {
  __typename?: 'itemcategory_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_pocket_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_itemcategory" */
export type Itemcategory_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  item_pocket_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Itemcategory_Var_Samp_Fields = {
  __typename?: 'itemcategory_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_pocket_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_itemcategory" */
export type Itemcategory_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  item_pocket_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Itemcategory_Variance_Fields = {
  __typename?: 'itemcategory_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_pocket_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_itemcategory" */
export type Itemcategory_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  item_pocket_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_itemcategoryname" */
export type Itemcategoryname = {
  __typename?: 'itemcategoryname';
  id: Scalars['Int']['output'];
  item_category_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  itemcategory?: Maybe<Itemcategory>;
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_itemcategoryname" */
export type Itemcategoryname_Aggregate = {
  __typename?: 'itemcategoryname_aggregate';
  aggregate?: Maybe<Itemcategoryname_Aggregate_Fields>;
  nodes: Array<Itemcategoryname>;
};

export type Itemcategoryname_Aggregate_Bool_Exp = {
  count?: InputMaybe<Itemcategoryname_Aggregate_Bool_Exp_Count>;
};

export type Itemcategoryname_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Itemcategoryname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Itemcategoryname_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_itemcategoryname" */
export type Itemcategoryname_Aggregate_Fields = {
  __typename?: 'itemcategoryname_aggregate_fields';
  avg?: Maybe<Itemcategoryname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Itemcategoryname_Max_Fields>;
  min?: Maybe<Itemcategoryname_Min_Fields>;
  stddev?: Maybe<Itemcategoryname_Stddev_Fields>;
  stddev_pop?: Maybe<Itemcategoryname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Itemcategoryname_Stddev_Samp_Fields>;
  sum?: Maybe<Itemcategoryname_Sum_Fields>;
  var_pop?: Maybe<Itemcategoryname_Var_Pop_Fields>;
  var_samp?: Maybe<Itemcategoryname_Var_Samp_Fields>;
  variance?: Maybe<Itemcategoryname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_itemcategoryname" */
export type Itemcategoryname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Itemcategoryname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_itemcategoryname" */
export type Itemcategoryname_Aggregate_Order_By = {
  avg?: InputMaybe<Itemcategoryname_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Itemcategoryname_Max_Order_By>;
  min?: InputMaybe<Itemcategoryname_Min_Order_By>;
  stddev?: InputMaybe<Itemcategoryname_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Itemcategoryname_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Itemcategoryname_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Itemcategoryname_Sum_Order_By>;
  var_pop?: InputMaybe<Itemcategoryname_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Itemcategoryname_Var_Samp_Order_By>;
  variance?: InputMaybe<Itemcategoryname_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Itemcategoryname_Avg_Fields = {
  __typename?: 'itemcategoryname_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_category_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_itemcategoryname" */
export type Itemcategoryname_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  item_category_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_itemcategoryname". All fields are combined with a logical 'AND'. */
export type Itemcategoryname_Bool_Exp = {
  _and?: InputMaybe<Array<Itemcategoryname_Bool_Exp>>;
  _not?: InputMaybe<Itemcategoryname_Bool_Exp>;
  _or?: InputMaybe<Array<Itemcategoryname_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  item_category_id?: InputMaybe<Int_Comparison_Exp>;
  itemcategory?: InputMaybe<Itemcategory_Bool_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** aggregate max on columns */
export type Itemcategoryname_Max_Fields = {
  __typename?: 'itemcategoryname_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_category_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "pokemon_v2_itemcategoryname" */
export type Itemcategoryname_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  item_category_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Itemcategoryname_Min_Fields = {
  __typename?: 'itemcategoryname_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_category_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "pokemon_v2_itemcategoryname" */
export type Itemcategoryname_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  item_category_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_itemcategoryname". */
export type Itemcategoryname_Order_By = {
  id?: InputMaybe<Order_By>;
  item_category_id?: InputMaybe<Order_By>;
  itemcategory?: InputMaybe<Itemcategory_Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_itemcategoryname" */
export enum Itemcategoryname_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  ItemCategoryId = 'item_category_id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Itemcategoryname_Stddev_Fields = {
  __typename?: 'itemcategoryname_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_category_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_itemcategoryname" */
export type Itemcategoryname_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  item_category_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Itemcategoryname_Stddev_Pop_Fields = {
  __typename?: 'itemcategoryname_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_category_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_itemcategoryname" */
export type Itemcategoryname_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  item_category_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Itemcategoryname_Stddev_Samp_Fields = {
  __typename?: 'itemcategoryname_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_category_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_itemcategoryname" */
export type Itemcategoryname_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  item_category_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Itemcategoryname_Sum_Fields = {
  __typename?: 'itemcategoryname_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_category_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_itemcategoryname" */
export type Itemcategoryname_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  item_category_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Itemcategoryname_Var_Pop_Fields = {
  __typename?: 'itemcategoryname_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_category_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_itemcategoryname" */
export type Itemcategoryname_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  item_category_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Itemcategoryname_Var_Samp_Fields = {
  __typename?: 'itemcategoryname_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_category_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_itemcategoryname" */
export type Itemcategoryname_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  item_category_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Itemcategoryname_Variance_Fields = {
  __typename?: 'itemcategoryname_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_category_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_itemcategoryname" */
export type Itemcategoryname_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  item_category_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_itemeffecttext" */
export type Itemeffecttext = {
  __typename?: 'itemeffecttext';
  effect: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  /** An object relationship */
  item?: Maybe<Item>;
  item_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  short_effect: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_itemeffecttext" */
export type Itemeffecttext_Aggregate = {
  __typename?: 'itemeffecttext_aggregate';
  aggregate?: Maybe<Itemeffecttext_Aggregate_Fields>;
  nodes: Array<Itemeffecttext>;
};

export type Itemeffecttext_Aggregate_Bool_Exp = {
  count?: InputMaybe<Itemeffecttext_Aggregate_Bool_Exp_Count>;
};

export type Itemeffecttext_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Itemeffecttext_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Itemeffecttext_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_itemeffecttext" */
export type Itemeffecttext_Aggregate_Fields = {
  __typename?: 'itemeffecttext_aggregate_fields';
  avg?: Maybe<Itemeffecttext_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Itemeffecttext_Max_Fields>;
  min?: Maybe<Itemeffecttext_Min_Fields>;
  stddev?: Maybe<Itemeffecttext_Stddev_Fields>;
  stddev_pop?: Maybe<Itemeffecttext_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Itemeffecttext_Stddev_Samp_Fields>;
  sum?: Maybe<Itemeffecttext_Sum_Fields>;
  var_pop?: Maybe<Itemeffecttext_Var_Pop_Fields>;
  var_samp?: Maybe<Itemeffecttext_Var_Samp_Fields>;
  variance?: Maybe<Itemeffecttext_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_itemeffecttext" */
export type Itemeffecttext_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Itemeffecttext_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_itemeffecttext" */
export type Itemeffecttext_Aggregate_Order_By = {
  avg?: InputMaybe<Itemeffecttext_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Itemeffecttext_Max_Order_By>;
  min?: InputMaybe<Itemeffecttext_Min_Order_By>;
  stddev?: InputMaybe<Itemeffecttext_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Itemeffecttext_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Itemeffecttext_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Itemeffecttext_Sum_Order_By>;
  var_pop?: InputMaybe<Itemeffecttext_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Itemeffecttext_Var_Samp_Order_By>;
  variance?: InputMaybe<Itemeffecttext_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Itemeffecttext_Avg_Fields = {
  __typename?: 'itemeffecttext_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_itemeffecttext" */
export type Itemeffecttext_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_itemeffecttext". All fields are combined with a logical 'AND'. */
export type Itemeffecttext_Bool_Exp = {
  _and?: InputMaybe<Array<Itemeffecttext_Bool_Exp>>;
  _not?: InputMaybe<Itemeffecttext_Bool_Exp>;
  _or?: InputMaybe<Array<Itemeffecttext_Bool_Exp>>;
  effect?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  item?: InputMaybe<Item_Bool_Exp>;
  item_id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  short_effect?: InputMaybe<String_Comparison_Exp>;
};

/** aggregate max on columns */
export type Itemeffecttext_Max_Fields = {
  __typename?: 'itemeffecttext_max_fields';
  effect?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  short_effect?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "pokemon_v2_itemeffecttext" */
export type Itemeffecttext_Max_Order_By = {
  effect?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  short_effect?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Itemeffecttext_Min_Fields = {
  __typename?: 'itemeffecttext_min_fields';
  effect?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  short_effect?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "pokemon_v2_itemeffecttext" */
export type Itemeffecttext_Min_Order_By = {
  effect?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  short_effect?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_itemeffecttext". */
export type Itemeffecttext_Order_By = {
  effect?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item?: InputMaybe<Item_Order_By>;
  item_id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  short_effect?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_itemeffecttext" */
export enum Itemeffecttext_Select_Column {
  /** column name */
  Effect = 'effect',
  /** column name */
  Id = 'id',
  /** column name */
  ItemId = 'item_id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  ShortEffect = 'short_effect'
}

/** aggregate stddev on columns */
export type Itemeffecttext_Stddev_Fields = {
  __typename?: 'itemeffecttext_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_itemeffecttext" */
export type Itemeffecttext_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Itemeffecttext_Stddev_Pop_Fields = {
  __typename?: 'itemeffecttext_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_itemeffecttext" */
export type Itemeffecttext_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Itemeffecttext_Stddev_Samp_Fields = {
  __typename?: 'itemeffecttext_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_itemeffecttext" */
export type Itemeffecttext_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Itemeffecttext_Sum_Fields = {
  __typename?: 'itemeffecttext_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_itemeffecttext" */
export type Itemeffecttext_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Itemeffecttext_Var_Pop_Fields = {
  __typename?: 'itemeffecttext_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_itemeffecttext" */
export type Itemeffecttext_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Itemeffecttext_Var_Samp_Fields = {
  __typename?: 'itemeffecttext_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_itemeffecttext" */
export type Itemeffecttext_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Itemeffecttext_Variance_Fields = {
  __typename?: 'itemeffecttext_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_itemeffecttext" */
export type Itemeffecttext_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_itemflavortext" */
export type Itemflavortext = {
  __typename?: 'itemflavortext';
  flavor_text: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  /** An object relationship */
  item?: Maybe<Item>;
  item_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  versiongroup?: Maybe<Versiongroup>;
};

/** aggregated selection of "pokemon_v2_itemflavortext" */
export type Itemflavortext_Aggregate = {
  __typename?: 'itemflavortext_aggregate';
  aggregate?: Maybe<Itemflavortext_Aggregate_Fields>;
  nodes: Array<Itemflavortext>;
};

export type Itemflavortext_Aggregate_Bool_Exp = {
  count?: InputMaybe<Itemflavortext_Aggregate_Bool_Exp_Count>;
};

export type Itemflavortext_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Itemflavortext_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Itemflavortext_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_itemflavortext" */
export type Itemflavortext_Aggregate_Fields = {
  __typename?: 'itemflavortext_aggregate_fields';
  avg?: Maybe<Itemflavortext_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Itemflavortext_Max_Fields>;
  min?: Maybe<Itemflavortext_Min_Fields>;
  stddev?: Maybe<Itemflavortext_Stddev_Fields>;
  stddev_pop?: Maybe<Itemflavortext_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Itemflavortext_Stddev_Samp_Fields>;
  sum?: Maybe<Itemflavortext_Sum_Fields>;
  var_pop?: Maybe<Itemflavortext_Var_Pop_Fields>;
  var_samp?: Maybe<Itemflavortext_Var_Samp_Fields>;
  variance?: Maybe<Itemflavortext_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_itemflavortext" */
export type Itemflavortext_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Itemflavortext_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_itemflavortext" */
export type Itemflavortext_Aggregate_Order_By = {
  avg?: InputMaybe<Itemflavortext_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Itemflavortext_Max_Order_By>;
  min?: InputMaybe<Itemflavortext_Min_Order_By>;
  stddev?: InputMaybe<Itemflavortext_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Itemflavortext_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Itemflavortext_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Itemflavortext_Sum_Order_By>;
  var_pop?: InputMaybe<Itemflavortext_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Itemflavortext_Var_Samp_Order_By>;
  variance?: InputMaybe<Itemflavortext_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Itemflavortext_Avg_Fields = {
  __typename?: 'itemflavortext_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_itemflavortext" */
export type Itemflavortext_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_itemflavortext". All fields are combined with a logical 'AND'. */
export type Itemflavortext_Bool_Exp = {
  _and?: InputMaybe<Array<Itemflavortext_Bool_Exp>>;
  _not?: InputMaybe<Itemflavortext_Bool_Exp>;
  _or?: InputMaybe<Array<Itemflavortext_Bool_Exp>>;
  flavor_text?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  item?: InputMaybe<Item_Bool_Exp>;
  item_id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  version_group_id?: InputMaybe<Int_Comparison_Exp>;
  versiongroup?: InputMaybe<Versiongroup_Bool_Exp>;
};

/** aggregate max on columns */
export type Itemflavortext_Max_Fields = {
  __typename?: 'itemflavortext_max_fields';
  flavor_text?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_itemflavortext" */
export type Itemflavortext_Max_Order_By = {
  flavor_text?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Itemflavortext_Min_Fields = {
  __typename?: 'itemflavortext_min_fields';
  flavor_text?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_itemflavortext" */
export type Itemflavortext_Min_Order_By = {
  flavor_text?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_itemflavortext". */
export type Itemflavortext_Order_By = {
  flavor_text?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item?: InputMaybe<Item_Order_By>;
  item_id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
  versiongroup?: InputMaybe<Versiongroup_Order_By>;
};

/** select columns of table "pokemon_v2_itemflavortext" */
export enum Itemflavortext_Select_Column {
  /** column name */
  FlavorText = 'flavor_text',
  /** column name */
  Id = 'id',
  /** column name */
  ItemId = 'item_id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  VersionGroupId = 'version_group_id'
}

/** aggregate stddev on columns */
export type Itemflavortext_Stddev_Fields = {
  __typename?: 'itemflavortext_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_itemflavortext" */
export type Itemflavortext_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Itemflavortext_Stddev_Pop_Fields = {
  __typename?: 'itemflavortext_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_itemflavortext" */
export type Itemflavortext_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Itemflavortext_Stddev_Samp_Fields = {
  __typename?: 'itemflavortext_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_itemflavortext" */
export type Itemflavortext_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Itemflavortext_Sum_Fields = {
  __typename?: 'itemflavortext_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_itemflavortext" */
export type Itemflavortext_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Itemflavortext_Var_Pop_Fields = {
  __typename?: 'itemflavortext_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_itemflavortext" */
export type Itemflavortext_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Itemflavortext_Var_Samp_Fields = {
  __typename?: 'itemflavortext_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_itemflavortext" */
export type Itemflavortext_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Itemflavortext_Variance_Fields = {
  __typename?: 'itemflavortext_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_itemflavortext" */
export type Itemflavortext_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_itemflingeffect" */
export type Itemflingeffect = {
  __typename?: 'itemflingeffect';
  id: Scalars['Int']['output'];
  /** An array relationship */
  itemflingeffecteffecttexts: Array<Itemflingeffecteffecttext>;
  /** An aggregate relationship */
  itemflingeffecteffecttexts_aggregate: Itemflingeffecteffecttext_Aggregate;
  /** An array relationship */
  items: Array<Item>;
  /** An aggregate relationship */
  items_aggregate: Item_Aggregate;
  name: Scalars['String']['output'];
};


/** columns and relationships of "pokemon_v2_itemflingeffect" */
export type ItemflingeffectItemflingeffecteffecttextsArgs = {
  distinct_on?: InputMaybe<Array<Itemflingeffecteffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemflingeffecteffecttext_Order_By>>;
  where?: InputMaybe<Itemflingeffecteffecttext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_itemflingeffect" */
export type ItemflingeffectItemflingeffecteffecttexts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Itemflingeffecteffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemflingeffecteffecttext_Order_By>>;
  where?: InputMaybe<Itemflingeffecteffecttext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_itemflingeffect" */
export type ItemflingeffectItemsArgs = {
  distinct_on?: InputMaybe<Array<Item_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Item_Order_By>>;
  where?: InputMaybe<Item_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_itemflingeffect" */
export type ItemflingeffectItems_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Item_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Item_Order_By>>;
  where?: InputMaybe<Item_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_itemflingeffect" */
export type Itemflingeffect_Aggregate = {
  __typename?: 'itemflingeffect_aggregate';
  aggregate?: Maybe<Itemflingeffect_Aggregate_Fields>;
  nodes: Array<Itemflingeffect>;
};

/** aggregate fields of "pokemon_v2_itemflingeffect" */
export type Itemflingeffect_Aggregate_Fields = {
  __typename?: 'itemflingeffect_aggregate_fields';
  avg?: Maybe<Itemflingeffect_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Itemflingeffect_Max_Fields>;
  min?: Maybe<Itemflingeffect_Min_Fields>;
  stddev?: Maybe<Itemflingeffect_Stddev_Fields>;
  stddev_pop?: Maybe<Itemflingeffect_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Itemflingeffect_Stddev_Samp_Fields>;
  sum?: Maybe<Itemflingeffect_Sum_Fields>;
  var_pop?: Maybe<Itemflingeffect_Var_Pop_Fields>;
  var_samp?: Maybe<Itemflingeffect_Var_Samp_Fields>;
  variance?: Maybe<Itemflingeffect_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_itemflingeffect" */
export type Itemflingeffect_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Itemflingeffect_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Itemflingeffect_Avg_Fields = {
  __typename?: 'itemflingeffect_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_itemflingeffect". All fields are combined with a logical 'AND'. */
export type Itemflingeffect_Bool_Exp = {
  _and?: InputMaybe<Array<Itemflingeffect_Bool_Exp>>;
  _not?: InputMaybe<Itemflingeffect_Bool_Exp>;
  _or?: InputMaybe<Array<Itemflingeffect_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  itemflingeffecteffecttexts?: InputMaybe<Itemflingeffecteffecttext_Bool_Exp>;
  itemflingeffecteffecttexts_aggregate?: InputMaybe<Itemflingeffecteffecttext_Aggregate_Bool_Exp>;
  items?: InputMaybe<Item_Bool_Exp>;
  items_aggregate?: InputMaybe<Item_Aggregate_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** aggregate max on columns */
export type Itemflingeffect_Max_Fields = {
  __typename?: 'itemflingeffect_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Itemflingeffect_Min_Fields = {
  __typename?: 'itemflingeffect_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** Ordering options when selecting data from "pokemon_v2_itemflingeffect". */
export type Itemflingeffect_Order_By = {
  id?: InputMaybe<Order_By>;
  itemflingeffecteffecttexts_aggregate?: InputMaybe<Itemflingeffecteffecttext_Aggregate_Order_By>;
  items_aggregate?: InputMaybe<Item_Aggregate_Order_By>;
  name?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_itemflingeffect" */
export enum Itemflingeffect_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Itemflingeffect_Stddev_Fields = {
  __typename?: 'itemflingeffect_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Itemflingeffect_Stddev_Pop_Fields = {
  __typename?: 'itemflingeffect_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Itemflingeffect_Stddev_Samp_Fields = {
  __typename?: 'itemflingeffect_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate sum on columns */
export type Itemflingeffect_Sum_Fields = {
  __typename?: 'itemflingeffect_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate var_pop on columns */
export type Itemflingeffect_Var_Pop_Fields = {
  __typename?: 'itemflingeffect_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Itemflingeffect_Var_Samp_Fields = {
  __typename?: 'itemflingeffect_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Itemflingeffect_Variance_Fields = {
  __typename?: 'itemflingeffect_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_itemflingeffecteffecttext" */
export type Itemflingeffecteffecttext = {
  __typename?: 'itemflingeffecteffecttext';
  effect: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  item_fling_effect_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  itemflingeffect?: Maybe<Itemflingeffect>;
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_itemflingeffecteffecttext" */
export type Itemflingeffecteffecttext_Aggregate = {
  __typename?: 'itemflingeffecteffecttext_aggregate';
  aggregate?: Maybe<Itemflingeffecteffecttext_Aggregate_Fields>;
  nodes: Array<Itemflingeffecteffecttext>;
};

export type Itemflingeffecteffecttext_Aggregate_Bool_Exp = {
  count?: InputMaybe<Itemflingeffecteffecttext_Aggregate_Bool_Exp_Count>;
};

export type Itemflingeffecteffecttext_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Itemflingeffecteffecttext_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Itemflingeffecteffecttext_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_itemflingeffecteffecttext" */
export type Itemflingeffecteffecttext_Aggregate_Fields = {
  __typename?: 'itemflingeffecteffecttext_aggregate_fields';
  avg?: Maybe<Itemflingeffecteffecttext_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Itemflingeffecteffecttext_Max_Fields>;
  min?: Maybe<Itemflingeffecteffecttext_Min_Fields>;
  stddev?: Maybe<Itemflingeffecteffecttext_Stddev_Fields>;
  stddev_pop?: Maybe<Itemflingeffecteffecttext_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Itemflingeffecteffecttext_Stddev_Samp_Fields>;
  sum?: Maybe<Itemflingeffecteffecttext_Sum_Fields>;
  var_pop?: Maybe<Itemflingeffecteffecttext_Var_Pop_Fields>;
  var_samp?: Maybe<Itemflingeffecteffecttext_Var_Samp_Fields>;
  variance?: Maybe<Itemflingeffecteffecttext_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_itemflingeffecteffecttext" */
export type Itemflingeffecteffecttext_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Itemflingeffecteffecttext_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_itemflingeffecteffecttext" */
export type Itemflingeffecteffecttext_Aggregate_Order_By = {
  avg?: InputMaybe<Itemflingeffecteffecttext_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Itemflingeffecteffecttext_Max_Order_By>;
  min?: InputMaybe<Itemflingeffecteffecttext_Min_Order_By>;
  stddev?: InputMaybe<Itemflingeffecteffecttext_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Itemflingeffecteffecttext_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Itemflingeffecteffecttext_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Itemflingeffecteffecttext_Sum_Order_By>;
  var_pop?: InputMaybe<Itemflingeffecteffecttext_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Itemflingeffecteffecttext_Var_Samp_Order_By>;
  variance?: InputMaybe<Itemflingeffecteffecttext_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Itemflingeffecteffecttext_Avg_Fields = {
  __typename?: 'itemflingeffecteffecttext_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_fling_effect_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_itemflingeffecteffecttext" */
export type Itemflingeffecteffecttext_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  item_fling_effect_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_itemflingeffecteffecttext". All fields are combined with a logical 'AND'. */
export type Itemflingeffecteffecttext_Bool_Exp = {
  _and?: InputMaybe<Array<Itemflingeffecteffecttext_Bool_Exp>>;
  _not?: InputMaybe<Itemflingeffecteffecttext_Bool_Exp>;
  _or?: InputMaybe<Array<Itemflingeffecteffecttext_Bool_Exp>>;
  effect?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  item_fling_effect_id?: InputMaybe<Int_Comparison_Exp>;
  itemflingeffect?: InputMaybe<Itemflingeffect_Bool_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Itemflingeffecteffecttext_Max_Fields = {
  __typename?: 'itemflingeffecteffecttext_max_fields';
  effect?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  item_fling_effect_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_itemflingeffecteffecttext" */
export type Itemflingeffecteffecttext_Max_Order_By = {
  effect?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_fling_effect_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Itemflingeffecteffecttext_Min_Fields = {
  __typename?: 'itemflingeffecteffecttext_min_fields';
  effect?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  item_fling_effect_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_itemflingeffecteffecttext" */
export type Itemflingeffecteffecttext_Min_Order_By = {
  effect?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_fling_effect_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_itemflingeffecteffecttext". */
export type Itemflingeffecteffecttext_Order_By = {
  effect?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_fling_effect_id?: InputMaybe<Order_By>;
  itemflingeffect?: InputMaybe<Itemflingeffect_Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_itemflingeffecteffecttext" */
export enum Itemflingeffecteffecttext_Select_Column {
  /** column name */
  Effect = 'effect',
  /** column name */
  Id = 'id',
  /** column name */
  ItemFlingEffectId = 'item_fling_effect_id',
  /** column name */
  LanguageId = 'language_id'
}

/** aggregate stddev on columns */
export type Itemflingeffecteffecttext_Stddev_Fields = {
  __typename?: 'itemflingeffecteffecttext_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_fling_effect_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_itemflingeffecteffecttext" */
export type Itemflingeffecteffecttext_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  item_fling_effect_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Itemflingeffecteffecttext_Stddev_Pop_Fields = {
  __typename?: 'itemflingeffecteffecttext_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_fling_effect_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_itemflingeffecteffecttext" */
export type Itemflingeffecteffecttext_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  item_fling_effect_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Itemflingeffecteffecttext_Stddev_Samp_Fields = {
  __typename?: 'itemflingeffecteffecttext_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_fling_effect_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_itemflingeffecteffecttext" */
export type Itemflingeffecteffecttext_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  item_fling_effect_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Itemflingeffecteffecttext_Sum_Fields = {
  __typename?: 'itemflingeffecteffecttext_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_fling_effect_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_itemflingeffecteffecttext" */
export type Itemflingeffecteffecttext_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  item_fling_effect_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Itemflingeffecteffecttext_Var_Pop_Fields = {
  __typename?: 'itemflingeffecteffecttext_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_fling_effect_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_itemflingeffecteffecttext" */
export type Itemflingeffecteffecttext_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  item_fling_effect_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Itemflingeffecteffecttext_Var_Samp_Fields = {
  __typename?: 'itemflingeffecteffecttext_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_fling_effect_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_itemflingeffecteffecttext" */
export type Itemflingeffecteffecttext_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  item_fling_effect_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Itemflingeffecteffecttext_Variance_Fields = {
  __typename?: 'itemflingeffecteffecttext_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_fling_effect_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_itemflingeffecteffecttext" */
export type Itemflingeffecteffecttext_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  item_fling_effect_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_itemgameindex" */
export type Itemgameindex = {
  __typename?: 'itemgameindex';
  game_index: Scalars['Int']['output'];
  /** An object relationship */
  generation?: Maybe<Generation>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  /** An object relationship */
  item?: Maybe<Item>;
  item_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_itemgameindex" */
export type Itemgameindex_Aggregate = {
  __typename?: 'itemgameindex_aggregate';
  aggregate?: Maybe<Itemgameindex_Aggregate_Fields>;
  nodes: Array<Itemgameindex>;
};

export type Itemgameindex_Aggregate_Bool_Exp = {
  count?: InputMaybe<Itemgameindex_Aggregate_Bool_Exp_Count>;
};

export type Itemgameindex_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Itemgameindex_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Itemgameindex_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_itemgameindex" */
export type Itemgameindex_Aggregate_Fields = {
  __typename?: 'itemgameindex_aggregate_fields';
  avg?: Maybe<Itemgameindex_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Itemgameindex_Max_Fields>;
  min?: Maybe<Itemgameindex_Min_Fields>;
  stddev?: Maybe<Itemgameindex_Stddev_Fields>;
  stddev_pop?: Maybe<Itemgameindex_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Itemgameindex_Stddev_Samp_Fields>;
  sum?: Maybe<Itemgameindex_Sum_Fields>;
  var_pop?: Maybe<Itemgameindex_Var_Pop_Fields>;
  var_samp?: Maybe<Itemgameindex_Var_Samp_Fields>;
  variance?: Maybe<Itemgameindex_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_itemgameindex" */
export type Itemgameindex_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Itemgameindex_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_itemgameindex" */
export type Itemgameindex_Aggregate_Order_By = {
  avg?: InputMaybe<Itemgameindex_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Itemgameindex_Max_Order_By>;
  min?: InputMaybe<Itemgameindex_Min_Order_By>;
  stddev?: InputMaybe<Itemgameindex_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Itemgameindex_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Itemgameindex_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Itemgameindex_Sum_Order_By>;
  var_pop?: InputMaybe<Itemgameindex_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Itemgameindex_Var_Samp_Order_By>;
  variance?: InputMaybe<Itemgameindex_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Itemgameindex_Avg_Fields = {
  __typename?: 'itemgameindex_avg_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_itemgameindex" */
export type Itemgameindex_Avg_Order_By = {
  game_index?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_itemgameindex". All fields are combined with a logical 'AND'. */
export type Itemgameindex_Bool_Exp = {
  _and?: InputMaybe<Array<Itemgameindex_Bool_Exp>>;
  _not?: InputMaybe<Itemgameindex_Bool_Exp>;
  _or?: InputMaybe<Array<Itemgameindex_Bool_Exp>>;
  game_index?: InputMaybe<Int_Comparison_Exp>;
  generation?: InputMaybe<Generation_Bool_Exp>;
  generation_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  item?: InputMaybe<Item_Bool_Exp>;
  item_id?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Itemgameindex_Max_Fields = {
  __typename?: 'itemgameindex_max_fields';
  game_index?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_itemgameindex" */
export type Itemgameindex_Max_Order_By = {
  game_index?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Itemgameindex_Min_Fields = {
  __typename?: 'itemgameindex_min_fields';
  game_index?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_itemgameindex" */
export type Itemgameindex_Min_Order_By = {
  game_index?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_itemgameindex". */
export type Itemgameindex_Order_By = {
  game_index?: InputMaybe<Order_By>;
  generation?: InputMaybe<Generation_Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item?: InputMaybe<Item_Order_By>;
  item_id?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_itemgameindex" */
export enum Itemgameindex_Select_Column {
  /** column name */
  GameIndex = 'game_index',
  /** column name */
  GenerationId = 'generation_id',
  /** column name */
  Id = 'id',
  /** column name */
  ItemId = 'item_id'
}

/** aggregate stddev on columns */
export type Itemgameindex_Stddev_Fields = {
  __typename?: 'itemgameindex_stddev_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_itemgameindex" */
export type Itemgameindex_Stddev_Order_By = {
  game_index?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Itemgameindex_Stddev_Pop_Fields = {
  __typename?: 'itemgameindex_stddev_pop_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_itemgameindex" */
export type Itemgameindex_Stddev_Pop_Order_By = {
  game_index?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Itemgameindex_Stddev_Samp_Fields = {
  __typename?: 'itemgameindex_stddev_samp_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_itemgameindex" */
export type Itemgameindex_Stddev_Samp_Order_By = {
  game_index?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Itemgameindex_Sum_Fields = {
  __typename?: 'itemgameindex_sum_fields';
  game_index?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_itemgameindex" */
export type Itemgameindex_Sum_Order_By = {
  game_index?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Itemgameindex_Var_Pop_Fields = {
  __typename?: 'itemgameindex_var_pop_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_itemgameindex" */
export type Itemgameindex_Var_Pop_Order_By = {
  game_index?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Itemgameindex_Var_Samp_Fields = {
  __typename?: 'itemgameindex_var_samp_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_itemgameindex" */
export type Itemgameindex_Var_Samp_Order_By = {
  game_index?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Itemgameindex_Variance_Fields = {
  __typename?: 'itemgameindex_variance_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_itemgameindex" */
export type Itemgameindex_Variance_Order_By = {
  game_index?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_itemname" */
export type Itemname = {
  __typename?: 'itemname';
  id: Scalars['Int']['output'];
  /** An object relationship */
  item?: Maybe<Item>;
  item_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_itemname" */
export type Itemname_Aggregate = {
  __typename?: 'itemname_aggregate';
  aggregate?: Maybe<Itemname_Aggregate_Fields>;
  nodes: Array<Itemname>;
};

export type Itemname_Aggregate_Bool_Exp = {
  count?: InputMaybe<Itemname_Aggregate_Bool_Exp_Count>;
};

export type Itemname_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Itemname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Itemname_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_itemname" */
export type Itemname_Aggregate_Fields = {
  __typename?: 'itemname_aggregate_fields';
  avg?: Maybe<Itemname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Itemname_Max_Fields>;
  min?: Maybe<Itemname_Min_Fields>;
  stddev?: Maybe<Itemname_Stddev_Fields>;
  stddev_pop?: Maybe<Itemname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Itemname_Stddev_Samp_Fields>;
  sum?: Maybe<Itemname_Sum_Fields>;
  var_pop?: Maybe<Itemname_Var_Pop_Fields>;
  var_samp?: Maybe<Itemname_Var_Samp_Fields>;
  variance?: Maybe<Itemname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_itemname" */
export type Itemname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Itemname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_itemname" */
export type Itemname_Aggregate_Order_By = {
  avg?: InputMaybe<Itemname_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Itemname_Max_Order_By>;
  min?: InputMaybe<Itemname_Min_Order_By>;
  stddev?: InputMaybe<Itemname_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Itemname_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Itemname_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Itemname_Sum_Order_By>;
  var_pop?: InputMaybe<Itemname_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Itemname_Var_Samp_Order_By>;
  variance?: InputMaybe<Itemname_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Itemname_Avg_Fields = {
  __typename?: 'itemname_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_itemname" */
export type Itemname_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_itemname". All fields are combined with a logical 'AND'. */
export type Itemname_Bool_Exp = {
  _and?: InputMaybe<Array<Itemname_Bool_Exp>>;
  _not?: InputMaybe<Itemname_Bool_Exp>;
  _or?: InputMaybe<Array<Itemname_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  item?: InputMaybe<Item_Bool_Exp>;
  item_id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** aggregate max on columns */
export type Itemname_Max_Fields = {
  __typename?: 'itemname_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "pokemon_v2_itemname" */
export type Itemname_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Itemname_Min_Fields = {
  __typename?: 'itemname_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "pokemon_v2_itemname" */
export type Itemname_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_itemname". */
export type Itemname_Order_By = {
  id?: InputMaybe<Order_By>;
  item?: InputMaybe<Item_Order_By>;
  item_id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_itemname" */
export enum Itemname_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  ItemId = 'item_id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Itemname_Stddev_Fields = {
  __typename?: 'itemname_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_itemname" */
export type Itemname_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Itemname_Stddev_Pop_Fields = {
  __typename?: 'itemname_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_itemname" */
export type Itemname_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Itemname_Stddev_Samp_Fields = {
  __typename?: 'itemname_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_itemname" */
export type Itemname_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Itemname_Sum_Fields = {
  __typename?: 'itemname_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_itemname" */
export type Itemname_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Itemname_Var_Pop_Fields = {
  __typename?: 'itemname_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_itemname" */
export type Itemname_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Itemname_Var_Samp_Fields = {
  __typename?: 'itemname_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_itemname" */
export type Itemname_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Itemname_Variance_Fields = {
  __typename?: 'itemname_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_itemname" */
export type Itemname_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_itempocket" */
export type Itempocket = {
  __typename?: 'itempocket';
  id: Scalars['Int']['output'];
  /** An array relationship */
  itemcategories: Array<Itemcategory>;
  /** An aggregate relationship */
  itemcategories_aggregate: Itemcategory_Aggregate;
  /** An array relationship */
  itempocketnames: Array<Itempocketname>;
  /** An aggregate relationship */
  itempocketnames_aggregate: Itempocketname_Aggregate;
  name: Scalars['String']['output'];
};


/** columns and relationships of "pokemon_v2_itempocket" */
export type ItempocketItemcategoriesArgs = {
  distinct_on?: InputMaybe<Array<Itemcategory_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemcategory_Order_By>>;
  where?: InputMaybe<Itemcategory_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_itempocket" */
export type ItempocketItemcategories_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Itemcategory_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemcategory_Order_By>>;
  where?: InputMaybe<Itemcategory_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_itempocket" */
export type ItempocketItempocketnamesArgs = {
  distinct_on?: InputMaybe<Array<Itempocketname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itempocketname_Order_By>>;
  where?: InputMaybe<Itempocketname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_itempocket" */
export type ItempocketItempocketnames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Itempocketname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itempocketname_Order_By>>;
  where?: InputMaybe<Itempocketname_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_itempocket" */
export type Itempocket_Aggregate = {
  __typename?: 'itempocket_aggregate';
  aggregate?: Maybe<Itempocket_Aggregate_Fields>;
  nodes: Array<Itempocket>;
};

/** aggregate fields of "pokemon_v2_itempocket" */
export type Itempocket_Aggregate_Fields = {
  __typename?: 'itempocket_aggregate_fields';
  avg?: Maybe<Itempocket_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Itempocket_Max_Fields>;
  min?: Maybe<Itempocket_Min_Fields>;
  stddev?: Maybe<Itempocket_Stddev_Fields>;
  stddev_pop?: Maybe<Itempocket_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Itempocket_Stddev_Samp_Fields>;
  sum?: Maybe<Itempocket_Sum_Fields>;
  var_pop?: Maybe<Itempocket_Var_Pop_Fields>;
  var_samp?: Maybe<Itempocket_Var_Samp_Fields>;
  variance?: Maybe<Itempocket_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_itempocket" */
export type Itempocket_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Itempocket_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Itempocket_Avg_Fields = {
  __typename?: 'itempocket_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_itempocket". All fields are combined with a logical 'AND'. */
export type Itempocket_Bool_Exp = {
  _and?: InputMaybe<Array<Itempocket_Bool_Exp>>;
  _not?: InputMaybe<Itempocket_Bool_Exp>;
  _or?: InputMaybe<Array<Itempocket_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  itemcategories?: InputMaybe<Itemcategory_Bool_Exp>;
  itemcategories_aggregate?: InputMaybe<Itemcategory_Aggregate_Bool_Exp>;
  itempocketnames?: InputMaybe<Itempocketname_Bool_Exp>;
  itempocketnames_aggregate?: InputMaybe<Itempocketname_Aggregate_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** aggregate max on columns */
export type Itempocket_Max_Fields = {
  __typename?: 'itempocket_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Itempocket_Min_Fields = {
  __typename?: 'itempocket_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** Ordering options when selecting data from "pokemon_v2_itempocket". */
export type Itempocket_Order_By = {
  id?: InputMaybe<Order_By>;
  itemcategories_aggregate?: InputMaybe<Itemcategory_Aggregate_Order_By>;
  itempocketnames_aggregate?: InputMaybe<Itempocketname_Aggregate_Order_By>;
  name?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_itempocket" */
export enum Itempocket_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Itempocket_Stddev_Fields = {
  __typename?: 'itempocket_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Itempocket_Stddev_Pop_Fields = {
  __typename?: 'itempocket_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Itempocket_Stddev_Samp_Fields = {
  __typename?: 'itempocket_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate sum on columns */
export type Itempocket_Sum_Fields = {
  __typename?: 'itempocket_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate var_pop on columns */
export type Itempocket_Var_Pop_Fields = {
  __typename?: 'itempocket_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Itempocket_Var_Samp_Fields = {
  __typename?: 'itempocket_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Itempocket_Variance_Fields = {
  __typename?: 'itempocket_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_itempocketname" */
export type Itempocketname = {
  __typename?: 'itempocketname';
  id: Scalars['Int']['output'];
  item_pocket_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  itempocket?: Maybe<Itempocket>;
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_itempocketname" */
export type Itempocketname_Aggregate = {
  __typename?: 'itempocketname_aggregate';
  aggregate?: Maybe<Itempocketname_Aggregate_Fields>;
  nodes: Array<Itempocketname>;
};

export type Itempocketname_Aggregate_Bool_Exp = {
  count?: InputMaybe<Itempocketname_Aggregate_Bool_Exp_Count>;
};

export type Itempocketname_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Itempocketname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Itempocketname_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_itempocketname" */
export type Itempocketname_Aggregate_Fields = {
  __typename?: 'itempocketname_aggregate_fields';
  avg?: Maybe<Itempocketname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Itempocketname_Max_Fields>;
  min?: Maybe<Itempocketname_Min_Fields>;
  stddev?: Maybe<Itempocketname_Stddev_Fields>;
  stddev_pop?: Maybe<Itempocketname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Itempocketname_Stddev_Samp_Fields>;
  sum?: Maybe<Itempocketname_Sum_Fields>;
  var_pop?: Maybe<Itempocketname_Var_Pop_Fields>;
  var_samp?: Maybe<Itempocketname_Var_Samp_Fields>;
  variance?: Maybe<Itempocketname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_itempocketname" */
export type Itempocketname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Itempocketname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_itempocketname" */
export type Itempocketname_Aggregate_Order_By = {
  avg?: InputMaybe<Itempocketname_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Itempocketname_Max_Order_By>;
  min?: InputMaybe<Itempocketname_Min_Order_By>;
  stddev?: InputMaybe<Itempocketname_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Itempocketname_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Itempocketname_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Itempocketname_Sum_Order_By>;
  var_pop?: InputMaybe<Itempocketname_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Itempocketname_Var_Samp_Order_By>;
  variance?: InputMaybe<Itempocketname_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Itempocketname_Avg_Fields = {
  __typename?: 'itempocketname_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_pocket_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_itempocketname" */
export type Itempocketname_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  item_pocket_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_itempocketname". All fields are combined with a logical 'AND'. */
export type Itempocketname_Bool_Exp = {
  _and?: InputMaybe<Array<Itempocketname_Bool_Exp>>;
  _not?: InputMaybe<Itempocketname_Bool_Exp>;
  _or?: InputMaybe<Array<Itempocketname_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  item_pocket_id?: InputMaybe<Int_Comparison_Exp>;
  itempocket?: InputMaybe<Itempocket_Bool_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** aggregate max on columns */
export type Itempocketname_Max_Fields = {
  __typename?: 'itempocketname_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_pocket_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "pokemon_v2_itempocketname" */
export type Itempocketname_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  item_pocket_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Itempocketname_Min_Fields = {
  __typename?: 'itempocketname_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_pocket_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "pokemon_v2_itempocketname" */
export type Itempocketname_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  item_pocket_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_itempocketname". */
export type Itempocketname_Order_By = {
  id?: InputMaybe<Order_By>;
  item_pocket_id?: InputMaybe<Order_By>;
  itempocket?: InputMaybe<Itempocket_Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_itempocketname" */
export enum Itempocketname_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  ItemPocketId = 'item_pocket_id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Itempocketname_Stddev_Fields = {
  __typename?: 'itempocketname_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_pocket_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_itempocketname" */
export type Itempocketname_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  item_pocket_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Itempocketname_Stddev_Pop_Fields = {
  __typename?: 'itempocketname_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_pocket_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_itempocketname" */
export type Itempocketname_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  item_pocket_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Itempocketname_Stddev_Samp_Fields = {
  __typename?: 'itempocketname_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_pocket_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_itempocketname" */
export type Itempocketname_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  item_pocket_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Itempocketname_Sum_Fields = {
  __typename?: 'itempocketname_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_pocket_id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_itempocketname" */
export type Itempocketname_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  item_pocket_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Itempocketname_Var_Pop_Fields = {
  __typename?: 'itempocketname_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_pocket_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_itempocketname" */
export type Itempocketname_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  item_pocket_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Itempocketname_Var_Samp_Fields = {
  __typename?: 'itempocketname_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_pocket_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_itempocketname" */
export type Itempocketname_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  item_pocket_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Itempocketname_Variance_Fields = {
  __typename?: 'itempocketname_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_pocket_id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_itempocketname" */
export type Itempocketname_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  item_pocket_id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_itemsprites" */
export type Itemsprites = {
  __typename?: 'itemsprites';
  id: Scalars['Int']['output'];
  /** An object relationship */
  item?: Maybe<Item>;
  item_id?: Maybe<Scalars['Int']['output']>;
  sprites: Scalars['jsonb']['output'];
};


/** columns and relationships of "pokemon_v2_itemsprites" */
export type ItemspritesSpritesArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "pokemon_v2_itemsprites" */
export type Itemsprites_Aggregate = {
  __typename?: 'itemsprites_aggregate';
  aggregate?: Maybe<Itemsprites_Aggregate_Fields>;
  nodes: Array<Itemsprites>;
};

export type Itemsprites_Aggregate_Bool_Exp = {
  count?: InputMaybe<Itemsprites_Aggregate_Bool_Exp_Count>;
};

export type Itemsprites_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Itemsprites_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Itemsprites_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_itemsprites" */
export type Itemsprites_Aggregate_Fields = {
  __typename?: 'itemsprites_aggregate_fields';
  avg?: Maybe<Itemsprites_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Itemsprites_Max_Fields>;
  min?: Maybe<Itemsprites_Min_Fields>;
  stddev?: Maybe<Itemsprites_Stddev_Fields>;
  stddev_pop?: Maybe<Itemsprites_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Itemsprites_Stddev_Samp_Fields>;
  sum?: Maybe<Itemsprites_Sum_Fields>;
  var_pop?: Maybe<Itemsprites_Var_Pop_Fields>;
  var_samp?: Maybe<Itemsprites_Var_Samp_Fields>;
  variance?: Maybe<Itemsprites_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_itemsprites" */
export type Itemsprites_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Itemsprites_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_itemsprites" */
export type Itemsprites_Aggregate_Order_By = {
  avg?: InputMaybe<Itemsprites_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Itemsprites_Max_Order_By>;
  min?: InputMaybe<Itemsprites_Min_Order_By>;
  stddev?: InputMaybe<Itemsprites_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Itemsprites_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Itemsprites_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Itemsprites_Sum_Order_By>;
  var_pop?: InputMaybe<Itemsprites_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Itemsprites_Var_Samp_Order_By>;
  variance?: InputMaybe<Itemsprites_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Itemsprites_Avg_Fields = {
  __typename?: 'itemsprites_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_itemsprites" */
export type Itemsprites_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_itemsprites". All fields are combined with a logical 'AND'. */
export type Itemsprites_Bool_Exp = {
  _and?: InputMaybe<Array<Itemsprites_Bool_Exp>>;
  _not?: InputMaybe<Itemsprites_Bool_Exp>;
  _or?: InputMaybe<Array<Itemsprites_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  item?: InputMaybe<Item_Bool_Exp>;
  item_id?: InputMaybe<Int_Comparison_Exp>;
  sprites?: InputMaybe<Jsonb_Comparison_Exp>;
};

/** aggregate max on columns */
export type Itemsprites_Max_Fields = {
  __typename?: 'itemsprites_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_itemsprites" */
export type Itemsprites_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Itemsprites_Min_Fields = {
  __typename?: 'itemsprites_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_itemsprites" */
export type Itemsprites_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_itemsprites". */
export type Itemsprites_Order_By = {
  id?: InputMaybe<Order_By>;
  item?: InputMaybe<Item_Order_By>;
  item_id?: InputMaybe<Order_By>;
  sprites?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_itemsprites" */
export enum Itemsprites_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  ItemId = 'item_id',
  /** column name */
  Sprites = 'sprites'
}

/** aggregate stddev on columns */
export type Itemsprites_Stddev_Fields = {
  __typename?: 'itemsprites_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_itemsprites" */
export type Itemsprites_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Itemsprites_Stddev_Pop_Fields = {
  __typename?: 'itemsprites_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_itemsprites" */
export type Itemsprites_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Itemsprites_Stddev_Samp_Fields = {
  __typename?: 'itemsprites_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_itemsprites" */
export type Itemsprites_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Itemsprites_Sum_Fields = {
  __typename?: 'itemsprites_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_itemsprites" */
export type Itemsprites_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Itemsprites_Var_Pop_Fields = {
  __typename?: 'itemsprites_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_itemsprites" */
export type Itemsprites_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Itemsprites_Var_Samp_Fields = {
  __typename?: 'itemsprites_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_itemsprites" */
export type Itemsprites_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Itemsprites_Variance_Fields = {
  __typename?: 'itemsprites_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_itemsprites" */
export type Itemsprites_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
};

export type Jsonb_Cast_Exp = {
  String?: InputMaybe<String_Comparison_Exp>;
};

/** Boolean expression to compare columns of type "jsonb". All fields are combined with logical 'AND'. */
export type Jsonb_Comparison_Exp = {
  _cast?: InputMaybe<Jsonb_Cast_Exp>;
  /** is the column contained in the given json value */
  _contained_in?: InputMaybe<Scalars['jsonb']['input']>;
  /** does the column contain the given json value at the top level */
  _contains?: InputMaybe<Scalars['jsonb']['input']>;
  _eq?: InputMaybe<Scalars['jsonb']['input']>;
  _gt?: InputMaybe<Scalars['jsonb']['input']>;
  _gte?: InputMaybe<Scalars['jsonb']['input']>;
  /** does the string exist as a top-level key in the column */
  _has_key?: InputMaybe<Scalars['String']['input']>;
  /** do all of these strings exist as top-level keys in the column */
  _has_keys_all?: InputMaybe<Array<Scalars['String']['input']>>;
  /** do any of these strings exist as top-level keys in the column */
  _has_keys_any?: InputMaybe<Array<Scalars['String']['input']>>;
  _in?: InputMaybe<Array<Scalars['jsonb']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['jsonb']['input']>;
  _lte?: InputMaybe<Scalars['jsonb']['input']>;
  _neq?: InputMaybe<Scalars['jsonb']['input']>;
  _nin?: InputMaybe<Array<Scalars['jsonb']['input']>>;
};

/** columns and relationships of "pokemon_v2_language" */
export type Language = {
  __typename?: 'language';
  /** An array relationship */
  LanguagenamesByLocalLanguageId: Array<Languagename>;
  /** An aggregate relationship */
  LanguagenamesByLocalLanguageId_aggregate: Languagename_Aggregate;
  /** An array relationship */
  abilitychangeeffecttexts: Array<Abilitychangeeffecttext>;
  /** An aggregate relationship */
  abilitychangeeffecttexts_aggregate: Abilitychangeeffecttext_Aggregate;
  /** An array relationship */
  abilityeffecttexts: Array<Abilityeffecttext>;
  /** An aggregate relationship */
  abilityeffecttexts_aggregate: Abilityeffecttext_Aggregate;
  /** An array relationship */
  abilityflavortexts: Array<Abilityflavortext>;
  /** An aggregate relationship */
  abilityflavortexts_aggregate: Abilityflavortext_Aggregate;
  /** An array relationship */
  abilitynames: Array<Abilityname>;
  /** An aggregate relationship */
  abilitynames_aggregate: Abilityname_Aggregate;
  /** An array relationship */
  berryfirmnessnames: Array<Berryfirmnessname>;
  /** An aggregate relationship */
  berryfirmnessnames_aggregate: Berryfirmnessname_Aggregate;
  /** An array relationship */
  berryflavornames: Array<Berryflavorname>;
  /** An aggregate relationship */
  berryflavornames_aggregate: Berryflavorname_Aggregate;
  /** An array relationship */
  characteristicdescriptions: Array<Characteristicdescription>;
  /** An aggregate relationship */
  characteristicdescriptions_aggregate: Characteristicdescription_Aggregate;
  /** An array relationship */
  contesteffecteffecttexts: Array<Contesteffecteffecttext>;
  /** An aggregate relationship */
  contesteffecteffecttexts_aggregate: Contesteffecteffecttext_Aggregate;
  /** An array relationship */
  contesteffectflavortexts: Array<Contesteffectflavortext>;
  /** An aggregate relationship */
  contesteffectflavortexts_aggregate: Contesteffectflavortext_Aggregate;
  /** An array relationship */
  contesttypenames: Array<Contesttypename>;
  /** An aggregate relationship */
  contesttypenames_aggregate: Contesttypename_Aggregate;
  /** An array relationship */
  egggroupnames: Array<Egggroupname>;
  /** An aggregate relationship */
  egggroupnames_aggregate: Egggroupname_Aggregate;
  /** An array relationship */
  encounterconditionnames: Array<Encounterconditionname>;
  /** An aggregate relationship */
  encounterconditionnames_aggregate: Encounterconditionname_Aggregate;
  /** An array relationship */
  encounterconditionvaluenames: Array<Encounterconditionvaluename>;
  /** An aggregate relationship */
  encounterconditionvaluenames_aggregate: Encounterconditionvaluename_Aggregate;
  /** An array relationship */
  encountermethodnames: Array<Encountermethodname>;
  /** An aggregate relationship */
  encountermethodnames_aggregate: Encountermethodname_Aggregate;
  /** An array relationship */
  evolutiontriggernames: Array<Evolutiontriggername>;
  /** An aggregate relationship */
  evolutiontriggernames_aggregate: Evolutiontriggername_Aggregate;
  /** An array relationship */
  generationnames: Array<Generationname>;
  /** An aggregate relationship */
  generationnames_aggregate: Generationname_Aggregate;
  /** An array relationship */
  growthratedescriptions: Array<Growthratedescription>;
  /** An aggregate relationship */
  growthratedescriptions_aggregate: Growthratedescription_Aggregate;
  id: Scalars['Int']['output'];
  iso639: Scalars['String']['output'];
  iso3166: Scalars['String']['output'];
  /** An array relationship */
  itemattributedescriptions: Array<Itemattributedescription>;
  /** An aggregate relationship */
  itemattributedescriptions_aggregate: Itemattributedescription_Aggregate;
  /** An array relationship */
  itemattributenames: Array<Itemattributename>;
  /** An aggregate relationship */
  itemattributenames_aggregate: Itemattributename_Aggregate;
  /** An array relationship */
  itemcategorynames: Array<Itemcategoryname>;
  /** An aggregate relationship */
  itemcategorynames_aggregate: Itemcategoryname_Aggregate;
  /** An array relationship */
  itemeffecttexts: Array<Itemeffecttext>;
  /** An aggregate relationship */
  itemeffecttexts_aggregate: Itemeffecttext_Aggregate;
  /** An array relationship */
  itemflavortexts: Array<Itemflavortext>;
  /** An aggregate relationship */
  itemflavortexts_aggregate: Itemflavortext_Aggregate;
  /** An array relationship */
  itemflingeffecteffecttexts: Array<Itemflingeffecteffecttext>;
  /** An aggregate relationship */
  itemflingeffecteffecttexts_aggregate: Itemflingeffecteffecttext_Aggregate;
  /** An array relationship */
  itemnames: Array<Itemname>;
  /** An aggregate relationship */
  itemnames_aggregate: Itemname_Aggregate;
  /** An array relationship */
  itempocketnames: Array<Itempocketname>;
  /** An aggregate relationship */
  itempocketnames_aggregate: Itempocketname_Aggregate;
  /** An array relationship */
  languagenames: Array<Languagename>;
  /** An aggregate relationship */
  languagenames_aggregate: Languagename_Aggregate;
  /** An array relationship */
  locationareanames: Array<Locationareaname>;
  /** An aggregate relationship */
  locationareanames_aggregate: Locationareaname_Aggregate;
  /** An array relationship */
  locationnames: Array<Locationname>;
  /** An aggregate relationship */
  locationnames_aggregate: Locationname_Aggregate;
  /** An array relationship */
  moveattributedescriptions: Array<Moveattributedescription>;
  /** An aggregate relationship */
  moveattributedescriptions_aggregate: Moveattributedescription_Aggregate;
  /** An array relationship */
  moveattributenames: Array<Moveattributename>;
  /** An aggregate relationship */
  moveattributenames_aggregate: Moveattributename_Aggregate;
  /** An array relationship */
  movebattlestylenames: Array<Movebattlestylename>;
  /** An aggregate relationship */
  movebattlestylenames_aggregate: Movebattlestylename_Aggregate;
  /** An array relationship */
  movedamageclassdescriptions: Array<Movedamageclassdescription>;
  /** An aggregate relationship */
  movedamageclassdescriptions_aggregate: Movedamageclassdescription_Aggregate;
  /** An array relationship */
  movedamageclassnames: Array<Movedamageclassname>;
  /** An aggregate relationship */
  movedamageclassnames_aggregate: Movedamageclassname_Aggregate;
  /** An array relationship */
  moveeffectchangeeffecttexts: Array<Moveeffectchangeeffecttext>;
  /** An aggregate relationship */
  moveeffectchangeeffecttexts_aggregate: Moveeffectchangeeffecttext_Aggregate;
  /** An array relationship */
  moveeffecteffecttexts: Array<Moveeffecteffecttext>;
  /** An aggregate relationship */
  moveeffecteffecttexts_aggregate: Moveeffecteffecttext_Aggregate;
  /** An array relationship */
  moveflavortexts: Array<Moveflavortext>;
  /** An aggregate relationship */
  moveflavortexts_aggregate: Moveflavortext_Aggregate;
  /** An array relationship */
  movelearnmethoddescriptions: Array<Movelearnmethoddescription>;
  /** An aggregate relationship */
  movelearnmethoddescriptions_aggregate: Movelearnmethoddescription_Aggregate;
  /** An array relationship */
  movelearnmethodnames: Array<Movelearnmethodname>;
  /** An aggregate relationship */
  movelearnmethodnames_aggregate: Movelearnmethodname_Aggregate;
  /** An array relationship */
  movemetaailmentnames: Array<Movemetaailmentname>;
  /** An aggregate relationship */
  movemetaailmentnames_aggregate: Movemetaailmentname_Aggregate;
  /** An array relationship */
  movemetacategorydescriptions: Array<Movemetacategorydescription>;
  /** An aggregate relationship */
  movemetacategorydescriptions_aggregate: Movemetacategorydescription_Aggregate;
  /** An array relationship */
  movenames: Array<Movename>;
  /** An aggregate relationship */
  movenames_aggregate: Movename_Aggregate;
  /** An array relationship */
  movetargetdescriptions: Array<Movetargetdescription>;
  /** An aggregate relationship */
  movetargetdescriptions_aggregate: Movetargetdescription_Aggregate;
  /** An array relationship */
  movetargetnames: Array<Movetargetname>;
  /** An aggregate relationship */
  movetargetnames_aggregate: Movetargetname_Aggregate;
  name: Scalars['String']['output'];
  /** An array relationship */
  naturenames: Array<Naturename>;
  /** An aggregate relationship */
  naturenames_aggregate: Naturename_Aggregate;
  official: Scalars['Boolean']['output'];
  order?: Maybe<Scalars['Int']['output']>;
  /** An array relationship */
  palparkareanames: Array<Palparkareaname>;
  /** An aggregate relationship */
  palparkareanames_aggregate: Palparkareaname_Aggregate;
  /** An array relationship */
  pokeathlonstatnames: Array<Pokeathlonstatname>;
  /** An aggregate relationship */
  pokeathlonstatnames_aggregate: Pokeathlonstatname_Aggregate;
  /** An array relationship */
  pokedexdescriptions: Array<Pokedexdescription>;
  /** An aggregate relationship */
  pokedexdescriptions_aggregate: Pokedexdescription_Aggregate;
  /** An array relationship */
  pokedexnames: Array<Pokedexname>;
  /** An aggregate relationship */
  pokedexnames_aggregate: Pokedexname_Aggregate;
  /** An array relationship */
  pokemoncolornames: Array<Pokemoncolorname>;
  /** An aggregate relationship */
  pokemoncolornames_aggregate: Pokemoncolorname_Aggregate;
  /** An array relationship */
  pokemonformnames: Array<Pokemonformname>;
  /** An aggregate relationship */
  pokemonformnames_aggregate: Pokemonformname_Aggregate;
  /** An array relationship */
  pokemonhabitatnames: Array<Pokemonhabitatname>;
  /** An aggregate relationship */
  pokemonhabitatnames_aggregate: Pokemonhabitatname_Aggregate;
  /** An array relationship */
  pokemonshapenames: Array<Pokemonshapename>;
  /** An aggregate relationship */
  pokemonshapenames_aggregate: Pokemonshapename_Aggregate;
  /** An array relationship */
  pokemonspeciesdescriptions: Array<Pokemonspeciesdescription>;
  /** An aggregate relationship */
  pokemonspeciesdescriptions_aggregate: Pokemonspeciesdescription_Aggregate;
  /** An array relationship */
  pokemonspeciesflavortexts: Array<Pokemonspeciesflavortext>;
  /** An aggregate relationship */
  pokemonspeciesflavortexts_aggregate: Pokemonspeciesflavortext_Aggregate;
  /** An array relationship */
  pokemonspeciesnames: Array<Pokemonspeciesname>;
  /** An aggregate relationship */
  pokemonspeciesnames_aggregate: Pokemonspeciesname_Aggregate;
  /** An array relationship */
  regionnames: Array<Regionname>;
  /** An aggregate relationship */
  regionnames_aggregate: Regionname_Aggregate;
  /** An array relationship */
  statnames: Array<Statname>;
  /** An aggregate relationship */
  statnames_aggregate: Statname_Aggregate;
  /** An array relationship */
  supercontesteffectflavortexts: Array<Supercontesteffectflavortext>;
  /** An aggregate relationship */
  supercontesteffectflavortexts_aggregate: Supercontesteffectflavortext_Aggregate;
  /** An array relationship */
  typenames: Array<Typename>;
  /** An aggregate relationship */
  typenames_aggregate: Typename_Aggregate;
  /** An array relationship */
  versionnames: Array<Versionname>;
  /** An aggregate relationship */
  versionnames_aggregate: Versionname_Aggregate;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageLanguagenamesByLocalLanguageIdArgs = {
  distinct_on?: InputMaybe<Array<Languagename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Languagename_Order_By>>;
  where?: InputMaybe<Languagename_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageLanguagenamesByLocalLanguageId_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Languagename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Languagename_Order_By>>;
  where?: InputMaybe<Languagename_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageAbilitychangeeffecttextsArgs = {
  distinct_on?: InputMaybe<Array<Abilitychangeeffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Abilitychangeeffecttext_Order_By>>;
  where?: InputMaybe<Abilitychangeeffecttext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageAbilitychangeeffecttexts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Abilitychangeeffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Abilitychangeeffecttext_Order_By>>;
  where?: InputMaybe<Abilitychangeeffecttext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageAbilityeffecttextsArgs = {
  distinct_on?: InputMaybe<Array<Abilityeffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Abilityeffecttext_Order_By>>;
  where?: InputMaybe<Abilityeffecttext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageAbilityeffecttexts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Abilityeffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Abilityeffecttext_Order_By>>;
  where?: InputMaybe<Abilityeffecttext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageAbilityflavortextsArgs = {
  distinct_on?: InputMaybe<Array<Abilityflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Abilityflavortext_Order_By>>;
  where?: InputMaybe<Abilityflavortext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageAbilityflavortexts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Abilityflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Abilityflavortext_Order_By>>;
  where?: InputMaybe<Abilityflavortext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageAbilitynamesArgs = {
  distinct_on?: InputMaybe<Array<Abilityname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Abilityname_Order_By>>;
  where?: InputMaybe<Abilityname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageAbilitynames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Abilityname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Abilityname_Order_By>>;
  where?: InputMaybe<Abilityname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageBerryfirmnessnamesArgs = {
  distinct_on?: InputMaybe<Array<Berryfirmnessname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Berryfirmnessname_Order_By>>;
  where?: InputMaybe<Berryfirmnessname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageBerryfirmnessnames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Berryfirmnessname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Berryfirmnessname_Order_By>>;
  where?: InputMaybe<Berryfirmnessname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageBerryflavornamesArgs = {
  distinct_on?: InputMaybe<Array<Berryflavorname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Berryflavorname_Order_By>>;
  where?: InputMaybe<Berryflavorname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageBerryflavornames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Berryflavorname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Berryflavorname_Order_By>>;
  where?: InputMaybe<Berryflavorname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageCharacteristicdescriptionsArgs = {
  distinct_on?: InputMaybe<Array<Characteristicdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Characteristicdescription_Order_By>>;
  where?: InputMaybe<Characteristicdescription_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageCharacteristicdescriptions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Characteristicdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Characteristicdescription_Order_By>>;
  where?: InputMaybe<Characteristicdescription_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageContesteffecteffecttextsArgs = {
  distinct_on?: InputMaybe<Array<Contesteffecteffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Contesteffecteffecttext_Order_By>>;
  where?: InputMaybe<Contesteffecteffecttext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageContesteffecteffecttexts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Contesteffecteffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Contesteffecteffecttext_Order_By>>;
  where?: InputMaybe<Contesteffecteffecttext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageContesteffectflavortextsArgs = {
  distinct_on?: InputMaybe<Array<Contesteffectflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Contesteffectflavortext_Order_By>>;
  where?: InputMaybe<Contesteffectflavortext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageContesteffectflavortexts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Contesteffectflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Contesteffectflavortext_Order_By>>;
  where?: InputMaybe<Contesteffectflavortext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageContesttypenamesArgs = {
  distinct_on?: InputMaybe<Array<Contesttypename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Contesttypename_Order_By>>;
  where?: InputMaybe<Contesttypename_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageContesttypenames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Contesttypename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Contesttypename_Order_By>>;
  where?: InputMaybe<Contesttypename_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageEgggroupnamesArgs = {
  distinct_on?: InputMaybe<Array<Egggroupname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Egggroupname_Order_By>>;
  where?: InputMaybe<Egggroupname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageEgggroupnames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Egggroupname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Egggroupname_Order_By>>;
  where?: InputMaybe<Egggroupname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageEncounterconditionnamesArgs = {
  distinct_on?: InputMaybe<Array<Encounterconditionname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Encounterconditionname_Order_By>>;
  where?: InputMaybe<Encounterconditionname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageEncounterconditionnames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Encounterconditionname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Encounterconditionname_Order_By>>;
  where?: InputMaybe<Encounterconditionname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageEncounterconditionvaluenamesArgs = {
  distinct_on?: InputMaybe<Array<Encounterconditionvaluename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Encounterconditionvaluename_Order_By>>;
  where?: InputMaybe<Encounterconditionvaluename_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageEncounterconditionvaluenames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Encounterconditionvaluename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Encounterconditionvaluename_Order_By>>;
  where?: InputMaybe<Encounterconditionvaluename_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageEncountermethodnamesArgs = {
  distinct_on?: InputMaybe<Array<Encountermethodname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Encountermethodname_Order_By>>;
  where?: InputMaybe<Encountermethodname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageEncountermethodnames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Encountermethodname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Encountermethodname_Order_By>>;
  where?: InputMaybe<Encountermethodname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageEvolutiontriggernamesArgs = {
  distinct_on?: InputMaybe<Array<Evolutiontriggername_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Evolutiontriggername_Order_By>>;
  where?: InputMaybe<Evolutiontriggername_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageEvolutiontriggernames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Evolutiontriggername_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Evolutiontriggername_Order_By>>;
  where?: InputMaybe<Evolutiontriggername_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageGenerationnamesArgs = {
  distinct_on?: InputMaybe<Array<Generationname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Generationname_Order_By>>;
  where?: InputMaybe<Generationname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageGenerationnames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Generationname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Generationname_Order_By>>;
  where?: InputMaybe<Generationname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageGrowthratedescriptionsArgs = {
  distinct_on?: InputMaybe<Array<Growthratedescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Growthratedescription_Order_By>>;
  where?: InputMaybe<Growthratedescription_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageGrowthratedescriptions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Growthratedescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Growthratedescription_Order_By>>;
  where?: InputMaybe<Growthratedescription_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageItemattributedescriptionsArgs = {
  distinct_on?: InputMaybe<Array<Itemattributedescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemattributedescription_Order_By>>;
  where?: InputMaybe<Itemattributedescription_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageItemattributedescriptions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Itemattributedescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemattributedescription_Order_By>>;
  where?: InputMaybe<Itemattributedescription_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageItemattributenamesArgs = {
  distinct_on?: InputMaybe<Array<Itemattributename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemattributename_Order_By>>;
  where?: InputMaybe<Itemattributename_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageItemattributenames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Itemattributename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemattributename_Order_By>>;
  where?: InputMaybe<Itemattributename_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageItemcategorynamesArgs = {
  distinct_on?: InputMaybe<Array<Itemcategoryname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemcategoryname_Order_By>>;
  where?: InputMaybe<Itemcategoryname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageItemcategorynames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Itemcategoryname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemcategoryname_Order_By>>;
  where?: InputMaybe<Itemcategoryname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageItemeffecttextsArgs = {
  distinct_on?: InputMaybe<Array<Itemeffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemeffecttext_Order_By>>;
  where?: InputMaybe<Itemeffecttext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageItemeffecttexts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Itemeffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemeffecttext_Order_By>>;
  where?: InputMaybe<Itemeffecttext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageItemflavortextsArgs = {
  distinct_on?: InputMaybe<Array<Itemflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemflavortext_Order_By>>;
  where?: InputMaybe<Itemflavortext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageItemflavortexts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Itemflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemflavortext_Order_By>>;
  where?: InputMaybe<Itemflavortext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageItemflingeffecteffecttextsArgs = {
  distinct_on?: InputMaybe<Array<Itemflingeffecteffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemflingeffecteffecttext_Order_By>>;
  where?: InputMaybe<Itemflingeffecteffecttext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageItemflingeffecteffecttexts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Itemflingeffecteffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemflingeffecteffecttext_Order_By>>;
  where?: InputMaybe<Itemflingeffecteffecttext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageItemnamesArgs = {
  distinct_on?: InputMaybe<Array<Itemname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemname_Order_By>>;
  where?: InputMaybe<Itemname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageItemnames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Itemname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemname_Order_By>>;
  where?: InputMaybe<Itemname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageItempocketnamesArgs = {
  distinct_on?: InputMaybe<Array<Itempocketname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itempocketname_Order_By>>;
  where?: InputMaybe<Itempocketname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageItempocketnames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Itempocketname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itempocketname_Order_By>>;
  where?: InputMaybe<Itempocketname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageLanguagenamesArgs = {
  distinct_on?: InputMaybe<Array<Languagename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Languagename_Order_By>>;
  where?: InputMaybe<Languagename_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageLanguagenames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Languagename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Languagename_Order_By>>;
  where?: InputMaybe<Languagename_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageLocationareanamesArgs = {
  distinct_on?: InputMaybe<Array<Locationareaname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Locationareaname_Order_By>>;
  where?: InputMaybe<Locationareaname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageLocationareanames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Locationareaname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Locationareaname_Order_By>>;
  where?: InputMaybe<Locationareaname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageLocationnamesArgs = {
  distinct_on?: InputMaybe<Array<Locationname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Locationname_Order_By>>;
  where?: InputMaybe<Locationname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageLocationnames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Locationname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Locationname_Order_By>>;
  where?: InputMaybe<Locationname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageMoveattributedescriptionsArgs = {
  distinct_on?: InputMaybe<Array<Moveattributedescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Moveattributedescription_Order_By>>;
  where?: InputMaybe<Moveattributedescription_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageMoveattributedescriptions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Moveattributedescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Moveattributedescription_Order_By>>;
  where?: InputMaybe<Moveattributedescription_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageMoveattributenamesArgs = {
  distinct_on?: InputMaybe<Array<Moveattributename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Moveattributename_Order_By>>;
  where?: InputMaybe<Moveattributename_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageMoveattributenames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Moveattributename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Moveattributename_Order_By>>;
  where?: InputMaybe<Moveattributename_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageMovebattlestylenamesArgs = {
  distinct_on?: InputMaybe<Array<Movebattlestylename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movebattlestylename_Order_By>>;
  where?: InputMaybe<Movebattlestylename_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageMovebattlestylenames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Movebattlestylename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movebattlestylename_Order_By>>;
  where?: InputMaybe<Movebattlestylename_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageMovedamageclassdescriptionsArgs = {
  distinct_on?: InputMaybe<Array<Movedamageclassdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movedamageclassdescription_Order_By>>;
  where?: InputMaybe<Movedamageclassdescription_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageMovedamageclassdescriptions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Movedamageclassdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movedamageclassdescription_Order_By>>;
  where?: InputMaybe<Movedamageclassdescription_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageMovedamageclassnamesArgs = {
  distinct_on?: InputMaybe<Array<Movedamageclassname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movedamageclassname_Order_By>>;
  where?: InputMaybe<Movedamageclassname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageMovedamageclassnames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Movedamageclassname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movedamageclassname_Order_By>>;
  where?: InputMaybe<Movedamageclassname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageMoveeffectchangeeffecttextsArgs = {
  distinct_on?: InputMaybe<Array<Moveeffectchangeeffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Moveeffectchangeeffecttext_Order_By>>;
  where?: InputMaybe<Moveeffectchangeeffecttext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageMoveeffectchangeeffecttexts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Moveeffectchangeeffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Moveeffectchangeeffecttext_Order_By>>;
  where?: InputMaybe<Moveeffectchangeeffecttext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageMoveeffecteffecttextsArgs = {
  distinct_on?: InputMaybe<Array<Moveeffecteffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Moveeffecteffecttext_Order_By>>;
  where?: InputMaybe<Moveeffecteffecttext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageMoveeffecteffecttexts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Moveeffecteffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Moveeffecteffecttext_Order_By>>;
  where?: InputMaybe<Moveeffecteffecttext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageMoveflavortextsArgs = {
  distinct_on?: InputMaybe<Array<Moveflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Moveflavortext_Order_By>>;
  where?: InputMaybe<Moveflavortext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageMoveflavortexts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Moveflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Moveflavortext_Order_By>>;
  where?: InputMaybe<Moveflavortext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageMovelearnmethoddescriptionsArgs = {
  distinct_on?: InputMaybe<Array<Movelearnmethoddescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movelearnmethoddescription_Order_By>>;
  where?: InputMaybe<Movelearnmethoddescription_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageMovelearnmethoddescriptions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Movelearnmethoddescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movelearnmethoddescription_Order_By>>;
  where?: InputMaybe<Movelearnmethoddescription_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageMovelearnmethodnamesArgs = {
  distinct_on?: InputMaybe<Array<Movelearnmethodname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movelearnmethodname_Order_By>>;
  where?: InputMaybe<Movelearnmethodname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageMovelearnmethodnames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Movelearnmethodname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movelearnmethodname_Order_By>>;
  where?: InputMaybe<Movelearnmethodname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageMovemetaailmentnamesArgs = {
  distinct_on?: InputMaybe<Array<Movemetaailmentname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movemetaailmentname_Order_By>>;
  where?: InputMaybe<Movemetaailmentname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageMovemetaailmentnames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Movemetaailmentname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movemetaailmentname_Order_By>>;
  where?: InputMaybe<Movemetaailmentname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageMovemetacategorydescriptionsArgs = {
  distinct_on?: InputMaybe<Array<Movemetacategorydescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movemetacategorydescription_Order_By>>;
  where?: InputMaybe<Movemetacategorydescription_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageMovemetacategorydescriptions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Movemetacategorydescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movemetacategorydescription_Order_By>>;
  where?: InputMaybe<Movemetacategorydescription_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageMovenamesArgs = {
  distinct_on?: InputMaybe<Array<Movename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movename_Order_By>>;
  where?: InputMaybe<Movename_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageMovenames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Movename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movename_Order_By>>;
  where?: InputMaybe<Movename_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageMovetargetdescriptionsArgs = {
  distinct_on?: InputMaybe<Array<Movetargetdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movetargetdescription_Order_By>>;
  where?: InputMaybe<Movetargetdescription_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageMovetargetdescriptions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Movetargetdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movetargetdescription_Order_By>>;
  where?: InputMaybe<Movetargetdescription_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageMovetargetnamesArgs = {
  distinct_on?: InputMaybe<Array<Movetargetname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movetargetname_Order_By>>;
  where?: InputMaybe<Movetargetname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageMovetargetnames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Movetargetname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movetargetname_Order_By>>;
  where?: InputMaybe<Movetargetname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageNaturenamesArgs = {
  distinct_on?: InputMaybe<Array<Naturename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Naturename_Order_By>>;
  where?: InputMaybe<Naturename_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageNaturenames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Naturename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Naturename_Order_By>>;
  where?: InputMaybe<Naturename_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguagePalparkareanamesArgs = {
  distinct_on?: InputMaybe<Array<Palparkareaname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Palparkareaname_Order_By>>;
  where?: InputMaybe<Palparkareaname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguagePalparkareanames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Palparkareaname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Palparkareaname_Order_By>>;
  where?: InputMaybe<Palparkareaname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguagePokeathlonstatnamesArgs = {
  distinct_on?: InputMaybe<Array<Pokeathlonstatname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokeathlonstatname_Order_By>>;
  where?: InputMaybe<Pokeathlonstatname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguagePokeathlonstatnames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokeathlonstatname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokeathlonstatname_Order_By>>;
  where?: InputMaybe<Pokeathlonstatname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguagePokedexdescriptionsArgs = {
  distinct_on?: InputMaybe<Array<Pokedexdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokedexdescription_Order_By>>;
  where?: InputMaybe<Pokedexdescription_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguagePokedexdescriptions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokedexdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokedexdescription_Order_By>>;
  where?: InputMaybe<Pokedexdescription_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguagePokedexnamesArgs = {
  distinct_on?: InputMaybe<Array<Pokedexname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokedexname_Order_By>>;
  where?: InputMaybe<Pokedexname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguagePokedexnames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokedexname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokedexname_Order_By>>;
  where?: InputMaybe<Pokedexname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguagePokemoncolornamesArgs = {
  distinct_on?: InputMaybe<Array<Pokemoncolorname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemoncolorname_Order_By>>;
  where?: InputMaybe<Pokemoncolorname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguagePokemoncolornames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemoncolorname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemoncolorname_Order_By>>;
  where?: InputMaybe<Pokemoncolorname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguagePokemonformnamesArgs = {
  distinct_on?: InputMaybe<Array<Pokemonformname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonformname_Order_By>>;
  where?: InputMaybe<Pokemonformname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguagePokemonformnames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonformname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonformname_Order_By>>;
  where?: InputMaybe<Pokemonformname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguagePokemonhabitatnamesArgs = {
  distinct_on?: InputMaybe<Array<Pokemonhabitatname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonhabitatname_Order_By>>;
  where?: InputMaybe<Pokemonhabitatname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguagePokemonhabitatnames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonhabitatname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonhabitatname_Order_By>>;
  where?: InputMaybe<Pokemonhabitatname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguagePokemonshapenamesArgs = {
  distinct_on?: InputMaybe<Array<Pokemonshapename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonshapename_Order_By>>;
  where?: InputMaybe<Pokemonshapename_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguagePokemonshapenames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonshapename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonshapename_Order_By>>;
  where?: InputMaybe<Pokemonshapename_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguagePokemonspeciesdescriptionsArgs = {
  distinct_on?: InputMaybe<Array<Pokemonspeciesdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonspeciesdescription_Order_By>>;
  where?: InputMaybe<Pokemonspeciesdescription_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguagePokemonspeciesdescriptions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonspeciesdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonspeciesdescription_Order_By>>;
  where?: InputMaybe<Pokemonspeciesdescription_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguagePokemonspeciesflavortextsArgs = {
  distinct_on?: InputMaybe<Array<Pokemonspeciesflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonspeciesflavortext_Order_By>>;
  where?: InputMaybe<Pokemonspeciesflavortext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguagePokemonspeciesflavortexts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonspeciesflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonspeciesflavortext_Order_By>>;
  where?: InputMaybe<Pokemonspeciesflavortext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguagePokemonspeciesnamesArgs = {
  distinct_on?: InputMaybe<Array<Pokemonspeciesname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonspeciesname_Order_By>>;
  where?: InputMaybe<Pokemonspeciesname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguagePokemonspeciesnames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonspeciesname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonspeciesname_Order_By>>;
  where?: InputMaybe<Pokemonspeciesname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageRegionnamesArgs = {
  distinct_on?: InputMaybe<Array<Regionname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Regionname_Order_By>>;
  where?: InputMaybe<Regionname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageRegionnames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Regionname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Regionname_Order_By>>;
  where?: InputMaybe<Regionname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageStatnamesArgs = {
  distinct_on?: InputMaybe<Array<Statname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Statname_Order_By>>;
  where?: InputMaybe<Statname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageStatnames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Statname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Statname_Order_By>>;
  where?: InputMaybe<Statname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageSupercontesteffectflavortextsArgs = {
  distinct_on?: InputMaybe<Array<Supercontesteffectflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Supercontesteffectflavortext_Order_By>>;
  where?: InputMaybe<Supercontesteffectflavortext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageSupercontesteffectflavortexts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Supercontesteffectflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Supercontesteffectflavortext_Order_By>>;
  where?: InputMaybe<Supercontesteffectflavortext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageTypenamesArgs = {
  distinct_on?: InputMaybe<Array<Typename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Typename_Order_By>>;
  where?: InputMaybe<Typename_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageTypenames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Typename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Typename_Order_By>>;
  where?: InputMaybe<Typename_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageVersionnamesArgs = {
  distinct_on?: InputMaybe<Array<Versionname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Versionname_Order_By>>;
  where?: InputMaybe<Versionname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_language" */
export type LanguageVersionnames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Versionname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Versionname_Order_By>>;
  where?: InputMaybe<Versionname_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_language" */
export type Language_Aggregate = {
  __typename?: 'language_aggregate';
  aggregate?: Maybe<Language_Aggregate_Fields>;
  nodes: Array<Language>;
};

/** aggregate fields of "pokemon_v2_language" */
export type Language_Aggregate_Fields = {
  __typename?: 'language_aggregate_fields';
  avg?: Maybe<Language_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Language_Max_Fields>;
  min?: Maybe<Language_Min_Fields>;
  stddev?: Maybe<Language_Stddev_Fields>;
  stddev_pop?: Maybe<Language_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Language_Stddev_Samp_Fields>;
  sum?: Maybe<Language_Sum_Fields>;
  var_pop?: Maybe<Language_Var_Pop_Fields>;
  var_samp?: Maybe<Language_Var_Samp_Fields>;
  variance?: Maybe<Language_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_language" */
export type Language_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Language_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Language_Avg_Fields = {
  __typename?: 'language_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_language". All fields are combined with a logical 'AND'. */
export type Language_Bool_Exp = {
  LanguagenamesByLocalLanguageId?: InputMaybe<Languagename_Bool_Exp>;
  LanguagenamesByLocalLanguageId_aggregate?: InputMaybe<Languagename_Aggregate_Bool_Exp>;
  _and?: InputMaybe<Array<Language_Bool_Exp>>;
  _not?: InputMaybe<Language_Bool_Exp>;
  _or?: InputMaybe<Array<Language_Bool_Exp>>;
  abilitychangeeffecttexts?: InputMaybe<Abilitychangeeffecttext_Bool_Exp>;
  abilitychangeeffecttexts_aggregate?: InputMaybe<Abilitychangeeffecttext_Aggregate_Bool_Exp>;
  abilityeffecttexts?: InputMaybe<Abilityeffecttext_Bool_Exp>;
  abilityeffecttexts_aggregate?: InputMaybe<Abilityeffecttext_Aggregate_Bool_Exp>;
  abilityflavortexts?: InputMaybe<Abilityflavortext_Bool_Exp>;
  abilityflavortexts_aggregate?: InputMaybe<Abilityflavortext_Aggregate_Bool_Exp>;
  abilitynames?: InputMaybe<Abilityname_Bool_Exp>;
  abilitynames_aggregate?: InputMaybe<Abilityname_Aggregate_Bool_Exp>;
  berryfirmnessnames?: InputMaybe<Berryfirmnessname_Bool_Exp>;
  berryfirmnessnames_aggregate?: InputMaybe<Berryfirmnessname_Aggregate_Bool_Exp>;
  berryflavornames?: InputMaybe<Berryflavorname_Bool_Exp>;
  berryflavornames_aggregate?: InputMaybe<Berryflavorname_Aggregate_Bool_Exp>;
  characteristicdescriptions?: InputMaybe<Characteristicdescription_Bool_Exp>;
  characteristicdescriptions_aggregate?: InputMaybe<Characteristicdescription_Aggregate_Bool_Exp>;
  contesteffecteffecttexts?: InputMaybe<Contesteffecteffecttext_Bool_Exp>;
  contesteffecteffecttexts_aggregate?: InputMaybe<Contesteffecteffecttext_Aggregate_Bool_Exp>;
  contesteffectflavortexts?: InputMaybe<Contesteffectflavortext_Bool_Exp>;
  contesteffectflavortexts_aggregate?: InputMaybe<Contesteffectflavortext_Aggregate_Bool_Exp>;
  contesttypenames?: InputMaybe<Contesttypename_Bool_Exp>;
  contesttypenames_aggregate?: InputMaybe<Contesttypename_Aggregate_Bool_Exp>;
  egggroupnames?: InputMaybe<Egggroupname_Bool_Exp>;
  egggroupnames_aggregate?: InputMaybe<Egggroupname_Aggregate_Bool_Exp>;
  encounterconditionnames?: InputMaybe<Encounterconditionname_Bool_Exp>;
  encounterconditionnames_aggregate?: InputMaybe<Encounterconditionname_Aggregate_Bool_Exp>;
  encounterconditionvaluenames?: InputMaybe<Encounterconditionvaluename_Bool_Exp>;
  encounterconditionvaluenames_aggregate?: InputMaybe<Encounterconditionvaluename_Aggregate_Bool_Exp>;
  encountermethodnames?: InputMaybe<Encountermethodname_Bool_Exp>;
  encountermethodnames_aggregate?: InputMaybe<Encountermethodname_Aggregate_Bool_Exp>;
  evolutiontriggernames?: InputMaybe<Evolutiontriggername_Bool_Exp>;
  evolutiontriggernames_aggregate?: InputMaybe<Evolutiontriggername_Aggregate_Bool_Exp>;
  generationnames?: InputMaybe<Generationname_Bool_Exp>;
  generationnames_aggregate?: InputMaybe<Generationname_Aggregate_Bool_Exp>;
  growthratedescriptions?: InputMaybe<Growthratedescription_Bool_Exp>;
  growthratedescriptions_aggregate?: InputMaybe<Growthratedescription_Aggregate_Bool_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  iso639?: InputMaybe<String_Comparison_Exp>;
  iso3166?: InputMaybe<String_Comparison_Exp>;
  itemattributedescriptions?: InputMaybe<Itemattributedescription_Bool_Exp>;
  itemattributedescriptions_aggregate?: InputMaybe<Itemattributedescription_Aggregate_Bool_Exp>;
  itemattributenames?: InputMaybe<Itemattributename_Bool_Exp>;
  itemattributenames_aggregate?: InputMaybe<Itemattributename_Aggregate_Bool_Exp>;
  itemcategorynames?: InputMaybe<Itemcategoryname_Bool_Exp>;
  itemcategorynames_aggregate?: InputMaybe<Itemcategoryname_Aggregate_Bool_Exp>;
  itemeffecttexts?: InputMaybe<Itemeffecttext_Bool_Exp>;
  itemeffecttexts_aggregate?: InputMaybe<Itemeffecttext_Aggregate_Bool_Exp>;
  itemflavortexts?: InputMaybe<Itemflavortext_Bool_Exp>;
  itemflavortexts_aggregate?: InputMaybe<Itemflavortext_Aggregate_Bool_Exp>;
  itemflingeffecteffecttexts?: InputMaybe<Itemflingeffecteffecttext_Bool_Exp>;
  itemflingeffecteffecttexts_aggregate?: InputMaybe<Itemflingeffecteffecttext_Aggregate_Bool_Exp>;
  itemnames?: InputMaybe<Itemname_Bool_Exp>;
  itemnames_aggregate?: InputMaybe<Itemname_Aggregate_Bool_Exp>;
  itempocketnames?: InputMaybe<Itempocketname_Bool_Exp>;
  itempocketnames_aggregate?: InputMaybe<Itempocketname_Aggregate_Bool_Exp>;
  languagenames?: InputMaybe<Languagename_Bool_Exp>;
  languagenames_aggregate?: InputMaybe<Languagename_Aggregate_Bool_Exp>;
  locationareanames?: InputMaybe<Locationareaname_Bool_Exp>;
  locationareanames_aggregate?: InputMaybe<Locationareaname_Aggregate_Bool_Exp>;
  locationnames?: InputMaybe<Locationname_Bool_Exp>;
  locationnames_aggregate?: InputMaybe<Locationname_Aggregate_Bool_Exp>;
  moveattributedescriptions?: InputMaybe<Moveattributedescription_Bool_Exp>;
  moveattributedescriptions_aggregate?: InputMaybe<Moveattributedescription_Aggregate_Bool_Exp>;
  moveattributenames?: InputMaybe<Moveattributename_Bool_Exp>;
  moveattributenames_aggregate?: InputMaybe<Moveattributename_Aggregate_Bool_Exp>;
  movebattlestylenames?: InputMaybe<Movebattlestylename_Bool_Exp>;
  movebattlestylenames_aggregate?: InputMaybe<Movebattlestylename_Aggregate_Bool_Exp>;
  movedamageclassdescriptions?: InputMaybe<Movedamageclassdescription_Bool_Exp>;
  movedamageclassdescriptions_aggregate?: InputMaybe<Movedamageclassdescription_Aggregate_Bool_Exp>;
  movedamageclassnames?: InputMaybe<Movedamageclassname_Bool_Exp>;
  movedamageclassnames_aggregate?: InputMaybe<Movedamageclassname_Aggregate_Bool_Exp>;
  moveeffectchangeeffecttexts?: InputMaybe<Moveeffectchangeeffecttext_Bool_Exp>;
  moveeffectchangeeffecttexts_aggregate?: InputMaybe<Moveeffectchangeeffecttext_Aggregate_Bool_Exp>;
  moveeffecteffecttexts?: InputMaybe<Moveeffecteffecttext_Bool_Exp>;
  moveeffecteffecttexts_aggregate?: InputMaybe<Moveeffecteffecttext_Aggregate_Bool_Exp>;
  moveflavortexts?: InputMaybe<Moveflavortext_Bool_Exp>;
  moveflavortexts_aggregate?: InputMaybe<Moveflavortext_Aggregate_Bool_Exp>;
  movelearnmethoddescriptions?: InputMaybe<Movelearnmethoddescription_Bool_Exp>;
  movelearnmethoddescriptions_aggregate?: InputMaybe<Movelearnmethoddescription_Aggregate_Bool_Exp>;
  movelearnmethodnames?: InputMaybe<Movelearnmethodname_Bool_Exp>;
  movelearnmethodnames_aggregate?: InputMaybe<Movelearnmethodname_Aggregate_Bool_Exp>;
  movemetaailmentnames?: InputMaybe<Movemetaailmentname_Bool_Exp>;
  movemetaailmentnames_aggregate?: InputMaybe<Movemetaailmentname_Aggregate_Bool_Exp>;
  movemetacategorydescriptions?: InputMaybe<Movemetacategorydescription_Bool_Exp>;
  movemetacategorydescriptions_aggregate?: InputMaybe<Movemetacategorydescription_Aggregate_Bool_Exp>;
  movenames?: InputMaybe<Movename_Bool_Exp>;
  movenames_aggregate?: InputMaybe<Movename_Aggregate_Bool_Exp>;
  movetargetdescriptions?: InputMaybe<Movetargetdescription_Bool_Exp>;
  movetargetdescriptions_aggregate?: InputMaybe<Movetargetdescription_Aggregate_Bool_Exp>;
  movetargetnames?: InputMaybe<Movetargetname_Bool_Exp>;
  movetargetnames_aggregate?: InputMaybe<Movetargetname_Aggregate_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  naturenames?: InputMaybe<Naturename_Bool_Exp>;
  naturenames_aggregate?: InputMaybe<Naturename_Aggregate_Bool_Exp>;
  official?: InputMaybe<Boolean_Comparison_Exp>;
  order?: InputMaybe<Int_Comparison_Exp>;
  palparkareanames?: InputMaybe<Palparkareaname_Bool_Exp>;
  palparkareanames_aggregate?: InputMaybe<Palparkareaname_Aggregate_Bool_Exp>;
  pokeathlonstatnames?: InputMaybe<Pokeathlonstatname_Bool_Exp>;
  pokeathlonstatnames_aggregate?: InputMaybe<Pokeathlonstatname_Aggregate_Bool_Exp>;
  pokedexdescriptions?: InputMaybe<Pokedexdescription_Bool_Exp>;
  pokedexdescriptions_aggregate?: InputMaybe<Pokedexdescription_Aggregate_Bool_Exp>;
  pokedexnames?: InputMaybe<Pokedexname_Bool_Exp>;
  pokedexnames_aggregate?: InputMaybe<Pokedexname_Aggregate_Bool_Exp>;
  pokemoncolornames?: InputMaybe<Pokemoncolorname_Bool_Exp>;
  pokemoncolornames_aggregate?: InputMaybe<Pokemoncolorname_Aggregate_Bool_Exp>;
  pokemonformnames?: InputMaybe<Pokemonformname_Bool_Exp>;
  pokemonformnames_aggregate?: InputMaybe<Pokemonformname_Aggregate_Bool_Exp>;
  pokemonhabitatnames?: InputMaybe<Pokemonhabitatname_Bool_Exp>;
  pokemonhabitatnames_aggregate?: InputMaybe<Pokemonhabitatname_Aggregate_Bool_Exp>;
  pokemonshapenames?: InputMaybe<Pokemonshapename_Bool_Exp>;
  pokemonshapenames_aggregate?: InputMaybe<Pokemonshapename_Aggregate_Bool_Exp>;
  pokemonspeciesdescriptions?: InputMaybe<Pokemonspeciesdescription_Bool_Exp>;
  pokemonspeciesdescriptions_aggregate?: InputMaybe<Pokemonspeciesdescription_Aggregate_Bool_Exp>;
  pokemonspeciesflavortexts?: InputMaybe<Pokemonspeciesflavortext_Bool_Exp>;
  pokemonspeciesflavortexts_aggregate?: InputMaybe<Pokemonspeciesflavortext_Aggregate_Bool_Exp>;
  pokemonspeciesnames?: InputMaybe<Pokemonspeciesname_Bool_Exp>;
  pokemonspeciesnames_aggregate?: InputMaybe<Pokemonspeciesname_Aggregate_Bool_Exp>;
  regionnames?: InputMaybe<Regionname_Bool_Exp>;
  regionnames_aggregate?: InputMaybe<Regionname_Aggregate_Bool_Exp>;
  statnames?: InputMaybe<Statname_Bool_Exp>;
  statnames_aggregate?: InputMaybe<Statname_Aggregate_Bool_Exp>;
  supercontesteffectflavortexts?: InputMaybe<Supercontesteffectflavortext_Bool_Exp>;
  supercontesteffectflavortexts_aggregate?: InputMaybe<Supercontesteffectflavortext_Aggregate_Bool_Exp>;
  typenames?: InputMaybe<Typename_Bool_Exp>;
  typenames_aggregate?: InputMaybe<Typename_Aggregate_Bool_Exp>;
  versionnames?: InputMaybe<Versionname_Bool_Exp>;
  versionnames_aggregate?: InputMaybe<Versionname_Aggregate_Bool_Exp>;
};

/** aggregate max on columns */
export type Language_Max_Fields = {
  __typename?: 'language_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  iso639?: Maybe<Scalars['String']['output']>;
  iso3166?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Language_Min_Fields = {
  __typename?: 'language_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  iso639?: Maybe<Scalars['String']['output']>;
  iso3166?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
};

/** Ordering options when selecting data from "pokemon_v2_language". */
export type Language_Order_By = {
  LanguagenamesByLocalLanguageId_aggregate?: InputMaybe<Languagename_Aggregate_Order_By>;
  abilitychangeeffecttexts_aggregate?: InputMaybe<Abilitychangeeffecttext_Aggregate_Order_By>;
  abilityeffecttexts_aggregate?: InputMaybe<Abilityeffecttext_Aggregate_Order_By>;
  abilityflavortexts_aggregate?: InputMaybe<Abilityflavortext_Aggregate_Order_By>;
  abilitynames_aggregate?: InputMaybe<Abilityname_Aggregate_Order_By>;
  berryfirmnessnames_aggregate?: InputMaybe<Berryfirmnessname_Aggregate_Order_By>;
  berryflavornames_aggregate?: InputMaybe<Berryflavorname_Aggregate_Order_By>;
  characteristicdescriptions_aggregate?: InputMaybe<Characteristicdescription_Aggregate_Order_By>;
  contesteffecteffecttexts_aggregate?: InputMaybe<Contesteffecteffecttext_Aggregate_Order_By>;
  contesteffectflavortexts_aggregate?: InputMaybe<Contesteffectflavortext_Aggregate_Order_By>;
  contesttypenames_aggregate?: InputMaybe<Contesttypename_Aggregate_Order_By>;
  egggroupnames_aggregate?: InputMaybe<Egggroupname_Aggregate_Order_By>;
  encounterconditionnames_aggregate?: InputMaybe<Encounterconditionname_Aggregate_Order_By>;
  encounterconditionvaluenames_aggregate?: InputMaybe<Encounterconditionvaluename_Aggregate_Order_By>;
  encountermethodnames_aggregate?: InputMaybe<Encountermethodname_Aggregate_Order_By>;
  evolutiontriggernames_aggregate?: InputMaybe<Evolutiontriggername_Aggregate_Order_By>;
  generationnames_aggregate?: InputMaybe<Generationname_Aggregate_Order_By>;
  growthratedescriptions_aggregate?: InputMaybe<Growthratedescription_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  iso639?: InputMaybe<Order_By>;
  iso3166?: InputMaybe<Order_By>;
  itemattributedescriptions_aggregate?: InputMaybe<Itemattributedescription_Aggregate_Order_By>;
  itemattributenames_aggregate?: InputMaybe<Itemattributename_Aggregate_Order_By>;
  itemcategorynames_aggregate?: InputMaybe<Itemcategoryname_Aggregate_Order_By>;
  itemeffecttexts_aggregate?: InputMaybe<Itemeffecttext_Aggregate_Order_By>;
  itemflavortexts_aggregate?: InputMaybe<Itemflavortext_Aggregate_Order_By>;
  itemflingeffecteffecttexts_aggregate?: InputMaybe<Itemflingeffecteffecttext_Aggregate_Order_By>;
  itemnames_aggregate?: InputMaybe<Itemname_Aggregate_Order_By>;
  itempocketnames_aggregate?: InputMaybe<Itempocketname_Aggregate_Order_By>;
  languagenames_aggregate?: InputMaybe<Languagename_Aggregate_Order_By>;
  locationareanames_aggregate?: InputMaybe<Locationareaname_Aggregate_Order_By>;
  locationnames_aggregate?: InputMaybe<Locationname_Aggregate_Order_By>;
  moveattributedescriptions_aggregate?: InputMaybe<Moveattributedescription_Aggregate_Order_By>;
  moveattributenames_aggregate?: InputMaybe<Moveattributename_Aggregate_Order_By>;
  movebattlestylenames_aggregate?: InputMaybe<Movebattlestylename_Aggregate_Order_By>;
  movedamageclassdescriptions_aggregate?: InputMaybe<Movedamageclassdescription_Aggregate_Order_By>;
  movedamageclassnames_aggregate?: InputMaybe<Movedamageclassname_Aggregate_Order_By>;
  moveeffectchangeeffecttexts_aggregate?: InputMaybe<Moveeffectchangeeffecttext_Aggregate_Order_By>;
  moveeffecteffecttexts_aggregate?: InputMaybe<Moveeffecteffecttext_Aggregate_Order_By>;
  moveflavortexts_aggregate?: InputMaybe<Moveflavortext_Aggregate_Order_By>;
  movelearnmethoddescriptions_aggregate?: InputMaybe<Movelearnmethoddescription_Aggregate_Order_By>;
  movelearnmethodnames_aggregate?: InputMaybe<Movelearnmethodname_Aggregate_Order_By>;
  movemetaailmentnames_aggregate?: InputMaybe<Movemetaailmentname_Aggregate_Order_By>;
  movemetacategorydescriptions_aggregate?: InputMaybe<Movemetacategorydescription_Aggregate_Order_By>;
  movenames_aggregate?: InputMaybe<Movename_Aggregate_Order_By>;
  movetargetdescriptions_aggregate?: InputMaybe<Movetargetdescription_Aggregate_Order_By>;
  movetargetnames_aggregate?: InputMaybe<Movetargetname_Aggregate_Order_By>;
  name?: InputMaybe<Order_By>;
  naturenames_aggregate?: InputMaybe<Naturename_Aggregate_Order_By>;
  official?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  palparkareanames_aggregate?: InputMaybe<Palparkareaname_Aggregate_Order_By>;
  pokeathlonstatnames_aggregate?: InputMaybe<Pokeathlonstatname_Aggregate_Order_By>;
  pokedexdescriptions_aggregate?: InputMaybe<Pokedexdescription_Aggregate_Order_By>;
  pokedexnames_aggregate?: InputMaybe<Pokedexname_Aggregate_Order_By>;
  pokemoncolornames_aggregate?: InputMaybe<Pokemoncolorname_Aggregate_Order_By>;
  pokemonformnames_aggregate?: InputMaybe<Pokemonformname_Aggregate_Order_By>;
  pokemonhabitatnames_aggregate?: InputMaybe<Pokemonhabitatname_Aggregate_Order_By>;
  pokemonshapenames_aggregate?: InputMaybe<Pokemonshapename_Aggregate_Order_By>;
  pokemonspeciesdescriptions_aggregate?: InputMaybe<Pokemonspeciesdescription_Aggregate_Order_By>;
  pokemonspeciesflavortexts_aggregate?: InputMaybe<Pokemonspeciesflavortext_Aggregate_Order_By>;
  pokemonspeciesnames_aggregate?: InputMaybe<Pokemonspeciesname_Aggregate_Order_By>;
  regionnames_aggregate?: InputMaybe<Regionname_Aggregate_Order_By>;
  statnames_aggregate?: InputMaybe<Statname_Aggregate_Order_By>;
  supercontesteffectflavortexts_aggregate?: InputMaybe<Supercontesteffectflavortext_Aggregate_Order_By>;
  typenames_aggregate?: InputMaybe<Typename_Aggregate_Order_By>;
  versionnames_aggregate?: InputMaybe<Versionname_Aggregate_Order_By>;
};

/** select columns of table "pokemon_v2_language" */
export enum Language_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Iso639 = 'iso639',
  /** column name */
  Iso3166 = 'iso3166',
  /** column name */
  Name = 'name',
  /** column name */
  Official = 'official',
  /** column name */
  Order = 'order'
}

/** aggregate stddev on columns */
export type Language_Stddev_Fields = {
  __typename?: 'language_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Language_Stddev_Pop_Fields = {
  __typename?: 'language_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Language_Stddev_Samp_Fields = {
  __typename?: 'language_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

/** aggregate sum on columns */
export type Language_Sum_Fields = {
  __typename?: 'language_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
};

/** aggregate var_pop on columns */
export type Language_Var_Pop_Fields = {
  __typename?: 'language_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Language_Var_Samp_Fields = {
  __typename?: 'language_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Language_Variance_Fields = {
  __typename?: 'language_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_languagename" */
export type Languagename = {
  __typename?: 'languagename';
  /** An object relationship */
  LanguageByLocalLanguageId?: Maybe<Language>;
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  local_language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_languagename" */
export type Languagename_Aggregate = {
  __typename?: 'languagename_aggregate';
  aggregate?: Maybe<Languagename_Aggregate_Fields>;
  nodes: Array<Languagename>;
};

export type Languagename_Aggregate_Bool_Exp = {
  count?: InputMaybe<Languagename_Aggregate_Bool_Exp_Count>;
};

export type Languagename_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Languagename_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Languagename_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_languagename" */
export type Languagename_Aggregate_Fields = {
  __typename?: 'languagename_aggregate_fields';
  avg?: Maybe<Languagename_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Languagename_Max_Fields>;
  min?: Maybe<Languagename_Min_Fields>;
  stddev?: Maybe<Languagename_Stddev_Fields>;
  stddev_pop?: Maybe<Languagename_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Languagename_Stddev_Samp_Fields>;
  sum?: Maybe<Languagename_Sum_Fields>;
  var_pop?: Maybe<Languagename_Var_Pop_Fields>;
  var_samp?: Maybe<Languagename_Var_Samp_Fields>;
  variance?: Maybe<Languagename_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_languagename" */
export type Languagename_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Languagename_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_languagename" */
export type Languagename_Aggregate_Order_By = {
  avg?: InputMaybe<Languagename_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Languagename_Max_Order_By>;
  min?: InputMaybe<Languagename_Min_Order_By>;
  stddev?: InputMaybe<Languagename_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Languagename_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Languagename_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Languagename_Sum_Order_By>;
  var_pop?: InputMaybe<Languagename_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Languagename_Var_Samp_Order_By>;
  variance?: InputMaybe<Languagename_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Languagename_Avg_Fields = {
  __typename?: 'languagename_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  local_language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_languagename" */
export type Languagename_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  local_language_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_languagename". All fields are combined with a logical 'AND'. */
export type Languagename_Bool_Exp = {
  LanguageByLocalLanguageId?: InputMaybe<Language_Bool_Exp>;
  _and?: InputMaybe<Array<Languagename_Bool_Exp>>;
  _not?: InputMaybe<Languagename_Bool_Exp>;
  _or?: InputMaybe<Array<Languagename_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  local_language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** aggregate max on columns */
export type Languagename_Max_Fields = {
  __typename?: 'languagename_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  local_language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "pokemon_v2_languagename" */
export type Languagename_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  local_language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Languagename_Min_Fields = {
  __typename?: 'languagename_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  local_language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "pokemon_v2_languagename" */
export type Languagename_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  local_language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_languagename". */
export type Languagename_Order_By = {
  LanguageByLocalLanguageId?: InputMaybe<Language_Order_By>;
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  local_language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_languagename" */
export enum Languagename_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  LocalLanguageId = 'local_language_id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Languagename_Stddev_Fields = {
  __typename?: 'languagename_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  local_language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_languagename" */
export type Languagename_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  local_language_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Languagename_Stddev_Pop_Fields = {
  __typename?: 'languagename_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  local_language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_languagename" */
export type Languagename_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  local_language_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Languagename_Stddev_Samp_Fields = {
  __typename?: 'languagename_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  local_language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_languagename" */
export type Languagename_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  local_language_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Languagename_Sum_Fields = {
  __typename?: 'languagename_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  local_language_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_languagename" */
export type Languagename_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  local_language_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Languagename_Var_Pop_Fields = {
  __typename?: 'languagename_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  local_language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_languagename" */
export type Languagename_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  local_language_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Languagename_Var_Samp_Fields = {
  __typename?: 'languagename_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  local_language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_languagename" */
export type Languagename_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  local_language_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Languagename_Variance_Fields = {
  __typename?: 'languagename_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  local_language_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_languagename" */
export type Languagename_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  local_language_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_location" */
export type Location = {
  __typename?: 'location';
  id: Scalars['Int']['output'];
  /** An array relationship */
  locationareas: Array<Locationarea>;
  /** An aggregate relationship */
  locationareas_aggregate: Locationarea_Aggregate;
  /** An array relationship */
  locationgameindices: Array<Locationgameindex>;
  /** An aggregate relationship */
  locationgameindices_aggregate: Locationgameindex_Aggregate;
  /** An array relationship */
  locationnames: Array<Locationname>;
  /** An aggregate relationship */
  locationnames_aggregate: Locationname_Aggregate;
  name: Scalars['String']['output'];
  /** An array relationship */
  pokemonevolutions: Array<Pokemonevolution>;
  /** An aggregate relationship */
  pokemonevolutions_aggregate: Pokemonevolution_Aggregate;
  /** An object relationship */
  region?: Maybe<Region>;
  region_id?: Maybe<Scalars['Int']['output']>;
};


/** columns and relationships of "pokemon_v2_location" */
export type LocationLocationareasArgs = {
  distinct_on?: InputMaybe<Array<Locationarea_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Locationarea_Order_By>>;
  where?: InputMaybe<Locationarea_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_location" */
export type LocationLocationareas_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Locationarea_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Locationarea_Order_By>>;
  where?: InputMaybe<Locationarea_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_location" */
export type LocationLocationgameindicesArgs = {
  distinct_on?: InputMaybe<Array<Locationgameindex_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Locationgameindex_Order_By>>;
  where?: InputMaybe<Locationgameindex_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_location" */
export type LocationLocationgameindices_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Locationgameindex_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Locationgameindex_Order_By>>;
  where?: InputMaybe<Locationgameindex_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_location" */
export type LocationLocationnamesArgs = {
  distinct_on?: InputMaybe<Array<Locationname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Locationname_Order_By>>;
  where?: InputMaybe<Locationname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_location" */
export type LocationLocationnames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Locationname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Locationname_Order_By>>;
  where?: InputMaybe<Locationname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_location" */
export type LocationPokemonevolutionsArgs = {
  distinct_on?: InputMaybe<Array<Pokemonevolution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonevolution_Order_By>>;
  where?: InputMaybe<Pokemonevolution_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_location" */
export type LocationPokemonevolutions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonevolution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonevolution_Order_By>>;
  where?: InputMaybe<Pokemonevolution_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_location" */
export type Location_Aggregate = {
  __typename?: 'location_aggregate';
  aggregate?: Maybe<Location_Aggregate_Fields>;
  nodes: Array<Location>;
};

export type Location_Aggregate_Bool_Exp = {
  count?: InputMaybe<Location_Aggregate_Bool_Exp_Count>;
};

export type Location_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Location_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Location_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_location" */
export type Location_Aggregate_Fields = {
  __typename?: 'location_aggregate_fields';
  avg?: Maybe<Location_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Location_Max_Fields>;
  min?: Maybe<Location_Min_Fields>;
  stddev?: Maybe<Location_Stddev_Fields>;
  stddev_pop?: Maybe<Location_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Location_Stddev_Samp_Fields>;
  sum?: Maybe<Location_Sum_Fields>;
  var_pop?: Maybe<Location_Var_Pop_Fields>;
  var_samp?: Maybe<Location_Var_Samp_Fields>;
  variance?: Maybe<Location_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_location" */
export type Location_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Location_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_location" */
export type Location_Aggregate_Order_By = {
  avg?: InputMaybe<Location_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Location_Max_Order_By>;
  min?: InputMaybe<Location_Min_Order_By>;
  stddev?: InputMaybe<Location_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Location_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Location_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Location_Sum_Order_By>;
  var_pop?: InputMaybe<Location_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Location_Var_Samp_Order_By>;
  variance?: InputMaybe<Location_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Location_Avg_Fields = {
  __typename?: 'location_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_location" */
export type Location_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_location". All fields are combined with a logical 'AND'. */
export type Location_Bool_Exp = {
  _and?: InputMaybe<Array<Location_Bool_Exp>>;
  _not?: InputMaybe<Location_Bool_Exp>;
  _or?: InputMaybe<Array<Location_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  locationareas?: InputMaybe<Locationarea_Bool_Exp>;
  locationareas_aggregate?: InputMaybe<Locationarea_Aggregate_Bool_Exp>;
  locationgameindices?: InputMaybe<Locationgameindex_Bool_Exp>;
  locationgameindices_aggregate?: InputMaybe<Locationgameindex_Aggregate_Bool_Exp>;
  locationnames?: InputMaybe<Locationname_Bool_Exp>;
  locationnames_aggregate?: InputMaybe<Locationname_Aggregate_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  pokemonevolutions?: InputMaybe<Pokemonevolution_Bool_Exp>;
  pokemonevolutions_aggregate?: InputMaybe<Pokemonevolution_Aggregate_Bool_Exp>;
  region?: InputMaybe<Region_Bool_Exp>;
  region_id?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Location_Max_Fields = {
  __typename?: 'location_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  region_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_location" */
export type Location_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Location_Min_Fields = {
  __typename?: 'location_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  region_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_location" */
export type Location_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_location". */
export type Location_Order_By = {
  id?: InputMaybe<Order_By>;
  locationareas_aggregate?: InputMaybe<Locationarea_Aggregate_Order_By>;
  locationgameindices_aggregate?: InputMaybe<Locationgameindex_Aggregate_Order_By>;
  locationnames_aggregate?: InputMaybe<Locationname_Aggregate_Order_By>;
  name?: InputMaybe<Order_By>;
  pokemonevolutions_aggregate?: InputMaybe<Pokemonevolution_Aggregate_Order_By>;
  region?: InputMaybe<Region_Order_By>;
  region_id?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_location" */
export enum Location_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  RegionId = 'region_id'
}

/** aggregate stddev on columns */
export type Location_Stddev_Fields = {
  __typename?: 'location_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_location" */
export type Location_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Location_Stddev_Pop_Fields = {
  __typename?: 'location_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_location" */
export type Location_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Location_Stddev_Samp_Fields = {
  __typename?: 'location_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_location" */
export type Location_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Location_Sum_Fields = {
  __typename?: 'location_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  region_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_location" */
export type Location_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Location_Var_Pop_Fields = {
  __typename?: 'location_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_location" */
export type Location_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Location_Var_Samp_Fields = {
  __typename?: 'location_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_location" */
export type Location_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Location_Variance_Fields = {
  __typename?: 'location_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_location" */
export type Location_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_locationarea" */
export type Locationarea = {
  __typename?: 'locationarea';
  /** An array relationship */
  encounters: Array<Encounter>;
  /** An aggregate relationship */
  encounters_aggregate: Encounter_Aggregate;
  game_index: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  /** An object relationship */
  location?: Maybe<Location>;
  location_id?: Maybe<Scalars['Int']['output']>;
  /** An array relationship */
  locationareaencounterrates: Array<Locationareaencounterrate>;
  /** An aggregate relationship */
  locationareaencounterrates_aggregate: Locationareaencounterrate_Aggregate;
  /** An array relationship */
  locationareanames: Array<Locationareaname>;
  /** An aggregate relationship */
  locationareanames_aggregate: Locationareaname_Aggregate;
  name: Scalars['String']['output'];
};


/** columns and relationships of "pokemon_v2_locationarea" */
export type LocationareaEncountersArgs = {
  distinct_on?: InputMaybe<Array<Encounter_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Encounter_Order_By>>;
  where?: InputMaybe<Encounter_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_locationarea" */
export type LocationareaEncounters_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Encounter_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Encounter_Order_By>>;
  where?: InputMaybe<Encounter_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_locationarea" */
export type LocationareaLocationareaencounterratesArgs = {
  distinct_on?: InputMaybe<Array<Locationareaencounterrate_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Locationareaencounterrate_Order_By>>;
  where?: InputMaybe<Locationareaencounterrate_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_locationarea" */
export type LocationareaLocationareaencounterrates_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Locationareaencounterrate_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Locationareaencounterrate_Order_By>>;
  where?: InputMaybe<Locationareaencounterrate_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_locationarea" */
export type LocationareaLocationareanamesArgs = {
  distinct_on?: InputMaybe<Array<Locationareaname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Locationareaname_Order_By>>;
  where?: InputMaybe<Locationareaname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_locationarea" */
export type LocationareaLocationareanames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Locationareaname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Locationareaname_Order_By>>;
  where?: InputMaybe<Locationareaname_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_locationarea" */
export type Locationarea_Aggregate = {
  __typename?: 'locationarea_aggregate';
  aggregate?: Maybe<Locationarea_Aggregate_Fields>;
  nodes: Array<Locationarea>;
};

export type Locationarea_Aggregate_Bool_Exp = {
  count?: InputMaybe<Locationarea_Aggregate_Bool_Exp_Count>;
};

export type Locationarea_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Locationarea_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Locationarea_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_locationarea" */
export type Locationarea_Aggregate_Fields = {
  __typename?: 'locationarea_aggregate_fields';
  avg?: Maybe<Locationarea_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Locationarea_Max_Fields>;
  min?: Maybe<Locationarea_Min_Fields>;
  stddev?: Maybe<Locationarea_Stddev_Fields>;
  stddev_pop?: Maybe<Locationarea_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Locationarea_Stddev_Samp_Fields>;
  sum?: Maybe<Locationarea_Sum_Fields>;
  var_pop?: Maybe<Locationarea_Var_Pop_Fields>;
  var_samp?: Maybe<Locationarea_Var_Samp_Fields>;
  variance?: Maybe<Locationarea_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_locationarea" */
export type Locationarea_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Locationarea_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_locationarea" */
export type Locationarea_Aggregate_Order_By = {
  avg?: InputMaybe<Locationarea_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Locationarea_Max_Order_By>;
  min?: InputMaybe<Locationarea_Min_Order_By>;
  stddev?: InputMaybe<Locationarea_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Locationarea_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Locationarea_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Locationarea_Sum_Order_By>;
  var_pop?: InputMaybe<Locationarea_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Locationarea_Var_Samp_Order_By>;
  variance?: InputMaybe<Locationarea_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Locationarea_Avg_Fields = {
  __typename?: 'locationarea_avg_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_locationarea" */
export type Locationarea_Avg_Order_By = {
  game_index?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_locationarea". All fields are combined with a logical 'AND'. */
export type Locationarea_Bool_Exp = {
  _and?: InputMaybe<Array<Locationarea_Bool_Exp>>;
  _not?: InputMaybe<Locationarea_Bool_Exp>;
  _or?: InputMaybe<Array<Locationarea_Bool_Exp>>;
  encounters?: InputMaybe<Encounter_Bool_Exp>;
  encounters_aggregate?: InputMaybe<Encounter_Aggregate_Bool_Exp>;
  game_index?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  location?: InputMaybe<Location_Bool_Exp>;
  location_id?: InputMaybe<Int_Comparison_Exp>;
  locationareaencounterrates?: InputMaybe<Locationareaencounterrate_Bool_Exp>;
  locationareaencounterrates_aggregate?: InputMaybe<Locationareaencounterrate_Aggregate_Bool_Exp>;
  locationareanames?: InputMaybe<Locationareaname_Bool_Exp>;
  locationareanames_aggregate?: InputMaybe<Locationareaname_Aggregate_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** aggregate max on columns */
export type Locationarea_Max_Fields = {
  __typename?: 'locationarea_max_fields';
  game_index?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  location_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "pokemon_v2_locationarea" */
export type Locationarea_Max_Order_By = {
  game_index?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Locationarea_Min_Fields = {
  __typename?: 'locationarea_min_fields';
  game_index?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  location_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "pokemon_v2_locationarea" */
export type Locationarea_Min_Order_By = {
  game_index?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_locationarea". */
export type Locationarea_Order_By = {
  encounters_aggregate?: InputMaybe<Encounter_Aggregate_Order_By>;
  game_index?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location?: InputMaybe<Location_Order_By>;
  location_id?: InputMaybe<Order_By>;
  locationareaencounterrates_aggregate?: InputMaybe<Locationareaencounterrate_Aggregate_Order_By>;
  locationareanames_aggregate?: InputMaybe<Locationareaname_Aggregate_Order_By>;
  name?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_locationarea" */
export enum Locationarea_Select_Column {
  /** column name */
  GameIndex = 'game_index',
  /** column name */
  Id = 'id',
  /** column name */
  LocationId = 'location_id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Locationarea_Stddev_Fields = {
  __typename?: 'locationarea_stddev_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_locationarea" */
export type Locationarea_Stddev_Order_By = {
  game_index?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Locationarea_Stddev_Pop_Fields = {
  __typename?: 'locationarea_stddev_pop_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_locationarea" */
export type Locationarea_Stddev_Pop_Order_By = {
  game_index?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Locationarea_Stddev_Samp_Fields = {
  __typename?: 'locationarea_stddev_samp_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_locationarea" */
export type Locationarea_Stddev_Samp_Order_By = {
  game_index?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Locationarea_Sum_Fields = {
  __typename?: 'locationarea_sum_fields';
  game_index?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  location_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_locationarea" */
export type Locationarea_Sum_Order_By = {
  game_index?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Locationarea_Var_Pop_Fields = {
  __typename?: 'locationarea_var_pop_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_locationarea" */
export type Locationarea_Var_Pop_Order_By = {
  game_index?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Locationarea_Var_Samp_Fields = {
  __typename?: 'locationarea_var_samp_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_locationarea" */
export type Locationarea_Var_Samp_Order_By = {
  game_index?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Locationarea_Variance_Fields = {
  __typename?: 'locationarea_variance_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_locationarea" */
export type Locationarea_Variance_Order_By = {
  game_index?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_locationareaencounterrate" */
export type Locationareaencounterrate = {
  __typename?: 'locationareaencounterrate';
  encounter_method_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  encountermethod?: Maybe<Encountermethod>;
  id: Scalars['Int']['output'];
  location_area_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  locationarea?: Maybe<Locationarea>;
  rate: Scalars['Int']['output'];
  /** An object relationship */
  version?: Maybe<Version>;
  version_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_locationareaencounterrate" */
export type Locationareaencounterrate_Aggregate = {
  __typename?: 'locationareaencounterrate_aggregate';
  aggregate?: Maybe<Locationareaencounterrate_Aggregate_Fields>;
  nodes: Array<Locationareaencounterrate>;
};

export type Locationareaencounterrate_Aggregate_Bool_Exp = {
  count?: InputMaybe<Locationareaencounterrate_Aggregate_Bool_Exp_Count>;
};

export type Locationareaencounterrate_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Locationareaencounterrate_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Locationareaencounterrate_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_locationareaencounterrate" */
export type Locationareaencounterrate_Aggregate_Fields = {
  __typename?: 'locationareaencounterrate_aggregate_fields';
  avg?: Maybe<Locationareaencounterrate_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Locationareaencounterrate_Max_Fields>;
  min?: Maybe<Locationareaencounterrate_Min_Fields>;
  stddev?: Maybe<Locationareaencounterrate_Stddev_Fields>;
  stddev_pop?: Maybe<Locationareaencounterrate_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Locationareaencounterrate_Stddev_Samp_Fields>;
  sum?: Maybe<Locationareaencounterrate_Sum_Fields>;
  var_pop?: Maybe<Locationareaencounterrate_Var_Pop_Fields>;
  var_samp?: Maybe<Locationareaencounterrate_Var_Samp_Fields>;
  variance?: Maybe<Locationareaencounterrate_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_locationareaencounterrate" */
export type Locationareaencounterrate_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Locationareaencounterrate_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_locationareaencounterrate" */
export type Locationareaencounterrate_Aggregate_Order_By = {
  avg?: InputMaybe<Locationareaencounterrate_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Locationareaencounterrate_Max_Order_By>;
  min?: InputMaybe<Locationareaencounterrate_Min_Order_By>;
  stddev?: InputMaybe<Locationareaencounterrate_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Locationareaencounterrate_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Locationareaencounterrate_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Locationareaencounterrate_Sum_Order_By>;
  var_pop?: InputMaybe<Locationareaencounterrate_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Locationareaencounterrate_Var_Samp_Order_By>;
  variance?: InputMaybe<Locationareaencounterrate_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Locationareaencounterrate_Avg_Fields = {
  __typename?: 'locationareaencounterrate_avg_fields';
  encounter_method_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_area_id?: Maybe<Scalars['Float']['output']>;
  rate?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_locationareaencounterrate" */
export type Locationareaencounterrate_Avg_Order_By = {
  encounter_method_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_area_id?: InputMaybe<Order_By>;
  rate?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_locationareaencounterrate". All fields are combined with a logical 'AND'. */
export type Locationareaencounterrate_Bool_Exp = {
  _and?: InputMaybe<Array<Locationareaencounterrate_Bool_Exp>>;
  _not?: InputMaybe<Locationareaencounterrate_Bool_Exp>;
  _or?: InputMaybe<Array<Locationareaencounterrate_Bool_Exp>>;
  encounter_method_id?: InputMaybe<Int_Comparison_Exp>;
  encountermethod?: InputMaybe<Encountermethod_Bool_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  location_area_id?: InputMaybe<Int_Comparison_Exp>;
  locationarea?: InputMaybe<Locationarea_Bool_Exp>;
  rate?: InputMaybe<Int_Comparison_Exp>;
  version?: InputMaybe<Version_Bool_Exp>;
  version_id?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Locationareaencounterrate_Max_Fields = {
  __typename?: 'locationareaencounterrate_max_fields';
  encounter_method_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  location_area_id?: Maybe<Scalars['Int']['output']>;
  rate?: Maybe<Scalars['Int']['output']>;
  version_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_locationareaencounterrate" */
export type Locationareaencounterrate_Max_Order_By = {
  encounter_method_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_area_id?: InputMaybe<Order_By>;
  rate?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Locationareaencounterrate_Min_Fields = {
  __typename?: 'locationareaencounterrate_min_fields';
  encounter_method_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  location_area_id?: Maybe<Scalars['Int']['output']>;
  rate?: Maybe<Scalars['Int']['output']>;
  version_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_locationareaencounterrate" */
export type Locationareaencounterrate_Min_Order_By = {
  encounter_method_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_area_id?: InputMaybe<Order_By>;
  rate?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_locationareaencounterrate". */
export type Locationareaencounterrate_Order_By = {
  encounter_method_id?: InputMaybe<Order_By>;
  encountermethod?: InputMaybe<Encountermethod_Order_By>;
  id?: InputMaybe<Order_By>;
  location_area_id?: InputMaybe<Order_By>;
  locationarea?: InputMaybe<Locationarea_Order_By>;
  rate?: InputMaybe<Order_By>;
  version?: InputMaybe<Version_Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_locationareaencounterrate" */
export enum Locationareaencounterrate_Select_Column {
  /** column name */
  EncounterMethodId = 'encounter_method_id',
  /** column name */
  Id = 'id',
  /** column name */
  LocationAreaId = 'location_area_id',
  /** column name */
  Rate = 'rate',
  /** column name */
  VersionId = 'version_id'
}

/** aggregate stddev on columns */
export type Locationareaencounterrate_Stddev_Fields = {
  __typename?: 'locationareaencounterrate_stddev_fields';
  encounter_method_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_area_id?: Maybe<Scalars['Float']['output']>;
  rate?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_locationareaencounterrate" */
export type Locationareaencounterrate_Stddev_Order_By = {
  encounter_method_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_area_id?: InputMaybe<Order_By>;
  rate?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Locationareaencounterrate_Stddev_Pop_Fields = {
  __typename?: 'locationareaencounterrate_stddev_pop_fields';
  encounter_method_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_area_id?: Maybe<Scalars['Float']['output']>;
  rate?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_locationareaencounterrate" */
export type Locationareaencounterrate_Stddev_Pop_Order_By = {
  encounter_method_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_area_id?: InputMaybe<Order_By>;
  rate?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Locationareaencounterrate_Stddev_Samp_Fields = {
  __typename?: 'locationareaencounterrate_stddev_samp_fields';
  encounter_method_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_area_id?: Maybe<Scalars['Float']['output']>;
  rate?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_locationareaencounterrate" */
export type Locationareaencounterrate_Stddev_Samp_Order_By = {
  encounter_method_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_area_id?: InputMaybe<Order_By>;
  rate?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Locationareaencounterrate_Sum_Fields = {
  __typename?: 'locationareaencounterrate_sum_fields';
  encounter_method_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  location_area_id?: Maybe<Scalars['Int']['output']>;
  rate?: Maybe<Scalars['Int']['output']>;
  version_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_locationareaencounterrate" */
export type Locationareaencounterrate_Sum_Order_By = {
  encounter_method_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_area_id?: InputMaybe<Order_By>;
  rate?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Locationareaencounterrate_Var_Pop_Fields = {
  __typename?: 'locationareaencounterrate_var_pop_fields';
  encounter_method_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_area_id?: Maybe<Scalars['Float']['output']>;
  rate?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_locationareaencounterrate" */
export type Locationareaencounterrate_Var_Pop_Order_By = {
  encounter_method_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_area_id?: InputMaybe<Order_By>;
  rate?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Locationareaencounterrate_Var_Samp_Fields = {
  __typename?: 'locationareaencounterrate_var_samp_fields';
  encounter_method_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_area_id?: Maybe<Scalars['Float']['output']>;
  rate?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_locationareaencounterrate" */
export type Locationareaencounterrate_Var_Samp_Order_By = {
  encounter_method_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_area_id?: InputMaybe<Order_By>;
  rate?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Locationareaencounterrate_Variance_Fields = {
  __typename?: 'locationareaencounterrate_variance_fields';
  encounter_method_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_area_id?: Maybe<Scalars['Float']['output']>;
  rate?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_locationareaencounterrate" */
export type Locationareaencounterrate_Variance_Order_By = {
  encounter_method_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_area_id?: InputMaybe<Order_By>;
  rate?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_locationareaname" */
export type Locationareaname = {
  __typename?: 'locationareaname';
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  location_area_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  locationarea?: Maybe<Locationarea>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_locationareaname" */
export type Locationareaname_Aggregate = {
  __typename?: 'locationareaname_aggregate';
  aggregate?: Maybe<Locationareaname_Aggregate_Fields>;
  nodes: Array<Locationareaname>;
};

export type Locationareaname_Aggregate_Bool_Exp = {
  count?: InputMaybe<Locationareaname_Aggregate_Bool_Exp_Count>;
};

export type Locationareaname_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Locationareaname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Locationareaname_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_locationareaname" */
export type Locationareaname_Aggregate_Fields = {
  __typename?: 'locationareaname_aggregate_fields';
  avg?: Maybe<Locationareaname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Locationareaname_Max_Fields>;
  min?: Maybe<Locationareaname_Min_Fields>;
  stddev?: Maybe<Locationareaname_Stddev_Fields>;
  stddev_pop?: Maybe<Locationareaname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Locationareaname_Stddev_Samp_Fields>;
  sum?: Maybe<Locationareaname_Sum_Fields>;
  var_pop?: Maybe<Locationareaname_Var_Pop_Fields>;
  var_samp?: Maybe<Locationareaname_Var_Samp_Fields>;
  variance?: Maybe<Locationareaname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_locationareaname" */
export type Locationareaname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Locationareaname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_locationareaname" */
export type Locationareaname_Aggregate_Order_By = {
  avg?: InputMaybe<Locationareaname_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Locationareaname_Max_Order_By>;
  min?: InputMaybe<Locationareaname_Min_Order_By>;
  stddev?: InputMaybe<Locationareaname_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Locationareaname_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Locationareaname_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Locationareaname_Sum_Order_By>;
  var_pop?: InputMaybe<Locationareaname_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Locationareaname_Var_Samp_Order_By>;
  variance?: InputMaybe<Locationareaname_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Locationareaname_Avg_Fields = {
  __typename?: 'locationareaname_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  location_area_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_locationareaname" */
export type Locationareaname_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  location_area_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_locationareaname". All fields are combined with a logical 'AND'. */
export type Locationareaname_Bool_Exp = {
  _and?: InputMaybe<Array<Locationareaname_Bool_Exp>>;
  _not?: InputMaybe<Locationareaname_Bool_Exp>;
  _or?: InputMaybe<Array<Locationareaname_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  location_area_id?: InputMaybe<Int_Comparison_Exp>;
  locationarea?: InputMaybe<Locationarea_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** aggregate max on columns */
export type Locationareaname_Max_Fields = {
  __typename?: 'locationareaname_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  location_area_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "pokemon_v2_locationareaname" */
export type Locationareaname_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  location_area_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Locationareaname_Min_Fields = {
  __typename?: 'locationareaname_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  location_area_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "pokemon_v2_locationareaname" */
export type Locationareaname_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  location_area_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_locationareaname". */
export type Locationareaname_Order_By = {
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  location_area_id?: InputMaybe<Order_By>;
  locationarea?: InputMaybe<Locationarea_Order_By>;
  name?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_locationareaname" */
export enum Locationareaname_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  LocationAreaId = 'location_area_id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Locationareaname_Stddev_Fields = {
  __typename?: 'locationareaname_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  location_area_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_locationareaname" */
export type Locationareaname_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  location_area_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Locationareaname_Stddev_Pop_Fields = {
  __typename?: 'locationareaname_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  location_area_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_locationareaname" */
export type Locationareaname_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  location_area_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Locationareaname_Stddev_Samp_Fields = {
  __typename?: 'locationareaname_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  location_area_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_locationareaname" */
export type Locationareaname_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  location_area_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Locationareaname_Sum_Fields = {
  __typename?: 'locationareaname_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  location_area_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_locationareaname" */
export type Locationareaname_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  location_area_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Locationareaname_Var_Pop_Fields = {
  __typename?: 'locationareaname_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  location_area_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_locationareaname" */
export type Locationareaname_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  location_area_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Locationareaname_Var_Samp_Fields = {
  __typename?: 'locationareaname_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  location_area_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_locationareaname" */
export type Locationareaname_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  location_area_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Locationareaname_Variance_Fields = {
  __typename?: 'locationareaname_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  location_area_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_locationareaname" */
export type Locationareaname_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  location_area_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_locationgameindex" */
export type Locationgameindex = {
  __typename?: 'locationgameindex';
  game_index: Scalars['Int']['output'];
  /** An object relationship */
  generation?: Maybe<Generation>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  /** An object relationship */
  location?: Maybe<Location>;
  location_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_locationgameindex" */
export type Locationgameindex_Aggregate = {
  __typename?: 'locationgameindex_aggregate';
  aggregate?: Maybe<Locationgameindex_Aggregate_Fields>;
  nodes: Array<Locationgameindex>;
};

export type Locationgameindex_Aggregate_Bool_Exp = {
  count?: InputMaybe<Locationgameindex_Aggregate_Bool_Exp_Count>;
};

export type Locationgameindex_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Locationgameindex_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Locationgameindex_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_locationgameindex" */
export type Locationgameindex_Aggregate_Fields = {
  __typename?: 'locationgameindex_aggregate_fields';
  avg?: Maybe<Locationgameindex_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Locationgameindex_Max_Fields>;
  min?: Maybe<Locationgameindex_Min_Fields>;
  stddev?: Maybe<Locationgameindex_Stddev_Fields>;
  stddev_pop?: Maybe<Locationgameindex_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Locationgameindex_Stddev_Samp_Fields>;
  sum?: Maybe<Locationgameindex_Sum_Fields>;
  var_pop?: Maybe<Locationgameindex_Var_Pop_Fields>;
  var_samp?: Maybe<Locationgameindex_Var_Samp_Fields>;
  variance?: Maybe<Locationgameindex_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_locationgameindex" */
export type Locationgameindex_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Locationgameindex_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_locationgameindex" */
export type Locationgameindex_Aggregate_Order_By = {
  avg?: InputMaybe<Locationgameindex_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Locationgameindex_Max_Order_By>;
  min?: InputMaybe<Locationgameindex_Min_Order_By>;
  stddev?: InputMaybe<Locationgameindex_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Locationgameindex_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Locationgameindex_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Locationgameindex_Sum_Order_By>;
  var_pop?: InputMaybe<Locationgameindex_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Locationgameindex_Var_Samp_Order_By>;
  variance?: InputMaybe<Locationgameindex_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Locationgameindex_Avg_Fields = {
  __typename?: 'locationgameindex_avg_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_locationgameindex" */
export type Locationgameindex_Avg_Order_By = {
  game_index?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_locationgameindex". All fields are combined with a logical 'AND'. */
export type Locationgameindex_Bool_Exp = {
  _and?: InputMaybe<Array<Locationgameindex_Bool_Exp>>;
  _not?: InputMaybe<Locationgameindex_Bool_Exp>;
  _or?: InputMaybe<Array<Locationgameindex_Bool_Exp>>;
  game_index?: InputMaybe<Int_Comparison_Exp>;
  generation?: InputMaybe<Generation_Bool_Exp>;
  generation_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  location?: InputMaybe<Location_Bool_Exp>;
  location_id?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Locationgameindex_Max_Fields = {
  __typename?: 'locationgameindex_max_fields';
  game_index?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  location_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_locationgameindex" */
export type Locationgameindex_Max_Order_By = {
  game_index?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Locationgameindex_Min_Fields = {
  __typename?: 'locationgameindex_min_fields';
  game_index?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  location_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_locationgameindex" */
export type Locationgameindex_Min_Order_By = {
  game_index?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_locationgameindex". */
export type Locationgameindex_Order_By = {
  game_index?: InputMaybe<Order_By>;
  generation?: InputMaybe<Generation_Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location?: InputMaybe<Location_Order_By>;
  location_id?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_locationgameindex" */
export enum Locationgameindex_Select_Column {
  /** column name */
  GameIndex = 'game_index',
  /** column name */
  GenerationId = 'generation_id',
  /** column name */
  Id = 'id',
  /** column name */
  LocationId = 'location_id'
}

/** aggregate stddev on columns */
export type Locationgameindex_Stddev_Fields = {
  __typename?: 'locationgameindex_stddev_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_locationgameindex" */
export type Locationgameindex_Stddev_Order_By = {
  game_index?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Locationgameindex_Stddev_Pop_Fields = {
  __typename?: 'locationgameindex_stddev_pop_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_locationgameindex" */
export type Locationgameindex_Stddev_Pop_Order_By = {
  game_index?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Locationgameindex_Stddev_Samp_Fields = {
  __typename?: 'locationgameindex_stddev_samp_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_locationgameindex" */
export type Locationgameindex_Stddev_Samp_Order_By = {
  game_index?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Locationgameindex_Sum_Fields = {
  __typename?: 'locationgameindex_sum_fields';
  game_index?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  location_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_locationgameindex" */
export type Locationgameindex_Sum_Order_By = {
  game_index?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Locationgameindex_Var_Pop_Fields = {
  __typename?: 'locationgameindex_var_pop_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_locationgameindex" */
export type Locationgameindex_Var_Pop_Order_By = {
  game_index?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Locationgameindex_Var_Samp_Fields = {
  __typename?: 'locationgameindex_var_samp_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_locationgameindex" */
export type Locationgameindex_Var_Samp_Order_By = {
  game_index?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Locationgameindex_Variance_Fields = {
  __typename?: 'locationgameindex_variance_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_locationgameindex" */
export type Locationgameindex_Variance_Order_By = {
  game_index?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_locationname" */
export type Locationname = {
  __typename?: 'locationname';
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  location?: Maybe<Location>;
  location_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_locationname" */
export type Locationname_Aggregate = {
  __typename?: 'locationname_aggregate';
  aggregate?: Maybe<Locationname_Aggregate_Fields>;
  nodes: Array<Locationname>;
};

export type Locationname_Aggregate_Bool_Exp = {
  count?: InputMaybe<Locationname_Aggregate_Bool_Exp_Count>;
};

export type Locationname_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Locationname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Locationname_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_locationname" */
export type Locationname_Aggregate_Fields = {
  __typename?: 'locationname_aggregate_fields';
  avg?: Maybe<Locationname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Locationname_Max_Fields>;
  min?: Maybe<Locationname_Min_Fields>;
  stddev?: Maybe<Locationname_Stddev_Fields>;
  stddev_pop?: Maybe<Locationname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Locationname_Stddev_Samp_Fields>;
  sum?: Maybe<Locationname_Sum_Fields>;
  var_pop?: Maybe<Locationname_Var_Pop_Fields>;
  var_samp?: Maybe<Locationname_Var_Samp_Fields>;
  variance?: Maybe<Locationname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_locationname" */
export type Locationname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Locationname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_locationname" */
export type Locationname_Aggregate_Order_By = {
  avg?: InputMaybe<Locationname_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Locationname_Max_Order_By>;
  min?: InputMaybe<Locationname_Min_Order_By>;
  stddev?: InputMaybe<Locationname_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Locationname_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Locationname_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Locationname_Sum_Order_By>;
  var_pop?: InputMaybe<Locationname_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Locationname_Var_Samp_Order_By>;
  variance?: InputMaybe<Locationname_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Locationname_Avg_Fields = {
  __typename?: 'locationname_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_locationname" */
export type Locationname_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_locationname". All fields are combined with a logical 'AND'. */
export type Locationname_Bool_Exp = {
  _and?: InputMaybe<Array<Locationname_Bool_Exp>>;
  _not?: InputMaybe<Locationname_Bool_Exp>;
  _or?: InputMaybe<Array<Locationname_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  location?: InputMaybe<Location_Bool_Exp>;
  location_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** aggregate max on columns */
export type Locationname_Max_Fields = {
  __typename?: 'locationname_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  location_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "pokemon_v2_locationname" */
export type Locationname_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Locationname_Min_Fields = {
  __typename?: 'locationname_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  location_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "pokemon_v2_locationname" */
export type Locationname_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_locationname". */
export type Locationname_Order_By = {
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  location?: InputMaybe<Location_Order_By>;
  location_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_locationname" */
export enum Locationname_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  LocationId = 'location_id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Locationname_Stddev_Fields = {
  __typename?: 'locationname_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_locationname" */
export type Locationname_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Locationname_Stddev_Pop_Fields = {
  __typename?: 'locationname_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_locationname" */
export type Locationname_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Locationname_Stddev_Samp_Fields = {
  __typename?: 'locationname_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_locationname" */
export type Locationname_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Locationname_Sum_Fields = {
  __typename?: 'locationname_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  location_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_locationname" */
export type Locationname_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Locationname_Var_Pop_Fields = {
  __typename?: 'locationname_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_locationname" */
export type Locationname_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Locationname_Var_Samp_Fields = {
  __typename?: 'locationname_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_locationname" */
export type Locationname_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Locationname_Variance_Fields = {
  __typename?: 'locationname_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_locationname" */
export type Locationname_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_machine" */
export type Machine = {
  __typename?: 'machine';
  growth_rate_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  growthrate?: Maybe<Growthrate>;
  id: Scalars['Int']['output'];
  /** An object relationship */
  item?: Maybe<Item>;
  item_id?: Maybe<Scalars['Int']['output']>;
  machine_number: Scalars['Int']['output'];
  /** An object relationship */
  move?: Maybe<Move>;
  move_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  versiongroup?: Maybe<Versiongroup>;
};

/** aggregated selection of "pokemon_v2_machine" */
export type Machine_Aggregate = {
  __typename?: 'machine_aggregate';
  aggregate?: Maybe<Machine_Aggregate_Fields>;
  nodes: Array<Machine>;
};

export type Machine_Aggregate_Bool_Exp = {
  count?: InputMaybe<Machine_Aggregate_Bool_Exp_Count>;
};

export type Machine_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Machine_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Machine_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_machine" */
export type Machine_Aggregate_Fields = {
  __typename?: 'machine_aggregate_fields';
  avg?: Maybe<Machine_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Machine_Max_Fields>;
  min?: Maybe<Machine_Min_Fields>;
  stddev?: Maybe<Machine_Stddev_Fields>;
  stddev_pop?: Maybe<Machine_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Machine_Stddev_Samp_Fields>;
  sum?: Maybe<Machine_Sum_Fields>;
  var_pop?: Maybe<Machine_Var_Pop_Fields>;
  var_samp?: Maybe<Machine_Var_Samp_Fields>;
  variance?: Maybe<Machine_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_machine" */
export type Machine_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Machine_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_machine" */
export type Machine_Aggregate_Order_By = {
  avg?: InputMaybe<Machine_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Machine_Max_Order_By>;
  min?: InputMaybe<Machine_Min_Order_By>;
  stddev?: InputMaybe<Machine_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Machine_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Machine_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Machine_Sum_Order_By>;
  var_pop?: InputMaybe<Machine_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Machine_Var_Samp_Order_By>;
  variance?: InputMaybe<Machine_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Machine_Avg_Fields = {
  __typename?: 'machine_avg_fields';
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  machine_number?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_machine" */
export type Machine_Avg_Order_By = {
  growth_rate_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  machine_number?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_machine". All fields are combined with a logical 'AND'. */
export type Machine_Bool_Exp = {
  _and?: InputMaybe<Array<Machine_Bool_Exp>>;
  _not?: InputMaybe<Machine_Bool_Exp>;
  _or?: InputMaybe<Array<Machine_Bool_Exp>>;
  growth_rate_id?: InputMaybe<Int_Comparison_Exp>;
  growthrate?: InputMaybe<Growthrate_Bool_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  item?: InputMaybe<Item_Bool_Exp>;
  item_id?: InputMaybe<Int_Comparison_Exp>;
  machine_number?: InputMaybe<Int_Comparison_Exp>;
  move?: InputMaybe<Move_Bool_Exp>;
  move_id?: InputMaybe<Int_Comparison_Exp>;
  version_group_id?: InputMaybe<Int_Comparison_Exp>;
  versiongroup?: InputMaybe<Versiongroup_Bool_Exp>;
};

/** aggregate max on columns */
export type Machine_Max_Fields = {
  __typename?: 'machine_max_fields';
  growth_rate_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
  machine_number?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_machine" */
export type Machine_Max_Order_By = {
  growth_rate_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  machine_number?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Machine_Min_Fields = {
  __typename?: 'machine_min_fields';
  growth_rate_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
  machine_number?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_machine" */
export type Machine_Min_Order_By = {
  growth_rate_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  machine_number?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_machine". */
export type Machine_Order_By = {
  growth_rate_id?: InputMaybe<Order_By>;
  growthrate?: InputMaybe<Growthrate_Order_By>;
  id?: InputMaybe<Order_By>;
  item?: InputMaybe<Item_Order_By>;
  item_id?: InputMaybe<Order_By>;
  machine_number?: InputMaybe<Order_By>;
  move?: InputMaybe<Move_Order_By>;
  move_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
  versiongroup?: InputMaybe<Versiongroup_Order_By>;
};

/** select columns of table "pokemon_v2_machine" */
export enum Machine_Select_Column {
  /** column name */
  GrowthRateId = 'growth_rate_id',
  /** column name */
  Id = 'id',
  /** column name */
  ItemId = 'item_id',
  /** column name */
  MachineNumber = 'machine_number',
  /** column name */
  MoveId = 'move_id',
  /** column name */
  VersionGroupId = 'version_group_id'
}

/** aggregate stddev on columns */
export type Machine_Stddev_Fields = {
  __typename?: 'machine_stddev_fields';
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  machine_number?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_machine" */
export type Machine_Stddev_Order_By = {
  growth_rate_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  machine_number?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Machine_Stddev_Pop_Fields = {
  __typename?: 'machine_stddev_pop_fields';
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  machine_number?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_machine" */
export type Machine_Stddev_Pop_Order_By = {
  growth_rate_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  machine_number?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Machine_Stddev_Samp_Fields = {
  __typename?: 'machine_stddev_samp_fields';
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  machine_number?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_machine" */
export type Machine_Stddev_Samp_Order_By = {
  growth_rate_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  machine_number?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Machine_Sum_Fields = {
  __typename?: 'machine_sum_fields';
  growth_rate_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
  machine_number?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_machine" */
export type Machine_Sum_Order_By = {
  growth_rate_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  machine_number?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Machine_Var_Pop_Fields = {
  __typename?: 'machine_var_pop_fields';
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  machine_number?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_machine" */
export type Machine_Var_Pop_Order_By = {
  growth_rate_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  machine_number?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Machine_Var_Samp_Fields = {
  __typename?: 'machine_var_samp_fields';
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  machine_number?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_machine" */
export type Machine_Var_Samp_Order_By = {
  growth_rate_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  machine_number?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Machine_Variance_Fields = {
  __typename?: 'machine_variance_fields';
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  machine_number?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_machine" */
export type Machine_Variance_Order_By = {
  growth_rate_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  machine_number?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_move" */
export type Move = {
  __typename?: 'move';
  /** An array relationship */
  ContestcombosBySecondMoveId: Array<Contestcombo>;
  /** An aggregate relationship */
  ContestcombosBySecondMoveId_aggregate: Contestcombo_Aggregate;
  /** An array relationship */
  SupercontestcombosBySecondMoveId: Array<Supercontestcombo>;
  /** An aggregate relationship */
  SupercontestcombosBySecondMoveId_aggregate: Supercontestcombo_Aggregate;
  accuracy?: Maybe<Scalars['Int']['output']>;
  contest_effect_id?: Maybe<Scalars['Int']['output']>;
  contest_type_id?: Maybe<Scalars['Int']['output']>;
  /** An array relationship */
  contestcombos: Array<Contestcombo>;
  /** An aggregate relationship */
  contestcombos_aggregate: Contestcombo_Aggregate;
  /** An object relationship */
  contesteffect?: Maybe<Contesteffect>;
  /** An object relationship */
  contesttype?: Maybe<Contesttype>;
  /** An object relationship */
  generation?: Maybe<Generation>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  /** An array relationship */
  machines: Array<Machine>;
  /** An aggregate relationship */
  machines_aggregate: Machine_Aggregate;
  move_damage_class_id?: Maybe<Scalars['Int']['output']>;
  move_effect_chance?: Maybe<Scalars['Int']['output']>;
  move_effect_id?: Maybe<Scalars['Int']['output']>;
  move_target_id?: Maybe<Scalars['Int']['output']>;
  /** An array relationship */
  moveattributemaps: Array<Moveattributemap>;
  /** An aggregate relationship */
  moveattributemaps_aggregate: Moveattributemap_Aggregate;
  /** An array relationship */
  movechanges: Array<Movechange>;
  /** An aggregate relationship */
  movechanges_aggregate: Movechange_Aggregate;
  /** An object relationship */
  movedamageclass?: Maybe<Movedamageclass>;
  /** An object relationship */
  moveeffect?: Maybe<Moveeffect>;
  /** An array relationship */
  moveflavortexts: Array<Moveflavortext>;
  /** An aggregate relationship */
  moveflavortexts_aggregate: Moveflavortext_Aggregate;
  /** An array relationship */
  movemeta: Array<Movemeta>;
  /** An aggregate relationship */
  movemeta_aggregate: Movemeta_Aggregate;
  /** An array relationship */
  movemetastatchanges: Array<Movemetastatchange>;
  /** An aggregate relationship */
  movemetastatchanges_aggregate: Movemetastatchange_Aggregate;
  /** An object relationship */
  movemetum?: Maybe<Movemeta>;
  /** An array relationship */
  movenames: Array<Movename>;
  /** An aggregate relationship */
  movenames_aggregate: Movename_Aggregate;
  /** An object relationship */
  movetarget?: Maybe<Movetarget>;
  name: Scalars['String']['output'];
  /** An array relationship */
  pokemonevolutions: Array<Pokemonevolution>;
  /** An aggregate relationship */
  pokemonevolutions_aggregate: Pokemonevolution_Aggregate;
  /** An array relationship */
  pokemonmoves: Array<Pokemonmove>;
  /** An aggregate relationship */
  pokemonmoves_aggregate: Pokemonmove_Aggregate;
  power?: Maybe<Scalars['Int']['output']>;
  pp?: Maybe<Scalars['Int']['output']>;
  priority?: Maybe<Scalars['Int']['output']>;
  super_contest_effect_id?: Maybe<Scalars['Int']['output']>;
  /** An array relationship */
  supercontestcombos: Array<Supercontestcombo>;
  /** An aggregate relationship */
  supercontestcombos_aggregate: Supercontestcombo_Aggregate;
  /** An object relationship */
  supercontesteffect?: Maybe<Supercontesteffect>;
  /** An object relationship */
  type?: Maybe<Type>;
  type_id?: Maybe<Scalars['Int']['output']>;
};


/** columns and relationships of "pokemon_v2_move" */
export type MoveContestcombosBySecondMoveIdArgs = {
  distinct_on?: InputMaybe<Array<Contestcombo_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Contestcombo_Order_By>>;
  where?: InputMaybe<Contestcombo_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_move" */
export type MoveContestcombosBySecondMoveId_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Contestcombo_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Contestcombo_Order_By>>;
  where?: InputMaybe<Contestcombo_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_move" */
export type MoveSupercontestcombosBySecondMoveIdArgs = {
  distinct_on?: InputMaybe<Array<Supercontestcombo_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Supercontestcombo_Order_By>>;
  where?: InputMaybe<Supercontestcombo_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_move" */
export type MoveSupercontestcombosBySecondMoveId_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Supercontestcombo_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Supercontestcombo_Order_By>>;
  where?: InputMaybe<Supercontestcombo_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_move" */
export type MoveContestcombosArgs = {
  distinct_on?: InputMaybe<Array<Contestcombo_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Contestcombo_Order_By>>;
  where?: InputMaybe<Contestcombo_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_move" */
export type MoveContestcombos_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Contestcombo_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Contestcombo_Order_By>>;
  where?: InputMaybe<Contestcombo_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_move" */
export type MoveMachinesArgs = {
  distinct_on?: InputMaybe<Array<Machine_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Machine_Order_By>>;
  where?: InputMaybe<Machine_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_move" */
export type MoveMachines_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Machine_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Machine_Order_By>>;
  where?: InputMaybe<Machine_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_move" */
export type MoveMoveattributemapsArgs = {
  distinct_on?: InputMaybe<Array<Moveattributemap_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Moveattributemap_Order_By>>;
  where?: InputMaybe<Moveattributemap_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_move" */
export type MoveMoveattributemaps_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Moveattributemap_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Moveattributemap_Order_By>>;
  where?: InputMaybe<Moveattributemap_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_move" */
export type MoveMovechangesArgs = {
  distinct_on?: InputMaybe<Array<Movechange_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movechange_Order_By>>;
  where?: InputMaybe<Movechange_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_move" */
export type MoveMovechanges_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Movechange_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movechange_Order_By>>;
  where?: InputMaybe<Movechange_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_move" */
export type MoveMoveflavortextsArgs = {
  distinct_on?: InputMaybe<Array<Moveflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Moveflavortext_Order_By>>;
  where?: InputMaybe<Moveflavortext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_move" */
export type MoveMoveflavortexts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Moveflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Moveflavortext_Order_By>>;
  where?: InputMaybe<Moveflavortext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_move" */
export type MoveMovemetaArgs = {
  distinct_on?: InputMaybe<Array<Movemeta_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movemeta_Order_By>>;
  where?: InputMaybe<Movemeta_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_move" */
export type MoveMovemeta_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Movemeta_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movemeta_Order_By>>;
  where?: InputMaybe<Movemeta_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_move" */
export type MoveMovemetastatchangesArgs = {
  distinct_on?: InputMaybe<Array<Movemetastatchange_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movemetastatchange_Order_By>>;
  where?: InputMaybe<Movemetastatchange_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_move" */
export type MoveMovemetastatchanges_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Movemetastatchange_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movemetastatchange_Order_By>>;
  where?: InputMaybe<Movemetastatchange_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_move" */
export type MoveMovenamesArgs = {
  distinct_on?: InputMaybe<Array<Movename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movename_Order_By>>;
  where?: InputMaybe<Movename_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_move" */
export type MoveMovenames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Movename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movename_Order_By>>;
  where?: InputMaybe<Movename_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_move" */
export type MovePokemonevolutionsArgs = {
  distinct_on?: InputMaybe<Array<Pokemonevolution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonevolution_Order_By>>;
  where?: InputMaybe<Pokemonevolution_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_move" */
export type MovePokemonevolutions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonevolution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonevolution_Order_By>>;
  where?: InputMaybe<Pokemonevolution_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_move" */
export type MovePokemonmovesArgs = {
  distinct_on?: InputMaybe<Array<Pokemonmove_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonmove_Order_By>>;
  where?: InputMaybe<Pokemonmove_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_move" */
export type MovePokemonmoves_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonmove_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonmove_Order_By>>;
  where?: InputMaybe<Pokemonmove_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_move" */
export type MoveSupercontestcombosArgs = {
  distinct_on?: InputMaybe<Array<Supercontestcombo_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Supercontestcombo_Order_By>>;
  where?: InputMaybe<Supercontestcombo_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_move" */
export type MoveSupercontestcombos_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Supercontestcombo_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Supercontestcombo_Order_By>>;
  where?: InputMaybe<Supercontestcombo_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_move" */
export type Move_Aggregate = {
  __typename?: 'move_aggregate';
  aggregate?: Maybe<Move_Aggregate_Fields>;
  nodes: Array<Move>;
};

export type Move_Aggregate_Bool_Exp = {
  count?: InputMaybe<Move_Aggregate_Bool_Exp_Count>;
};

export type Move_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Move_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Move_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_move" */
export type Move_Aggregate_Fields = {
  __typename?: 'move_aggregate_fields';
  avg?: Maybe<Move_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Move_Max_Fields>;
  min?: Maybe<Move_Min_Fields>;
  stddev?: Maybe<Move_Stddev_Fields>;
  stddev_pop?: Maybe<Move_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Move_Stddev_Samp_Fields>;
  sum?: Maybe<Move_Sum_Fields>;
  var_pop?: Maybe<Move_Var_Pop_Fields>;
  var_samp?: Maybe<Move_Var_Samp_Fields>;
  variance?: Maybe<Move_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_move" */
export type Move_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Move_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_move" */
export type Move_Aggregate_Order_By = {
  avg?: InputMaybe<Move_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Move_Max_Order_By>;
  min?: InputMaybe<Move_Min_Order_By>;
  stddev?: InputMaybe<Move_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Move_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Move_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Move_Sum_Order_By>;
  var_pop?: InputMaybe<Move_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Move_Var_Samp_Order_By>;
  variance?: InputMaybe<Move_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Move_Avg_Fields = {
  __typename?: 'move_avg_fields';
  accuracy?: Maybe<Scalars['Float']['output']>;
  contest_effect_id?: Maybe<Scalars['Float']['output']>;
  contest_type_id?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
  move_effect_chance?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
  move_target_id?: Maybe<Scalars['Float']['output']>;
  power?: Maybe<Scalars['Float']['output']>;
  pp?: Maybe<Scalars['Float']['output']>;
  priority?: Maybe<Scalars['Float']['output']>;
  super_contest_effect_id?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_move" */
export type Move_Avg_Order_By = {
  accuracy?: InputMaybe<Order_By>;
  contest_effect_id?: InputMaybe<Order_By>;
  contest_type_id?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
  move_effect_chance?: InputMaybe<Order_By>;
  move_effect_id?: InputMaybe<Order_By>;
  move_target_id?: InputMaybe<Order_By>;
  power?: InputMaybe<Order_By>;
  pp?: InputMaybe<Order_By>;
  priority?: InputMaybe<Order_By>;
  super_contest_effect_id?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_move". All fields are combined with a logical 'AND'. */
export type Move_Bool_Exp = {
  ContestcombosBySecondMoveId?: InputMaybe<Contestcombo_Bool_Exp>;
  ContestcombosBySecondMoveId_aggregate?: InputMaybe<Contestcombo_Aggregate_Bool_Exp>;
  SupercontestcombosBySecondMoveId?: InputMaybe<Supercontestcombo_Bool_Exp>;
  SupercontestcombosBySecondMoveId_aggregate?: InputMaybe<Supercontestcombo_Aggregate_Bool_Exp>;
  _and?: InputMaybe<Array<Move_Bool_Exp>>;
  _not?: InputMaybe<Move_Bool_Exp>;
  _or?: InputMaybe<Array<Move_Bool_Exp>>;
  accuracy?: InputMaybe<Int_Comparison_Exp>;
  contest_effect_id?: InputMaybe<Int_Comparison_Exp>;
  contest_type_id?: InputMaybe<Int_Comparison_Exp>;
  contestcombos?: InputMaybe<Contestcombo_Bool_Exp>;
  contestcombos_aggregate?: InputMaybe<Contestcombo_Aggregate_Bool_Exp>;
  contesteffect?: InputMaybe<Contesteffect_Bool_Exp>;
  contesttype?: InputMaybe<Contesttype_Bool_Exp>;
  generation?: InputMaybe<Generation_Bool_Exp>;
  generation_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  machines?: InputMaybe<Machine_Bool_Exp>;
  machines_aggregate?: InputMaybe<Machine_Aggregate_Bool_Exp>;
  move_damage_class_id?: InputMaybe<Int_Comparison_Exp>;
  move_effect_chance?: InputMaybe<Int_Comparison_Exp>;
  move_effect_id?: InputMaybe<Int_Comparison_Exp>;
  move_target_id?: InputMaybe<Int_Comparison_Exp>;
  moveattributemaps?: InputMaybe<Moveattributemap_Bool_Exp>;
  moveattributemaps_aggregate?: InputMaybe<Moveattributemap_Aggregate_Bool_Exp>;
  movechanges?: InputMaybe<Movechange_Bool_Exp>;
  movechanges_aggregate?: InputMaybe<Movechange_Aggregate_Bool_Exp>;
  movedamageclass?: InputMaybe<Movedamageclass_Bool_Exp>;
  moveeffect?: InputMaybe<Moveeffect_Bool_Exp>;
  moveflavortexts?: InputMaybe<Moveflavortext_Bool_Exp>;
  moveflavortexts_aggregate?: InputMaybe<Moveflavortext_Aggregate_Bool_Exp>;
  movemeta?: InputMaybe<Movemeta_Bool_Exp>;
  movemeta_aggregate?: InputMaybe<Movemeta_Aggregate_Bool_Exp>;
  movemetastatchanges?: InputMaybe<Movemetastatchange_Bool_Exp>;
  movemetastatchanges_aggregate?: InputMaybe<Movemetastatchange_Aggregate_Bool_Exp>;
  movemetum?: InputMaybe<Movemeta_Bool_Exp>;
  movenames?: InputMaybe<Movename_Bool_Exp>;
  movenames_aggregate?: InputMaybe<Movename_Aggregate_Bool_Exp>;
  movetarget?: InputMaybe<Movetarget_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  pokemonevolutions?: InputMaybe<Pokemonevolution_Bool_Exp>;
  pokemonevolutions_aggregate?: InputMaybe<Pokemonevolution_Aggregate_Bool_Exp>;
  pokemonmoves?: InputMaybe<Pokemonmove_Bool_Exp>;
  pokemonmoves_aggregate?: InputMaybe<Pokemonmove_Aggregate_Bool_Exp>;
  power?: InputMaybe<Int_Comparison_Exp>;
  pp?: InputMaybe<Int_Comparison_Exp>;
  priority?: InputMaybe<Int_Comparison_Exp>;
  super_contest_effect_id?: InputMaybe<Int_Comparison_Exp>;
  supercontestcombos?: InputMaybe<Supercontestcombo_Bool_Exp>;
  supercontestcombos_aggregate?: InputMaybe<Supercontestcombo_Aggregate_Bool_Exp>;
  supercontesteffect?: InputMaybe<Supercontesteffect_Bool_Exp>;
  type?: InputMaybe<Type_Bool_Exp>;
  type_id?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Move_Max_Fields = {
  __typename?: 'move_max_fields';
  accuracy?: Maybe<Scalars['Int']['output']>;
  contest_effect_id?: Maybe<Scalars['Int']['output']>;
  contest_type_id?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  move_damage_class_id?: Maybe<Scalars['Int']['output']>;
  move_effect_chance?: Maybe<Scalars['Int']['output']>;
  move_effect_id?: Maybe<Scalars['Int']['output']>;
  move_target_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  power?: Maybe<Scalars['Int']['output']>;
  pp?: Maybe<Scalars['Int']['output']>;
  priority?: Maybe<Scalars['Int']['output']>;
  super_contest_effect_id?: Maybe<Scalars['Int']['output']>;
  type_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_move" */
export type Move_Max_Order_By = {
  accuracy?: InputMaybe<Order_By>;
  contest_effect_id?: InputMaybe<Order_By>;
  contest_type_id?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
  move_effect_chance?: InputMaybe<Order_By>;
  move_effect_id?: InputMaybe<Order_By>;
  move_target_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  power?: InputMaybe<Order_By>;
  pp?: InputMaybe<Order_By>;
  priority?: InputMaybe<Order_By>;
  super_contest_effect_id?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Move_Min_Fields = {
  __typename?: 'move_min_fields';
  accuracy?: Maybe<Scalars['Int']['output']>;
  contest_effect_id?: Maybe<Scalars['Int']['output']>;
  contest_type_id?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  move_damage_class_id?: Maybe<Scalars['Int']['output']>;
  move_effect_chance?: Maybe<Scalars['Int']['output']>;
  move_effect_id?: Maybe<Scalars['Int']['output']>;
  move_target_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  power?: Maybe<Scalars['Int']['output']>;
  pp?: Maybe<Scalars['Int']['output']>;
  priority?: Maybe<Scalars['Int']['output']>;
  super_contest_effect_id?: Maybe<Scalars['Int']['output']>;
  type_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_move" */
export type Move_Min_Order_By = {
  accuracy?: InputMaybe<Order_By>;
  contest_effect_id?: InputMaybe<Order_By>;
  contest_type_id?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
  move_effect_chance?: InputMaybe<Order_By>;
  move_effect_id?: InputMaybe<Order_By>;
  move_target_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  power?: InputMaybe<Order_By>;
  pp?: InputMaybe<Order_By>;
  priority?: InputMaybe<Order_By>;
  super_contest_effect_id?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_move". */
export type Move_Order_By = {
  ContestcombosBySecondMoveId_aggregate?: InputMaybe<Contestcombo_Aggregate_Order_By>;
  SupercontestcombosBySecondMoveId_aggregate?: InputMaybe<Supercontestcombo_Aggregate_Order_By>;
  accuracy?: InputMaybe<Order_By>;
  contest_effect_id?: InputMaybe<Order_By>;
  contest_type_id?: InputMaybe<Order_By>;
  contestcombos_aggregate?: InputMaybe<Contestcombo_Aggregate_Order_By>;
  contesteffect?: InputMaybe<Contesteffect_Order_By>;
  contesttype?: InputMaybe<Contesttype_Order_By>;
  generation?: InputMaybe<Generation_Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  machines_aggregate?: InputMaybe<Machine_Aggregate_Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
  move_effect_chance?: InputMaybe<Order_By>;
  move_effect_id?: InputMaybe<Order_By>;
  move_target_id?: InputMaybe<Order_By>;
  moveattributemaps_aggregate?: InputMaybe<Moveattributemap_Aggregate_Order_By>;
  movechanges_aggregate?: InputMaybe<Movechange_Aggregate_Order_By>;
  movedamageclass?: InputMaybe<Movedamageclass_Order_By>;
  moveeffect?: InputMaybe<Moveeffect_Order_By>;
  moveflavortexts_aggregate?: InputMaybe<Moveflavortext_Aggregate_Order_By>;
  movemeta_aggregate?: InputMaybe<Movemeta_Aggregate_Order_By>;
  movemetastatchanges_aggregate?: InputMaybe<Movemetastatchange_Aggregate_Order_By>;
  movemetum?: InputMaybe<Movemeta_Order_By>;
  movenames_aggregate?: InputMaybe<Movename_Aggregate_Order_By>;
  movetarget?: InputMaybe<Movetarget_Order_By>;
  name?: InputMaybe<Order_By>;
  pokemonevolutions_aggregate?: InputMaybe<Pokemonevolution_Aggregate_Order_By>;
  pokemonmoves_aggregate?: InputMaybe<Pokemonmove_Aggregate_Order_By>;
  power?: InputMaybe<Order_By>;
  pp?: InputMaybe<Order_By>;
  priority?: InputMaybe<Order_By>;
  super_contest_effect_id?: InputMaybe<Order_By>;
  supercontestcombos_aggregate?: InputMaybe<Supercontestcombo_Aggregate_Order_By>;
  supercontesteffect?: InputMaybe<Supercontesteffect_Order_By>;
  type?: InputMaybe<Type_Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_move" */
export enum Move_Select_Column {
  /** column name */
  Accuracy = 'accuracy',
  /** column name */
  ContestEffectId = 'contest_effect_id',
  /** column name */
  ContestTypeId = 'contest_type_id',
  /** column name */
  GenerationId = 'generation_id',
  /** column name */
  Id = 'id',
  /** column name */
  MoveDamageClassId = 'move_damage_class_id',
  /** column name */
  MoveEffectChance = 'move_effect_chance',
  /** column name */
  MoveEffectId = 'move_effect_id',
  /** column name */
  MoveTargetId = 'move_target_id',
  /** column name */
  Name = 'name',
  /** column name */
  Power = 'power',
  /** column name */
  Pp = 'pp',
  /** column name */
  Priority = 'priority',
  /** column name */
  SuperContestEffectId = 'super_contest_effect_id',
  /** column name */
  TypeId = 'type_id'
}

/** aggregate stddev on columns */
export type Move_Stddev_Fields = {
  __typename?: 'move_stddev_fields';
  accuracy?: Maybe<Scalars['Float']['output']>;
  contest_effect_id?: Maybe<Scalars['Float']['output']>;
  contest_type_id?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
  move_effect_chance?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
  move_target_id?: Maybe<Scalars['Float']['output']>;
  power?: Maybe<Scalars['Float']['output']>;
  pp?: Maybe<Scalars['Float']['output']>;
  priority?: Maybe<Scalars['Float']['output']>;
  super_contest_effect_id?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_move" */
export type Move_Stddev_Order_By = {
  accuracy?: InputMaybe<Order_By>;
  contest_effect_id?: InputMaybe<Order_By>;
  contest_type_id?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
  move_effect_chance?: InputMaybe<Order_By>;
  move_effect_id?: InputMaybe<Order_By>;
  move_target_id?: InputMaybe<Order_By>;
  power?: InputMaybe<Order_By>;
  pp?: InputMaybe<Order_By>;
  priority?: InputMaybe<Order_By>;
  super_contest_effect_id?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Move_Stddev_Pop_Fields = {
  __typename?: 'move_stddev_pop_fields';
  accuracy?: Maybe<Scalars['Float']['output']>;
  contest_effect_id?: Maybe<Scalars['Float']['output']>;
  contest_type_id?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
  move_effect_chance?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
  move_target_id?: Maybe<Scalars['Float']['output']>;
  power?: Maybe<Scalars['Float']['output']>;
  pp?: Maybe<Scalars['Float']['output']>;
  priority?: Maybe<Scalars['Float']['output']>;
  super_contest_effect_id?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_move" */
export type Move_Stddev_Pop_Order_By = {
  accuracy?: InputMaybe<Order_By>;
  contest_effect_id?: InputMaybe<Order_By>;
  contest_type_id?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
  move_effect_chance?: InputMaybe<Order_By>;
  move_effect_id?: InputMaybe<Order_By>;
  move_target_id?: InputMaybe<Order_By>;
  power?: InputMaybe<Order_By>;
  pp?: InputMaybe<Order_By>;
  priority?: InputMaybe<Order_By>;
  super_contest_effect_id?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Move_Stddev_Samp_Fields = {
  __typename?: 'move_stddev_samp_fields';
  accuracy?: Maybe<Scalars['Float']['output']>;
  contest_effect_id?: Maybe<Scalars['Float']['output']>;
  contest_type_id?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
  move_effect_chance?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
  move_target_id?: Maybe<Scalars['Float']['output']>;
  power?: Maybe<Scalars['Float']['output']>;
  pp?: Maybe<Scalars['Float']['output']>;
  priority?: Maybe<Scalars['Float']['output']>;
  super_contest_effect_id?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_move" */
export type Move_Stddev_Samp_Order_By = {
  accuracy?: InputMaybe<Order_By>;
  contest_effect_id?: InputMaybe<Order_By>;
  contest_type_id?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
  move_effect_chance?: InputMaybe<Order_By>;
  move_effect_id?: InputMaybe<Order_By>;
  move_target_id?: InputMaybe<Order_By>;
  power?: InputMaybe<Order_By>;
  pp?: InputMaybe<Order_By>;
  priority?: InputMaybe<Order_By>;
  super_contest_effect_id?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Move_Sum_Fields = {
  __typename?: 'move_sum_fields';
  accuracy?: Maybe<Scalars['Int']['output']>;
  contest_effect_id?: Maybe<Scalars['Int']['output']>;
  contest_type_id?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  move_damage_class_id?: Maybe<Scalars['Int']['output']>;
  move_effect_chance?: Maybe<Scalars['Int']['output']>;
  move_effect_id?: Maybe<Scalars['Int']['output']>;
  move_target_id?: Maybe<Scalars['Int']['output']>;
  power?: Maybe<Scalars['Int']['output']>;
  pp?: Maybe<Scalars['Int']['output']>;
  priority?: Maybe<Scalars['Int']['output']>;
  super_contest_effect_id?: Maybe<Scalars['Int']['output']>;
  type_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_move" */
export type Move_Sum_Order_By = {
  accuracy?: InputMaybe<Order_By>;
  contest_effect_id?: InputMaybe<Order_By>;
  contest_type_id?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
  move_effect_chance?: InputMaybe<Order_By>;
  move_effect_id?: InputMaybe<Order_By>;
  move_target_id?: InputMaybe<Order_By>;
  power?: InputMaybe<Order_By>;
  pp?: InputMaybe<Order_By>;
  priority?: InputMaybe<Order_By>;
  super_contest_effect_id?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Move_Var_Pop_Fields = {
  __typename?: 'move_var_pop_fields';
  accuracy?: Maybe<Scalars['Float']['output']>;
  contest_effect_id?: Maybe<Scalars['Float']['output']>;
  contest_type_id?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
  move_effect_chance?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
  move_target_id?: Maybe<Scalars['Float']['output']>;
  power?: Maybe<Scalars['Float']['output']>;
  pp?: Maybe<Scalars['Float']['output']>;
  priority?: Maybe<Scalars['Float']['output']>;
  super_contest_effect_id?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_move" */
export type Move_Var_Pop_Order_By = {
  accuracy?: InputMaybe<Order_By>;
  contest_effect_id?: InputMaybe<Order_By>;
  contest_type_id?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
  move_effect_chance?: InputMaybe<Order_By>;
  move_effect_id?: InputMaybe<Order_By>;
  move_target_id?: InputMaybe<Order_By>;
  power?: InputMaybe<Order_By>;
  pp?: InputMaybe<Order_By>;
  priority?: InputMaybe<Order_By>;
  super_contest_effect_id?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Move_Var_Samp_Fields = {
  __typename?: 'move_var_samp_fields';
  accuracy?: Maybe<Scalars['Float']['output']>;
  contest_effect_id?: Maybe<Scalars['Float']['output']>;
  contest_type_id?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
  move_effect_chance?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
  move_target_id?: Maybe<Scalars['Float']['output']>;
  power?: Maybe<Scalars['Float']['output']>;
  pp?: Maybe<Scalars['Float']['output']>;
  priority?: Maybe<Scalars['Float']['output']>;
  super_contest_effect_id?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_move" */
export type Move_Var_Samp_Order_By = {
  accuracy?: InputMaybe<Order_By>;
  contest_effect_id?: InputMaybe<Order_By>;
  contest_type_id?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
  move_effect_chance?: InputMaybe<Order_By>;
  move_effect_id?: InputMaybe<Order_By>;
  move_target_id?: InputMaybe<Order_By>;
  power?: InputMaybe<Order_By>;
  pp?: InputMaybe<Order_By>;
  priority?: InputMaybe<Order_By>;
  super_contest_effect_id?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Move_Variance_Fields = {
  __typename?: 'move_variance_fields';
  accuracy?: Maybe<Scalars['Float']['output']>;
  contest_effect_id?: Maybe<Scalars['Float']['output']>;
  contest_type_id?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
  move_effect_chance?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
  move_target_id?: Maybe<Scalars['Float']['output']>;
  power?: Maybe<Scalars['Float']['output']>;
  pp?: Maybe<Scalars['Float']['output']>;
  priority?: Maybe<Scalars['Float']['output']>;
  super_contest_effect_id?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_move" */
export type Move_Variance_Order_By = {
  accuracy?: InputMaybe<Order_By>;
  contest_effect_id?: InputMaybe<Order_By>;
  contest_type_id?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
  move_effect_chance?: InputMaybe<Order_By>;
  move_effect_id?: InputMaybe<Order_By>;
  move_target_id?: InputMaybe<Order_By>;
  power?: InputMaybe<Order_By>;
  pp?: InputMaybe<Order_By>;
  priority?: InputMaybe<Order_By>;
  super_contest_effect_id?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_moveattribute" */
export type Moveattribute = {
  __typename?: 'moveattribute';
  id: Scalars['Int']['output'];
  /** An array relationship */
  moveattributedescriptions: Array<Moveattributedescription>;
  /** An aggregate relationship */
  moveattributedescriptions_aggregate: Moveattributedescription_Aggregate;
  /** An array relationship */
  moveattributemaps: Array<Moveattributemap>;
  /** An aggregate relationship */
  moveattributemaps_aggregate: Moveattributemap_Aggregate;
  /** An array relationship */
  moveattributenames: Array<Moveattributename>;
  /** An aggregate relationship */
  moveattributenames_aggregate: Moveattributename_Aggregate;
  name: Scalars['String']['output'];
};


/** columns and relationships of "pokemon_v2_moveattribute" */
export type MoveattributeMoveattributedescriptionsArgs = {
  distinct_on?: InputMaybe<Array<Moveattributedescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Moveattributedescription_Order_By>>;
  where?: InputMaybe<Moveattributedescription_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_moveattribute" */
export type MoveattributeMoveattributedescriptions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Moveattributedescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Moveattributedescription_Order_By>>;
  where?: InputMaybe<Moveattributedescription_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_moveattribute" */
export type MoveattributeMoveattributemapsArgs = {
  distinct_on?: InputMaybe<Array<Moveattributemap_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Moveattributemap_Order_By>>;
  where?: InputMaybe<Moveattributemap_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_moveattribute" */
export type MoveattributeMoveattributemaps_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Moveattributemap_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Moveattributemap_Order_By>>;
  where?: InputMaybe<Moveattributemap_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_moveattribute" */
export type MoveattributeMoveattributenamesArgs = {
  distinct_on?: InputMaybe<Array<Moveattributename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Moveattributename_Order_By>>;
  where?: InputMaybe<Moveattributename_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_moveattribute" */
export type MoveattributeMoveattributenames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Moveattributename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Moveattributename_Order_By>>;
  where?: InputMaybe<Moveattributename_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_moveattribute" */
export type Moveattribute_Aggregate = {
  __typename?: 'moveattribute_aggregate';
  aggregate?: Maybe<Moveattribute_Aggregate_Fields>;
  nodes: Array<Moveattribute>;
};

/** aggregate fields of "pokemon_v2_moveattribute" */
export type Moveattribute_Aggregate_Fields = {
  __typename?: 'moveattribute_aggregate_fields';
  avg?: Maybe<Moveattribute_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Moveattribute_Max_Fields>;
  min?: Maybe<Moveattribute_Min_Fields>;
  stddev?: Maybe<Moveattribute_Stddev_Fields>;
  stddev_pop?: Maybe<Moveattribute_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Moveattribute_Stddev_Samp_Fields>;
  sum?: Maybe<Moveattribute_Sum_Fields>;
  var_pop?: Maybe<Moveattribute_Var_Pop_Fields>;
  var_samp?: Maybe<Moveattribute_Var_Samp_Fields>;
  variance?: Maybe<Moveattribute_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_moveattribute" */
export type Moveattribute_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Moveattribute_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Moveattribute_Avg_Fields = {
  __typename?: 'moveattribute_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_moveattribute". All fields are combined with a logical 'AND'. */
export type Moveattribute_Bool_Exp = {
  _and?: InputMaybe<Array<Moveattribute_Bool_Exp>>;
  _not?: InputMaybe<Moveattribute_Bool_Exp>;
  _or?: InputMaybe<Array<Moveattribute_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  moveattributedescriptions?: InputMaybe<Moveattributedescription_Bool_Exp>;
  moveattributedescriptions_aggregate?: InputMaybe<Moveattributedescription_Aggregate_Bool_Exp>;
  moveattributemaps?: InputMaybe<Moveattributemap_Bool_Exp>;
  moveattributemaps_aggregate?: InputMaybe<Moveattributemap_Aggregate_Bool_Exp>;
  moveattributenames?: InputMaybe<Moveattributename_Bool_Exp>;
  moveattributenames_aggregate?: InputMaybe<Moveattributename_Aggregate_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** aggregate max on columns */
export type Moveattribute_Max_Fields = {
  __typename?: 'moveattribute_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Moveattribute_Min_Fields = {
  __typename?: 'moveattribute_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** Ordering options when selecting data from "pokemon_v2_moveattribute". */
export type Moveattribute_Order_By = {
  id?: InputMaybe<Order_By>;
  moveattributedescriptions_aggregate?: InputMaybe<Moveattributedescription_Aggregate_Order_By>;
  moveattributemaps_aggregate?: InputMaybe<Moveattributemap_Aggregate_Order_By>;
  moveattributenames_aggregate?: InputMaybe<Moveattributename_Aggregate_Order_By>;
  name?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_moveattribute" */
export enum Moveattribute_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Moveattribute_Stddev_Fields = {
  __typename?: 'moveattribute_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Moveattribute_Stddev_Pop_Fields = {
  __typename?: 'moveattribute_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Moveattribute_Stddev_Samp_Fields = {
  __typename?: 'moveattribute_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate sum on columns */
export type Moveattribute_Sum_Fields = {
  __typename?: 'moveattribute_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate var_pop on columns */
export type Moveattribute_Var_Pop_Fields = {
  __typename?: 'moveattribute_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Moveattribute_Var_Samp_Fields = {
  __typename?: 'moveattribute_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Moveattribute_Variance_Fields = {
  __typename?: 'moveattribute_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_moveattributedescription" */
export type Moveattributedescription = {
  __typename?: 'moveattributedescription';
  description: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_attribute_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  moveattribute?: Maybe<Moveattribute>;
};

/** aggregated selection of "pokemon_v2_moveattributedescription" */
export type Moveattributedescription_Aggregate = {
  __typename?: 'moveattributedescription_aggregate';
  aggregate?: Maybe<Moveattributedescription_Aggregate_Fields>;
  nodes: Array<Moveattributedescription>;
};

export type Moveattributedescription_Aggregate_Bool_Exp = {
  count?: InputMaybe<Moveattributedescription_Aggregate_Bool_Exp_Count>;
};

export type Moveattributedescription_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Moveattributedescription_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Moveattributedescription_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_moveattributedescription" */
export type Moveattributedescription_Aggregate_Fields = {
  __typename?: 'moveattributedescription_aggregate_fields';
  avg?: Maybe<Moveattributedescription_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Moveattributedescription_Max_Fields>;
  min?: Maybe<Moveattributedescription_Min_Fields>;
  stddev?: Maybe<Moveattributedescription_Stddev_Fields>;
  stddev_pop?: Maybe<Moveattributedescription_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Moveattributedescription_Stddev_Samp_Fields>;
  sum?: Maybe<Moveattributedescription_Sum_Fields>;
  var_pop?: Maybe<Moveattributedescription_Var_Pop_Fields>;
  var_samp?: Maybe<Moveattributedescription_Var_Samp_Fields>;
  variance?: Maybe<Moveattributedescription_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_moveattributedescription" */
export type Moveattributedescription_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Moveattributedescription_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_moveattributedescription" */
export type Moveattributedescription_Aggregate_Order_By = {
  avg?: InputMaybe<Moveattributedescription_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Moveattributedescription_Max_Order_By>;
  min?: InputMaybe<Moveattributedescription_Min_Order_By>;
  stddev?: InputMaybe<Moveattributedescription_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Moveattributedescription_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Moveattributedescription_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Moveattributedescription_Sum_Order_By>;
  var_pop?: InputMaybe<Moveattributedescription_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Moveattributedescription_Var_Samp_Order_By>;
  variance?: InputMaybe<Moveattributedescription_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Moveattributedescription_Avg_Fields = {
  __typename?: 'moveattributedescription_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_attribute_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_moveattributedescription" */
export type Moveattributedescription_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_attribute_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_moveattributedescription". All fields are combined with a logical 'AND'. */
export type Moveattributedescription_Bool_Exp = {
  _and?: InputMaybe<Array<Moveattributedescription_Bool_Exp>>;
  _not?: InputMaybe<Moveattributedescription_Bool_Exp>;
  _or?: InputMaybe<Array<Moveattributedescription_Bool_Exp>>;
  description?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  move_attribute_id?: InputMaybe<Int_Comparison_Exp>;
  moveattribute?: InputMaybe<Moveattribute_Bool_Exp>;
};

/** aggregate max on columns */
export type Moveattributedescription_Max_Fields = {
  __typename?: 'moveattributedescription_max_fields';
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_attribute_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_moveattributedescription" */
export type Moveattributedescription_Max_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_attribute_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Moveattributedescription_Min_Fields = {
  __typename?: 'moveattributedescription_min_fields';
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_attribute_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_moveattributedescription" */
export type Moveattributedescription_Min_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_attribute_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_moveattributedescription". */
export type Moveattributedescription_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_attribute_id?: InputMaybe<Order_By>;
  moveattribute?: InputMaybe<Moveattribute_Order_By>;
};

/** select columns of table "pokemon_v2_moveattributedescription" */
export enum Moveattributedescription_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  MoveAttributeId = 'move_attribute_id'
}

/** aggregate stddev on columns */
export type Moveattributedescription_Stddev_Fields = {
  __typename?: 'moveattributedescription_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_attribute_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_moveattributedescription" */
export type Moveattributedescription_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_attribute_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Moveattributedescription_Stddev_Pop_Fields = {
  __typename?: 'moveattributedescription_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_attribute_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_moveattributedescription" */
export type Moveattributedescription_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_attribute_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Moveattributedescription_Stddev_Samp_Fields = {
  __typename?: 'moveattributedescription_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_attribute_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_moveattributedescription" */
export type Moveattributedescription_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_attribute_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Moveattributedescription_Sum_Fields = {
  __typename?: 'moveattributedescription_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_attribute_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_moveattributedescription" */
export type Moveattributedescription_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_attribute_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Moveattributedescription_Var_Pop_Fields = {
  __typename?: 'moveattributedescription_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_attribute_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_moveattributedescription" */
export type Moveattributedescription_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_attribute_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Moveattributedescription_Var_Samp_Fields = {
  __typename?: 'moveattributedescription_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_attribute_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_moveattributedescription" */
export type Moveattributedescription_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_attribute_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Moveattributedescription_Variance_Fields = {
  __typename?: 'moveattributedescription_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_attribute_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_moveattributedescription" */
export type Moveattributedescription_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_attribute_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_moveattributemap" */
export type Moveattributemap = {
  __typename?: 'moveattributemap';
  id: Scalars['Int']['output'];
  /** An object relationship */
  move?: Maybe<Move>;
  move_attribute_id?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  moveattribute?: Maybe<Moveattribute>;
};

/** aggregated selection of "pokemon_v2_moveattributemap" */
export type Moveattributemap_Aggregate = {
  __typename?: 'moveattributemap_aggregate';
  aggregate?: Maybe<Moveattributemap_Aggregate_Fields>;
  nodes: Array<Moveattributemap>;
};

export type Moveattributemap_Aggregate_Bool_Exp = {
  count?: InputMaybe<Moveattributemap_Aggregate_Bool_Exp_Count>;
};

export type Moveattributemap_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Moveattributemap_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Moveattributemap_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_moveattributemap" */
export type Moveattributemap_Aggregate_Fields = {
  __typename?: 'moveattributemap_aggregate_fields';
  avg?: Maybe<Moveattributemap_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Moveattributemap_Max_Fields>;
  min?: Maybe<Moveattributemap_Min_Fields>;
  stddev?: Maybe<Moveattributemap_Stddev_Fields>;
  stddev_pop?: Maybe<Moveattributemap_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Moveattributemap_Stddev_Samp_Fields>;
  sum?: Maybe<Moveattributemap_Sum_Fields>;
  var_pop?: Maybe<Moveattributemap_Var_Pop_Fields>;
  var_samp?: Maybe<Moveattributemap_Var_Samp_Fields>;
  variance?: Maybe<Moveattributemap_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_moveattributemap" */
export type Moveattributemap_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Moveattributemap_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_moveattributemap" */
export type Moveattributemap_Aggregate_Order_By = {
  avg?: InputMaybe<Moveattributemap_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Moveattributemap_Max_Order_By>;
  min?: InputMaybe<Moveattributemap_Min_Order_By>;
  stddev?: InputMaybe<Moveattributemap_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Moveattributemap_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Moveattributemap_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Moveattributemap_Sum_Order_By>;
  var_pop?: InputMaybe<Moveattributemap_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Moveattributemap_Var_Samp_Order_By>;
  variance?: InputMaybe<Moveattributemap_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Moveattributemap_Avg_Fields = {
  __typename?: 'moveattributemap_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  move_attribute_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_moveattributemap" */
export type Moveattributemap_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  move_attribute_id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_moveattributemap". All fields are combined with a logical 'AND'. */
export type Moveattributemap_Bool_Exp = {
  _and?: InputMaybe<Array<Moveattributemap_Bool_Exp>>;
  _not?: InputMaybe<Moveattributemap_Bool_Exp>;
  _or?: InputMaybe<Array<Moveattributemap_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  move?: InputMaybe<Move_Bool_Exp>;
  move_attribute_id?: InputMaybe<Int_Comparison_Exp>;
  move_id?: InputMaybe<Int_Comparison_Exp>;
  moveattribute?: InputMaybe<Moveattribute_Bool_Exp>;
};

/** aggregate max on columns */
export type Moveattributemap_Max_Fields = {
  __typename?: 'moveattributemap_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  move_attribute_id?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_moveattributemap" */
export type Moveattributemap_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  move_attribute_id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Moveattributemap_Min_Fields = {
  __typename?: 'moveattributemap_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  move_attribute_id?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_moveattributemap" */
export type Moveattributemap_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  move_attribute_id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_moveattributemap". */
export type Moveattributemap_Order_By = {
  id?: InputMaybe<Order_By>;
  move?: InputMaybe<Move_Order_By>;
  move_attribute_id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  moveattribute?: InputMaybe<Moveattribute_Order_By>;
};

/** select columns of table "pokemon_v2_moveattributemap" */
export enum Moveattributemap_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  MoveAttributeId = 'move_attribute_id',
  /** column name */
  MoveId = 'move_id'
}

/** aggregate stddev on columns */
export type Moveattributemap_Stddev_Fields = {
  __typename?: 'moveattributemap_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  move_attribute_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_moveattributemap" */
export type Moveattributemap_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  move_attribute_id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Moveattributemap_Stddev_Pop_Fields = {
  __typename?: 'moveattributemap_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  move_attribute_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_moveattributemap" */
export type Moveattributemap_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  move_attribute_id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Moveattributemap_Stddev_Samp_Fields = {
  __typename?: 'moveattributemap_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  move_attribute_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_moveattributemap" */
export type Moveattributemap_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  move_attribute_id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Moveattributemap_Sum_Fields = {
  __typename?: 'moveattributemap_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  move_attribute_id?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_moveattributemap" */
export type Moveattributemap_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  move_attribute_id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Moveattributemap_Var_Pop_Fields = {
  __typename?: 'moveattributemap_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  move_attribute_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_moveattributemap" */
export type Moveattributemap_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  move_attribute_id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Moveattributemap_Var_Samp_Fields = {
  __typename?: 'moveattributemap_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  move_attribute_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_moveattributemap" */
export type Moveattributemap_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  move_attribute_id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Moveattributemap_Variance_Fields = {
  __typename?: 'moveattributemap_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  move_attribute_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_moveattributemap" */
export type Moveattributemap_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  move_attribute_id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_moveattributename" */
export type Moveattributename = {
  __typename?: 'moveattributename';
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_attribute_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  moveattribute?: Maybe<Moveattribute>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_moveattributename" */
export type Moveattributename_Aggregate = {
  __typename?: 'moveattributename_aggregate';
  aggregate?: Maybe<Moveattributename_Aggregate_Fields>;
  nodes: Array<Moveattributename>;
};

export type Moveattributename_Aggregate_Bool_Exp = {
  count?: InputMaybe<Moveattributename_Aggregate_Bool_Exp_Count>;
};

export type Moveattributename_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Moveattributename_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Moveattributename_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_moveattributename" */
export type Moveattributename_Aggregate_Fields = {
  __typename?: 'moveattributename_aggregate_fields';
  avg?: Maybe<Moveattributename_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Moveattributename_Max_Fields>;
  min?: Maybe<Moveattributename_Min_Fields>;
  stddev?: Maybe<Moveattributename_Stddev_Fields>;
  stddev_pop?: Maybe<Moveattributename_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Moveattributename_Stddev_Samp_Fields>;
  sum?: Maybe<Moveattributename_Sum_Fields>;
  var_pop?: Maybe<Moveattributename_Var_Pop_Fields>;
  var_samp?: Maybe<Moveattributename_Var_Samp_Fields>;
  variance?: Maybe<Moveattributename_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_moveattributename" */
export type Moveattributename_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Moveattributename_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_moveattributename" */
export type Moveattributename_Aggregate_Order_By = {
  avg?: InputMaybe<Moveattributename_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Moveattributename_Max_Order_By>;
  min?: InputMaybe<Moveattributename_Min_Order_By>;
  stddev?: InputMaybe<Moveattributename_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Moveattributename_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Moveattributename_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Moveattributename_Sum_Order_By>;
  var_pop?: InputMaybe<Moveattributename_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Moveattributename_Var_Samp_Order_By>;
  variance?: InputMaybe<Moveattributename_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Moveattributename_Avg_Fields = {
  __typename?: 'moveattributename_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_attribute_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_moveattributename" */
export type Moveattributename_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_attribute_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_moveattributename". All fields are combined with a logical 'AND'. */
export type Moveattributename_Bool_Exp = {
  _and?: InputMaybe<Array<Moveattributename_Bool_Exp>>;
  _not?: InputMaybe<Moveattributename_Bool_Exp>;
  _or?: InputMaybe<Array<Moveattributename_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  move_attribute_id?: InputMaybe<Int_Comparison_Exp>;
  moveattribute?: InputMaybe<Moveattribute_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** aggregate max on columns */
export type Moveattributename_Max_Fields = {
  __typename?: 'moveattributename_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_attribute_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "pokemon_v2_moveattributename" */
export type Moveattributename_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_attribute_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Moveattributename_Min_Fields = {
  __typename?: 'moveattributename_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_attribute_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "pokemon_v2_moveattributename" */
export type Moveattributename_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_attribute_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_moveattributename". */
export type Moveattributename_Order_By = {
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_attribute_id?: InputMaybe<Order_By>;
  moveattribute?: InputMaybe<Moveattribute_Order_By>;
  name?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_moveattributename" */
export enum Moveattributename_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  MoveAttributeId = 'move_attribute_id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Moveattributename_Stddev_Fields = {
  __typename?: 'moveattributename_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_attribute_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_moveattributename" */
export type Moveattributename_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_attribute_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Moveattributename_Stddev_Pop_Fields = {
  __typename?: 'moveattributename_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_attribute_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_moveattributename" */
export type Moveattributename_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_attribute_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Moveattributename_Stddev_Samp_Fields = {
  __typename?: 'moveattributename_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_attribute_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_moveattributename" */
export type Moveattributename_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_attribute_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Moveattributename_Sum_Fields = {
  __typename?: 'moveattributename_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_attribute_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_moveattributename" */
export type Moveattributename_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_attribute_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Moveattributename_Var_Pop_Fields = {
  __typename?: 'moveattributename_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_attribute_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_moveattributename" */
export type Moveattributename_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_attribute_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Moveattributename_Var_Samp_Fields = {
  __typename?: 'moveattributename_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_attribute_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_moveattributename" */
export type Moveattributename_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_attribute_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Moveattributename_Variance_Fields = {
  __typename?: 'moveattributename_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_attribute_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_moveattributename" */
export type Moveattributename_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_attribute_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_movebattlestyle" */
export type Movebattlestyle = {
  __typename?: 'movebattlestyle';
  id: Scalars['Int']['output'];
  /** An array relationship */
  movebattlestylenames: Array<Movebattlestylename>;
  /** An aggregate relationship */
  movebattlestylenames_aggregate: Movebattlestylename_Aggregate;
  name: Scalars['String']['output'];
  /** An array relationship */
  naturebattlestylepreferences: Array<Naturebattlestylepreference>;
  /** An aggregate relationship */
  naturebattlestylepreferences_aggregate: Naturebattlestylepreference_Aggregate;
};


/** columns and relationships of "pokemon_v2_movebattlestyle" */
export type MovebattlestyleMovebattlestylenamesArgs = {
  distinct_on?: InputMaybe<Array<Movebattlestylename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movebattlestylename_Order_By>>;
  where?: InputMaybe<Movebattlestylename_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_movebattlestyle" */
export type MovebattlestyleMovebattlestylenames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Movebattlestylename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movebattlestylename_Order_By>>;
  where?: InputMaybe<Movebattlestylename_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_movebattlestyle" */
export type MovebattlestyleNaturebattlestylepreferencesArgs = {
  distinct_on?: InputMaybe<Array<Naturebattlestylepreference_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Naturebattlestylepreference_Order_By>>;
  where?: InputMaybe<Naturebattlestylepreference_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_movebattlestyle" */
export type MovebattlestyleNaturebattlestylepreferences_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Naturebattlestylepreference_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Naturebattlestylepreference_Order_By>>;
  where?: InputMaybe<Naturebattlestylepreference_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_movebattlestyle" */
export type Movebattlestyle_Aggregate = {
  __typename?: 'movebattlestyle_aggregate';
  aggregate?: Maybe<Movebattlestyle_Aggregate_Fields>;
  nodes: Array<Movebattlestyle>;
};

/** aggregate fields of "pokemon_v2_movebattlestyle" */
export type Movebattlestyle_Aggregate_Fields = {
  __typename?: 'movebattlestyle_aggregate_fields';
  avg?: Maybe<Movebattlestyle_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Movebattlestyle_Max_Fields>;
  min?: Maybe<Movebattlestyle_Min_Fields>;
  stddev?: Maybe<Movebattlestyle_Stddev_Fields>;
  stddev_pop?: Maybe<Movebattlestyle_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Movebattlestyle_Stddev_Samp_Fields>;
  sum?: Maybe<Movebattlestyle_Sum_Fields>;
  var_pop?: Maybe<Movebattlestyle_Var_Pop_Fields>;
  var_samp?: Maybe<Movebattlestyle_Var_Samp_Fields>;
  variance?: Maybe<Movebattlestyle_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_movebattlestyle" */
export type Movebattlestyle_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Movebattlestyle_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Movebattlestyle_Avg_Fields = {
  __typename?: 'movebattlestyle_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_movebattlestyle". All fields are combined with a logical 'AND'. */
export type Movebattlestyle_Bool_Exp = {
  _and?: InputMaybe<Array<Movebattlestyle_Bool_Exp>>;
  _not?: InputMaybe<Movebattlestyle_Bool_Exp>;
  _or?: InputMaybe<Array<Movebattlestyle_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  movebattlestylenames?: InputMaybe<Movebattlestylename_Bool_Exp>;
  movebattlestylenames_aggregate?: InputMaybe<Movebattlestylename_Aggregate_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  naturebattlestylepreferences?: InputMaybe<Naturebattlestylepreference_Bool_Exp>;
  naturebattlestylepreferences_aggregate?: InputMaybe<Naturebattlestylepreference_Aggregate_Bool_Exp>;
};

/** aggregate max on columns */
export type Movebattlestyle_Max_Fields = {
  __typename?: 'movebattlestyle_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Movebattlestyle_Min_Fields = {
  __typename?: 'movebattlestyle_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** Ordering options when selecting data from "pokemon_v2_movebattlestyle". */
export type Movebattlestyle_Order_By = {
  id?: InputMaybe<Order_By>;
  movebattlestylenames_aggregate?: InputMaybe<Movebattlestylename_Aggregate_Order_By>;
  name?: InputMaybe<Order_By>;
  naturebattlestylepreferences_aggregate?: InputMaybe<Naturebattlestylepreference_Aggregate_Order_By>;
};

/** select columns of table "pokemon_v2_movebattlestyle" */
export enum Movebattlestyle_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Movebattlestyle_Stddev_Fields = {
  __typename?: 'movebattlestyle_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Movebattlestyle_Stddev_Pop_Fields = {
  __typename?: 'movebattlestyle_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Movebattlestyle_Stddev_Samp_Fields = {
  __typename?: 'movebattlestyle_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate sum on columns */
export type Movebattlestyle_Sum_Fields = {
  __typename?: 'movebattlestyle_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate var_pop on columns */
export type Movebattlestyle_Var_Pop_Fields = {
  __typename?: 'movebattlestyle_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Movebattlestyle_Var_Samp_Fields = {
  __typename?: 'movebattlestyle_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Movebattlestyle_Variance_Fields = {
  __typename?: 'movebattlestyle_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_movebattlestylename" */
export type Movebattlestylename = {
  __typename?: 'movebattlestylename';
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_battle_style_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  movebattlestyle?: Maybe<Movebattlestyle>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_movebattlestylename" */
export type Movebattlestylename_Aggregate = {
  __typename?: 'movebattlestylename_aggregate';
  aggregate?: Maybe<Movebattlestylename_Aggregate_Fields>;
  nodes: Array<Movebattlestylename>;
};

export type Movebattlestylename_Aggregate_Bool_Exp = {
  count?: InputMaybe<Movebattlestylename_Aggregate_Bool_Exp_Count>;
};

export type Movebattlestylename_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Movebattlestylename_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Movebattlestylename_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_movebattlestylename" */
export type Movebattlestylename_Aggregate_Fields = {
  __typename?: 'movebattlestylename_aggregate_fields';
  avg?: Maybe<Movebattlestylename_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Movebattlestylename_Max_Fields>;
  min?: Maybe<Movebattlestylename_Min_Fields>;
  stddev?: Maybe<Movebattlestylename_Stddev_Fields>;
  stddev_pop?: Maybe<Movebattlestylename_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Movebattlestylename_Stddev_Samp_Fields>;
  sum?: Maybe<Movebattlestylename_Sum_Fields>;
  var_pop?: Maybe<Movebattlestylename_Var_Pop_Fields>;
  var_samp?: Maybe<Movebattlestylename_Var_Samp_Fields>;
  variance?: Maybe<Movebattlestylename_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_movebattlestylename" */
export type Movebattlestylename_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Movebattlestylename_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_movebattlestylename" */
export type Movebattlestylename_Aggregate_Order_By = {
  avg?: InputMaybe<Movebattlestylename_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Movebattlestylename_Max_Order_By>;
  min?: InputMaybe<Movebattlestylename_Min_Order_By>;
  stddev?: InputMaybe<Movebattlestylename_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Movebattlestylename_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Movebattlestylename_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Movebattlestylename_Sum_Order_By>;
  var_pop?: InputMaybe<Movebattlestylename_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Movebattlestylename_Var_Samp_Order_By>;
  variance?: InputMaybe<Movebattlestylename_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Movebattlestylename_Avg_Fields = {
  __typename?: 'movebattlestylename_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_battle_style_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_movebattlestylename" */
export type Movebattlestylename_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_battle_style_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_movebattlestylename". All fields are combined with a logical 'AND'. */
export type Movebattlestylename_Bool_Exp = {
  _and?: InputMaybe<Array<Movebattlestylename_Bool_Exp>>;
  _not?: InputMaybe<Movebattlestylename_Bool_Exp>;
  _or?: InputMaybe<Array<Movebattlestylename_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  move_battle_style_id?: InputMaybe<Int_Comparison_Exp>;
  movebattlestyle?: InputMaybe<Movebattlestyle_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** aggregate max on columns */
export type Movebattlestylename_Max_Fields = {
  __typename?: 'movebattlestylename_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_battle_style_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "pokemon_v2_movebattlestylename" */
export type Movebattlestylename_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_battle_style_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Movebattlestylename_Min_Fields = {
  __typename?: 'movebattlestylename_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_battle_style_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "pokemon_v2_movebattlestylename" */
export type Movebattlestylename_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_battle_style_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_movebattlestylename". */
export type Movebattlestylename_Order_By = {
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_battle_style_id?: InputMaybe<Order_By>;
  movebattlestyle?: InputMaybe<Movebattlestyle_Order_By>;
  name?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_movebattlestylename" */
export enum Movebattlestylename_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  MoveBattleStyleId = 'move_battle_style_id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Movebattlestylename_Stddev_Fields = {
  __typename?: 'movebattlestylename_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_battle_style_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_movebattlestylename" */
export type Movebattlestylename_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_battle_style_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Movebattlestylename_Stddev_Pop_Fields = {
  __typename?: 'movebattlestylename_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_battle_style_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_movebattlestylename" */
export type Movebattlestylename_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_battle_style_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Movebattlestylename_Stddev_Samp_Fields = {
  __typename?: 'movebattlestylename_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_battle_style_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_movebattlestylename" */
export type Movebattlestylename_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_battle_style_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Movebattlestylename_Sum_Fields = {
  __typename?: 'movebattlestylename_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_battle_style_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_movebattlestylename" */
export type Movebattlestylename_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_battle_style_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Movebattlestylename_Var_Pop_Fields = {
  __typename?: 'movebattlestylename_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_battle_style_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_movebattlestylename" */
export type Movebattlestylename_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_battle_style_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Movebattlestylename_Var_Samp_Fields = {
  __typename?: 'movebattlestylename_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_battle_style_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_movebattlestylename" */
export type Movebattlestylename_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_battle_style_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Movebattlestylename_Variance_Fields = {
  __typename?: 'movebattlestylename_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_battle_style_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_movebattlestylename" */
export type Movebattlestylename_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_battle_style_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_movechange" */
export type Movechange = {
  __typename?: 'movechange';
  accuracy?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  /** An object relationship */
  move?: Maybe<Move>;
  move_effect_chance?: Maybe<Scalars['Int']['output']>;
  move_effect_id?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  moveeffect?: Maybe<Moveeffect>;
  power?: Maybe<Scalars['Int']['output']>;
  pp?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  type?: Maybe<Type>;
  type_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  versiongroup?: Maybe<Versiongroup>;
};

/** aggregated selection of "pokemon_v2_movechange" */
export type Movechange_Aggregate = {
  __typename?: 'movechange_aggregate';
  aggregate?: Maybe<Movechange_Aggregate_Fields>;
  nodes: Array<Movechange>;
};

export type Movechange_Aggregate_Bool_Exp = {
  count?: InputMaybe<Movechange_Aggregate_Bool_Exp_Count>;
};

export type Movechange_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Movechange_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Movechange_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_movechange" */
export type Movechange_Aggregate_Fields = {
  __typename?: 'movechange_aggregate_fields';
  avg?: Maybe<Movechange_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Movechange_Max_Fields>;
  min?: Maybe<Movechange_Min_Fields>;
  stddev?: Maybe<Movechange_Stddev_Fields>;
  stddev_pop?: Maybe<Movechange_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Movechange_Stddev_Samp_Fields>;
  sum?: Maybe<Movechange_Sum_Fields>;
  var_pop?: Maybe<Movechange_Var_Pop_Fields>;
  var_samp?: Maybe<Movechange_Var_Samp_Fields>;
  variance?: Maybe<Movechange_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_movechange" */
export type Movechange_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Movechange_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_movechange" */
export type Movechange_Aggregate_Order_By = {
  avg?: InputMaybe<Movechange_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Movechange_Max_Order_By>;
  min?: InputMaybe<Movechange_Min_Order_By>;
  stddev?: InputMaybe<Movechange_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Movechange_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Movechange_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Movechange_Sum_Order_By>;
  var_pop?: InputMaybe<Movechange_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Movechange_Var_Samp_Order_By>;
  variance?: InputMaybe<Movechange_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Movechange_Avg_Fields = {
  __typename?: 'movechange_avg_fields';
  accuracy?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_effect_chance?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  power?: Maybe<Scalars['Float']['output']>;
  pp?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_movechange" */
export type Movechange_Avg_Order_By = {
  accuracy?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_effect_chance?: InputMaybe<Order_By>;
  move_effect_id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  power?: InputMaybe<Order_By>;
  pp?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_movechange". All fields are combined with a logical 'AND'. */
export type Movechange_Bool_Exp = {
  _and?: InputMaybe<Array<Movechange_Bool_Exp>>;
  _not?: InputMaybe<Movechange_Bool_Exp>;
  _or?: InputMaybe<Array<Movechange_Bool_Exp>>;
  accuracy?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  move?: InputMaybe<Move_Bool_Exp>;
  move_effect_chance?: InputMaybe<Int_Comparison_Exp>;
  move_effect_id?: InputMaybe<Int_Comparison_Exp>;
  move_id?: InputMaybe<Int_Comparison_Exp>;
  moveeffect?: InputMaybe<Moveeffect_Bool_Exp>;
  power?: InputMaybe<Int_Comparison_Exp>;
  pp?: InputMaybe<Int_Comparison_Exp>;
  type?: InputMaybe<Type_Bool_Exp>;
  type_id?: InputMaybe<Int_Comparison_Exp>;
  version_group_id?: InputMaybe<Int_Comparison_Exp>;
  versiongroup?: InputMaybe<Versiongroup_Bool_Exp>;
};

/** aggregate max on columns */
export type Movechange_Max_Fields = {
  __typename?: 'movechange_max_fields';
  accuracy?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  move_effect_chance?: Maybe<Scalars['Int']['output']>;
  move_effect_id?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
  power?: Maybe<Scalars['Int']['output']>;
  pp?: Maybe<Scalars['Int']['output']>;
  type_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_movechange" */
export type Movechange_Max_Order_By = {
  accuracy?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_effect_chance?: InputMaybe<Order_By>;
  move_effect_id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  power?: InputMaybe<Order_By>;
  pp?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Movechange_Min_Fields = {
  __typename?: 'movechange_min_fields';
  accuracy?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  move_effect_chance?: Maybe<Scalars['Int']['output']>;
  move_effect_id?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
  power?: Maybe<Scalars['Int']['output']>;
  pp?: Maybe<Scalars['Int']['output']>;
  type_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_movechange" */
export type Movechange_Min_Order_By = {
  accuracy?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_effect_chance?: InputMaybe<Order_By>;
  move_effect_id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  power?: InputMaybe<Order_By>;
  pp?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_movechange". */
export type Movechange_Order_By = {
  accuracy?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move?: InputMaybe<Move_Order_By>;
  move_effect_chance?: InputMaybe<Order_By>;
  move_effect_id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  moveeffect?: InputMaybe<Moveeffect_Order_By>;
  power?: InputMaybe<Order_By>;
  pp?: InputMaybe<Order_By>;
  type?: InputMaybe<Type_Order_By>;
  type_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
  versiongroup?: InputMaybe<Versiongroup_Order_By>;
};

/** select columns of table "pokemon_v2_movechange" */
export enum Movechange_Select_Column {
  /** column name */
  Accuracy = 'accuracy',
  /** column name */
  Id = 'id',
  /** column name */
  MoveEffectChance = 'move_effect_chance',
  /** column name */
  MoveEffectId = 'move_effect_id',
  /** column name */
  MoveId = 'move_id',
  /** column name */
  Power = 'power',
  /** column name */
  Pp = 'pp',
  /** column name */
  TypeId = 'type_id',
  /** column name */
  VersionGroupId = 'version_group_id'
}

/** aggregate stddev on columns */
export type Movechange_Stddev_Fields = {
  __typename?: 'movechange_stddev_fields';
  accuracy?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_effect_chance?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  power?: Maybe<Scalars['Float']['output']>;
  pp?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_movechange" */
export type Movechange_Stddev_Order_By = {
  accuracy?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_effect_chance?: InputMaybe<Order_By>;
  move_effect_id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  power?: InputMaybe<Order_By>;
  pp?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Movechange_Stddev_Pop_Fields = {
  __typename?: 'movechange_stddev_pop_fields';
  accuracy?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_effect_chance?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  power?: Maybe<Scalars['Float']['output']>;
  pp?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_movechange" */
export type Movechange_Stddev_Pop_Order_By = {
  accuracy?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_effect_chance?: InputMaybe<Order_By>;
  move_effect_id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  power?: InputMaybe<Order_By>;
  pp?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Movechange_Stddev_Samp_Fields = {
  __typename?: 'movechange_stddev_samp_fields';
  accuracy?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_effect_chance?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  power?: Maybe<Scalars['Float']['output']>;
  pp?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_movechange" */
export type Movechange_Stddev_Samp_Order_By = {
  accuracy?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_effect_chance?: InputMaybe<Order_By>;
  move_effect_id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  power?: InputMaybe<Order_By>;
  pp?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Movechange_Sum_Fields = {
  __typename?: 'movechange_sum_fields';
  accuracy?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  move_effect_chance?: Maybe<Scalars['Int']['output']>;
  move_effect_id?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
  power?: Maybe<Scalars['Int']['output']>;
  pp?: Maybe<Scalars['Int']['output']>;
  type_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_movechange" */
export type Movechange_Sum_Order_By = {
  accuracy?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_effect_chance?: InputMaybe<Order_By>;
  move_effect_id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  power?: InputMaybe<Order_By>;
  pp?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Movechange_Var_Pop_Fields = {
  __typename?: 'movechange_var_pop_fields';
  accuracy?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_effect_chance?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  power?: Maybe<Scalars['Float']['output']>;
  pp?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_movechange" */
export type Movechange_Var_Pop_Order_By = {
  accuracy?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_effect_chance?: InputMaybe<Order_By>;
  move_effect_id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  power?: InputMaybe<Order_By>;
  pp?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Movechange_Var_Samp_Fields = {
  __typename?: 'movechange_var_samp_fields';
  accuracy?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_effect_chance?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  power?: Maybe<Scalars['Float']['output']>;
  pp?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_movechange" */
export type Movechange_Var_Samp_Order_By = {
  accuracy?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_effect_chance?: InputMaybe<Order_By>;
  move_effect_id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  power?: InputMaybe<Order_By>;
  pp?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Movechange_Variance_Fields = {
  __typename?: 'movechange_variance_fields';
  accuracy?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_effect_chance?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  power?: Maybe<Scalars['Float']['output']>;
  pp?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_movechange" */
export type Movechange_Variance_Order_By = {
  accuracy?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_effect_chance?: InputMaybe<Order_By>;
  move_effect_id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  power?: InputMaybe<Order_By>;
  pp?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_movedamageclass" */
export type Movedamageclass = {
  __typename?: 'movedamageclass';
  id: Scalars['Int']['output'];
  /** An array relationship */
  movedamageclassdescriptions: Array<Movedamageclassdescription>;
  /** An aggregate relationship */
  movedamageclassdescriptions_aggregate: Movedamageclassdescription_Aggregate;
  /** An array relationship */
  movedamageclassnames: Array<Movedamageclassname>;
  /** An aggregate relationship */
  movedamageclassnames_aggregate: Movedamageclassname_Aggregate;
  /** An array relationship */
  moves: Array<Move>;
  /** An aggregate relationship */
  moves_aggregate: Move_Aggregate;
  name: Scalars['String']['output'];
  /** An array relationship */
  stats: Array<Stat>;
  /** An aggregate relationship */
  stats_aggregate: Stat_Aggregate;
  /** An array relationship */
  types: Array<Type>;
  /** An aggregate relationship */
  types_aggregate: Type_Aggregate;
};


/** columns and relationships of "pokemon_v2_movedamageclass" */
export type MovedamageclassMovedamageclassdescriptionsArgs = {
  distinct_on?: InputMaybe<Array<Movedamageclassdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movedamageclassdescription_Order_By>>;
  where?: InputMaybe<Movedamageclassdescription_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_movedamageclass" */
export type MovedamageclassMovedamageclassdescriptions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Movedamageclassdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movedamageclassdescription_Order_By>>;
  where?: InputMaybe<Movedamageclassdescription_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_movedamageclass" */
export type MovedamageclassMovedamageclassnamesArgs = {
  distinct_on?: InputMaybe<Array<Movedamageclassname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movedamageclassname_Order_By>>;
  where?: InputMaybe<Movedamageclassname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_movedamageclass" */
export type MovedamageclassMovedamageclassnames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Movedamageclassname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movedamageclassname_Order_By>>;
  where?: InputMaybe<Movedamageclassname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_movedamageclass" */
export type MovedamageclassMovesArgs = {
  distinct_on?: InputMaybe<Array<Move_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Move_Order_By>>;
  where?: InputMaybe<Move_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_movedamageclass" */
export type MovedamageclassMoves_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Move_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Move_Order_By>>;
  where?: InputMaybe<Move_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_movedamageclass" */
export type MovedamageclassStatsArgs = {
  distinct_on?: InputMaybe<Array<Stat_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Stat_Order_By>>;
  where?: InputMaybe<Stat_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_movedamageclass" */
export type MovedamageclassStats_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Stat_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Stat_Order_By>>;
  where?: InputMaybe<Stat_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_movedamageclass" */
export type MovedamageclassTypesArgs = {
  distinct_on?: InputMaybe<Array<Type_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Type_Order_By>>;
  where?: InputMaybe<Type_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_movedamageclass" */
export type MovedamageclassTypes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Type_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Type_Order_By>>;
  where?: InputMaybe<Type_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_movedamageclass" */
export type Movedamageclass_Aggregate = {
  __typename?: 'movedamageclass_aggregate';
  aggregate?: Maybe<Movedamageclass_Aggregate_Fields>;
  nodes: Array<Movedamageclass>;
};

/** aggregate fields of "pokemon_v2_movedamageclass" */
export type Movedamageclass_Aggregate_Fields = {
  __typename?: 'movedamageclass_aggregate_fields';
  avg?: Maybe<Movedamageclass_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Movedamageclass_Max_Fields>;
  min?: Maybe<Movedamageclass_Min_Fields>;
  stddev?: Maybe<Movedamageclass_Stddev_Fields>;
  stddev_pop?: Maybe<Movedamageclass_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Movedamageclass_Stddev_Samp_Fields>;
  sum?: Maybe<Movedamageclass_Sum_Fields>;
  var_pop?: Maybe<Movedamageclass_Var_Pop_Fields>;
  var_samp?: Maybe<Movedamageclass_Var_Samp_Fields>;
  variance?: Maybe<Movedamageclass_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_movedamageclass" */
export type Movedamageclass_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Movedamageclass_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Movedamageclass_Avg_Fields = {
  __typename?: 'movedamageclass_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_movedamageclass". All fields are combined with a logical 'AND'. */
export type Movedamageclass_Bool_Exp = {
  _and?: InputMaybe<Array<Movedamageclass_Bool_Exp>>;
  _not?: InputMaybe<Movedamageclass_Bool_Exp>;
  _or?: InputMaybe<Array<Movedamageclass_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  movedamageclassdescriptions?: InputMaybe<Movedamageclassdescription_Bool_Exp>;
  movedamageclassdescriptions_aggregate?: InputMaybe<Movedamageclassdescription_Aggregate_Bool_Exp>;
  movedamageclassnames?: InputMaybe<Movedamageclassname_Bool_Exp>;
  movedamageclassnames_aggregate?: InputMaybe<Movedamageclassname_Aggregate_Bool_Exp>;
  moves?: InputMaybe<Move_Bool_Exp>;
  moves_aggregate?: InputMaybe<Move_Aggregate_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  stats?: InputMaybe<Stat_Bool_Exp>;
  stats_aggregate?: InputMaybe<Stat_Aggregate_Bool_Exp>;
  types?: InputMaybe<Type_Bool_Exp>;
  types_aggregate?: InputMaybe<Type_Aggregate_Bool_Exp>;
};

/** aggregate max on columns */
export type Movedamageclass_Max_Fields = {
  __typename?: 'movedamageclass_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Movedamageclass_Min_Fields = {
  __typename?: 'movedamageclass_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** Ordering options when selecting data from "pokemon_v2_movedamageclass". */
export type Movedamageclass_Order_By = {
  id?: InputMaybe<Order_By>;
  movedamageclassdescriptions_aggregate?: InputMaybe<Movedamageclassdescription_Aggregate_Order_By>;
  movedamageclassnames_aggregate?: InputMaybe<Movedamageclassname_Aggregate_Order_By>;
  moves_aggregate?: InputMaybe<Move_Aggregate_Order_By>;
  name?: InputMaybe<Order_By>;
  stats_aggregate?: InputMaybe<Stat_Aggregate_Order_By>;
  types_aggregate?: InputMaybe<Type_Aggregate_Order_By>;
};

/** select columns of table "pokemon_v2_movedamageclass" */
export enum Movedamageclass_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Movedamageclass_Stddev_Fields = {
  __typename?: 'movedamageclass_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Movedamageclass_Stddev_Pop_Fields = {
  __typename?: 'movedamageclass_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Movedamageclass_Stddev_Samp_Fields = {
  __typename?: 'movedamageclass_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate sum on columns */
export type Movedamageclass_Sum_Fields = {
  __typename?: 'movedamageclass_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate var_pop on columns */
export type Movedamageclass_Var_Pop_Fields = {
  __typename?: 'movedamageclass_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Movedamageclass_Var_Samp_Fields = {
  __typename?: 'movedamageclass_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Movedamageclass_Variance_Fields = {
  __typename?: 'movedamageclass_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_movedamageclassdescription" */
export type Movedamageclassdescription = {
  __typename?: 'movedamageclassdescription';
  description: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_damage_class_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  movedamageclass?: Maybe<Movedamageclass>;
};

/** aggregated selection of "pokemon_v2_movedamageclassdescription" */
export type Movedamageclassdescription_Aggregate = {
  __typename?: 'movedamageclassdescription_aggregate';
  aggregate?: Maybe<Movedamageclassdescription_Aggregate_Fields>;
  nodes: Array<Movedamageclassdescription>;
};

export type Movedamageclassdescription_Aggregate_Bool_Exp = {
  count?: InputMaybe<Movedamageclassdescription_Aggregate_Bool_Exp_Count>;
};

export type Movedamageclassdescription_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Movedamageclassdescription_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Movedamageclassdescription_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_movedamageclassdescription" */
export type Movedamageclassdescription_Aggregate_Fields = {
  __typename?: 'movedamageclassdescription_aggregate_fields';
  avg?: Maybe<Movedamageclassdescription_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Movedamageclassdescription_Max_Fields>;
  min?: Maybe<Movedamageclassdescription_Min_Fields>;
  stddev?: Maybe<Movedamageclassdescription_Stddev_Fields>;
  stddev_pop?: Maybe<Movedamageclassdescription_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Movedamageclassdescription_Stddev_Samp_Fields>;
  sum?: Maybe<Movedamageclassdescription_Sum_Fields>;
  var_pop?: Maybe<Movedamageclassdescription_Var_Pop_Fields>;
  var_samp?: Maybe<Movedamageclassdescription_Var_Samp_Fields>;
  variance?: Maybe<Movedamageclassdescription_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_movedamageclassdescription" */
export type Movedamageclassdescription_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Movedamageclassdescription_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_movedamageclassdescription" */
export type Movedamageclassdescription_Aggregate_Order_By = {
  avg?: InputMaybe<Movedamageclassdescription_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Movedamageclassdescription_Max_Order_By>;
  min?: InputMaybe<Movedamageclassdescription_Min_Order_By>;
  stddev?: InputMaybe<Movedamageclassdescription_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Movedamageclassdescription_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Movedamageclassdescription_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Movedamageclassdescription_Sum_Order_By>;
  var_pop?: InputMaybe<Movedamageclassdescription_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Movedamageclassdescription_Var_Samp_Order_By>;
  variance?: InputMaybe<Movedamageclassdescription_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Movedamageclassdescription_Avg_Fields = {
  __typename?: 'movedamageclassdescription_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_movedamageclassdescription" */
export type Movedamageclassdescription_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_movedamageclassdescription". All fields are combined with a logical 'AND'. */
export type Movedamageclassdescription_Bool_Exp = {
  _and?: InputMaybe<Array<Movedamageclassdescription_Bool_Exp>>;
  _not?: InputMaybe<Movedamageclassdescription_Bool_Exp>;
  _or?: InputMaybe<Array<Movedamageclassdescription_Bool_Exp>>;
  description?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  move_damage_class_id?: InputMaybe<Int_Comparison_Exp>;
  movedamageclass?: InputMaybe<Movedamageclass_Bool_Exp>;
};

/** aggregate max on columns */
export type Movedamageclassdescription_Max_Fields = {
  __typename?: 'movedamageclassdescription_max_fields';
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_damage_class_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_movedamageclassdescription" */
export type Movedamageclassdescription_Max_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Movedamageclassdescription_Min_Fields = {
  __typename?: 'movedamageclassdescription_min_fields';
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_damage_class_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_movedamageclassdescription" */
export type Movedamageclassdescription_Min_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_movedamageclassdescription". */
export type Movedamageclassdescription_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
  movedamageclass?: InputMaybe<Movedamageclass_Order_By>;
};

/** select columns of table "pokemon_v2_movedamageclassdescription" */
export enum Movedamageclassdescription_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  MoveDamageClassId = 'move_damage_class_id'
}

/** aggregate stddev on columns */
export type Movedamageclassdescription_Stddev_Fields = {
  __typename?: 'movedamageclassdescription_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_movedamageclassdescription" */
export type Movedamageclassdescription_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Movedamageclassdescription_Stddev_Pop_Fields = {
  __typename?: 'movedamageclassdescription_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_movedamageclassdescription" */
export type Movedamageclassdescription_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Movedamageclassdescription_Stddev_Samp_Fields = {
  __typename?: 'movedamageclassdescription_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_movedamageclassdescription" */
export type Movedamageclassdescription_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Movedamageclassdescription_Sum_Fields = {
  __typename?: 'movedamageclassdescription_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_damage_class_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_movedamageclassdescription" */
export type Movedamageclassdescription_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Movedamageclassdescription_Var_Pop_Fields = {
  __typename?: 'movedamageclassdescription_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_movedamageclassdescription" */
export type Movedamageclassdescription_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Movedamageclassdescription_Var_Samp_Fields = {
  __typename?: 'movedamageclassdescription_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_movedamageclassdescription" */
export type Movedamageclassdescription_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Movedamageclassdescription_Variance_Fields = {
  __typename?: 'movedamageclassdescription_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_movedamageclassdescription" */
export type Movedamageclassdescription_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_movedamageclassname" */
export type Movedamageclassname = {
  __typename?: 'movedamageclassname';
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_damage_class_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  movedamageclass?: Maybe<Movedamageclass>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_movedamageclassname" */
export type Movedamageclassname_Aggregate = {
  __typename?: 'movedamageclassname_aggregate';
  aggregate?: Maybe<Movedamageclassname_Aggregate_Fields>;
  nodes: Array<Movedamageclassname>;
};

export type Movedamageclassname_Aggregate_Bool_Exp = {
  count?: InputMaybe<Movedamageclassname_Aggregate_Bool_Exp_Count>;
};

export type Movedamageclassname_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Movedamageclassname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Movedamageclassname_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_movedamageclassname" */
export type Movedamageclassname_Aggregate_Fields = {
  __typename?: 'movedamageclassname_aggregate_fields';
  avg?: Maybe<Movedamageclassname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Movedamageclassname_Max_Fields>;
  min?: Maybe<Movedamageclassname_Min_Fields>;
  stddev?: Maybe<Movedamageclassname_Stddev_Fields>;
  stddev_pop?: Maybe<Movedamageclassname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Movedamageclassname_Stddev_Samp_Fields>;
  sum?: Maybe<Movedamageclassname_Sum_Fields>;
  var_pop?: Maybe<Movedamageclassname_Var_Pop_Fields>;
  var_samp?: Maybe<Movedamageclassname_Var_Samp_Fields>;
  variance?: Maybe<Movedamageclassname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_movedamageclassname" */
export type Movedamageclassname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Movedamageclassname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_movedamageclassname" */
export type Movedamageclassname_Aggregate_Order_By = {
  avg?: InputMaybe<Movedamageclassname_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Movedamageclassname_Max_Order_By>;
  min?: InputMaybe<Movedamageclassname_Min_Order_By>;
  stddev?: InputMaybe<Movedamageclassname_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Movedamageclassname_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Movedamageclassname_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Movedamageclassname_Sum_Order_By>;
  var_pop?: InputMaybe<Movedamageclassname_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Movedamageclassname_Var_Samp_Order_By>;
  variance?: InputMaybe<Movedamageclassname_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Movedamageclassname_Avg_Fields = {
  __typename?: 'movedamageclassname_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_movedamageclassname" */
export type Movedamageclassname_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_movedamageclassname". All fields are combined with a logical 'AND'. */
export type Movedamageclassname_Bool_Exp = {
  _and?: InputMaybe<Array<Movedamageclassname_Bool_Exp>>;
  _not?: InputMaybe<Movedamageclassname_Bool_Exp>;
  _or?: InputMaybe<Array<Movedamageclassname_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  move_damage_class_id?: InputMaybe<Int_Comparison_Exp>;
  movedamageclass?: InputMaybe<Movedamageclass_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** aggregate max on columns */
export type Movedamageclassname_Max_Fields = {
  __typename?: 'movedamageclassname_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_damage_class_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "pokemon_v2_movedamageclassname" */
export type Movedamageclassname_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Movedamageclassname_Min_Fields = {
  __typename?: 'movedamageclassname_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_damage_class_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "pokemon_v2_movedamageclassname" */
export type Movedamageclassname_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_movedamageclassname". */
export type Movedamageclassname_Order_By = {
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
  movedamageclass?: InputMaybe<Movedamageclass_Order_By>;
  name?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_movedamageclassname" */
export enum Movedamageclassname_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  MoveDamageClassId = 'move_damage_class_id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Movedamageclassname_Stddev_Fields = {
  __typename?: 'movedamageclassname_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_movedamageclassname" */
export type Movedamageclassname_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Movedamageclassname_Stddev_Pop_Fields = {
  __typename?: 'movedamageclassname_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_movedamageclassname" */
export type Movedamageclassname_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Movedamageclassname_Stddev_Samp_Fields = {
  __typename?: 'movedamageclassname_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_movedamageclassname" */
export type Movedamageclassname_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Movedamageclassname_Sum_Fields = {
  __typename?: 'movedamageclassname_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_damage_class_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_movedamageclassname" */
export type Movedamageclassname_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Movedamageclassname_Var_Pop_Fields = {
  __typename?: 'movedamageclassname_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_movedamageclassname" */
export type Movedamageclassname_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Movedamageclassname_Var_Samp_Fields = {
  __typename?: 'movedamageclassname_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_movedamageclassname" */
export type Movedamageclassname_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Movedamageclassname_Variance_Fields = {
  __typename?: 'movedamageclassname_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_movedamageclassname" */
export type Movedamageclassname_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_moveeffect" */
export type Moveeffect = {
  __typename?: 'moveeffect';
  id: Scalars['Int']['output'];
  /** An array relationship */
  movechanges: Array<Movechange>;
  /** An aggregate relationship */
  movechanges_aggregate: Movechange_Aggregate;
  /** An array relationship */
  moveeffectchanges: Array<Moveeffectchange>;
  /** An aggregate relationship */
  moveeffectchanges_aggregate: Moveeffectchange_Aggregate;
  /** An array relationship */
  moveeffecteffecttexts: Array<Moveeffecteffecttext>;
  /** An aggregate relationship */
  moveeffecteffecttexts_aggregate: Moveeffecteffecttext_Aggregate;
  /** An array relationship */
  moves: Array<Move>;
  /** An aggregate relationship */
  moves_aggregate: Move_Aggregate;
};


/** columns and relationships of "pokemon_v2_moveeffect" */
export type MoveeffectMovechangesArgs = {
  distinct_on?: InputMaybe<Array<Movechange_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movechange_Order_By>>;
  where?: InputMaybe<Movechange_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_moveeffect" */
export type MoveeffectMovechanges_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Movechange_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movechange_Order_By>>;
  where?: InputMaybe<Movechange_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_moveeffect" */
export type MoveeffectMoveeffectchangesArgs = {
  distinct_on?: InputMaybe<Array<Moveeffectchange_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Moveeffectchange_Order_By>>;
  where?: InputMaybe<Moveeffectchange_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_moveeffect" */
export type MoveeffectMoveeffectchanges_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Moveeffectchange_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Moveeffectchange_Order_By>>;
  where?: InputMaybe<Moveeffectchange_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_moveeffect" */
export type MoveeffectMoveeffecteffecttextsArgs = {
  distinct_on?: InputMaybe<Array<Moveeffecteffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Moveeffecteffecttext_Order_By>>;
  where?: InputMaybe<Moveeffecteffecttext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_moveeffect" */
export type MoveeffectMoveeffecteffecttexts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Moveeffecteffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Moveeffecteffecttext_Order_By>>;
  where?: InputMaybe<Moveeffecteffecttext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_moveeffect" */
export type MoveeffectMovesArgs = {
  distinct_on?: InputMaybe<Array<Move_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Move_Order_By>>;
  where?: InputMaybe<Move_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_moveeffect" */
export type MoveeffectMoves_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Move_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Move_Order_By>>;
  where?: InputMaybe<Move_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_moveeffect" */
export type Moveeffect_Aggregate = {
  __typename?: 'moveeffect_aggregate';
  aggregate?: Maybe<Moveeffect_Aggregate_Fields>;
  nodes: Array<Moveeffect>;
};

/** aggregate fields of "pokemon_v2_moveeffect" */
export type Moveeffect_Aggregate_Fields = {
  __typename?: 'moveeffect_aggregate_fields';
  avg?: Maybe<Moveeffect_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Moveeffect_Max_Fields>;
  min?: Maybe<Moveeffect_Min_Fields>;
  stddev?: Maybe<Moveeffect_Stddev_Fields>;
  stddev_pop?: Maybe<Moveeffect_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Moveeffect_Stddev_Samp_Fields>;
  sum?: Maybe<Moveeffect_Sum_Fields>;
  var_pop?: Maybe<Moveeffect_Var_Pop_Fields>;
  var_samp?: Maybe<Moveeffect_Var_Samp_Fields>;
  variance?: Maybe<Moveeffect_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_moveeffect" */
export type Moveeffect_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Moveeffect_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Moveeffect_Avg_Fields = {
  __typename?: 'moveeffect_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_moveeffect". All fields are combined with a logical 'AND'. */
export type Moveeffect_Bool_Exp = {
  _and?: InputMaybe<Array<Moveeffect_Bool_Exp>>;
  _not?: InputMaybe<Moveeffect_Bool_Exp>;
  _or?: InputMaybe<Array<Moveeffect_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  movechanges?: InputMaybe<Movechange_Bool_Exp>;
  movechanges_aggregate?: InputMaybe<Movechange_Aggregate_Bool_Exp>;
  moveeffectchanges?: InputMaybe<Moveeffectchange_Bool_Exp>;
  moveeffectchanges_aggregate?: InputMaybe<Moveeffectchange_Aggregate_Bool_Exp>;
  moveeffecteffecttexts?: InputMaybe<Moveeffecteffecttext_Bool_Exp>;
  moveeffecteffecttexts_aggregate?: InputMaybe<Moveeffecteffecttext_Aggregate_Bool_Exp>;
  moves?: InputMaybe<Move_Bool_Exp>;
  moves_aggregate?: InputMaybe<Move_Aggregate_Bool_Exp>;
};

/** aggregate max on columns */
export type Moveeffect_Max_Fields = {
  __typename?: 'moveeffect_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Moveeffect_Min_Fields = {
  __typename?: 'moveeffect_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** Ordering options when selecting data from "pokemon_v2_moveeffect". */
export type Moveeffect_Order_By = {
  id?: InputMaybe<Order_By>;
  movechanges_aggregate?: InputMaybe<Movechange_Aggregate_Order_By>;
  moveeffectchanges_aggregate?: InputMaybe<Moveeffectchange_Aggregate_Order_By>;
  moveeffecteffecttexts_aggregate?: InputMaybe<Moveeffecteffecttext_Aggregate_Order_By>;
  moves_aggregate?: InputMaybe<Move_Aggregate_Order_By>;
};

/** select columns of table "pokemon_v2_moveeffect" */
export enum Moveeffect_Select_Column {
  /** column name */
  Id = 'id'
}

/** aggregate stddev on columns */
export type Moveeffect_Stddev_Fields = {
  __typename?: 'moveeffect_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Moveeffect_Stddev_Pop_Fields = {
  __typename?: 'moveeffect_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Moveeffect_Stddev_Samp_Fields = {
  __typename?: 'moveeffect_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate sum on columns */
export type Moveeffect_Sum_Fields = {
  __typename?: 'moveeffect_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate var_pop on columns */
export type Moveeffect_Var_Pop_Fields = {
  __typename?: 'moveeffect_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Moveeffect_Var_Samp_Fields = {
  __typename?: 'moveeffect_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Moveeffect_Variance_Fields = {
  __typename?: 'moveeffect_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_moveeffectchange" */
export type Moveeffectchange = {
  __typename?: 'moveeffectchange';
  id: Scalars['Int']['output'];
  move_effect_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  moveeffect?: Maybe<Moveeffect>;
  /** An array relationship */
  moveeffectchangeeffecttexts: Array<Moveeffectchangeeffecttext>;
  /** An aggregate relationship */
  moveeffectchangeeffecttexts_aggregate: Moveeffectchangeeffecttext_Aggregate;
  version_group_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  versiongroup?: Maybe<Versiongroup>;
};


/** columns and relationships of "pokemon_v2_moveeffectchange" */
export type MoveeffectchangeMoveeffectchangeeffecttextsArgs = {
  distinct_on?: InputMaybe<Array<Moveeffectchangeeffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Moveeffectchangeeffecttext_Order_By>>;
  where?: InputMaybe<Moveeffectchangeeffecttext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_moveeffectchange" */
export type MoveeffectchangeMoveeffectchangeeffecttexts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Moveeffectchangeeffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Moveeffectchangeeffecttext_Order_By>>;
  where?: InputMaybe<Moveeffectchangeeffecttext_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_moveeffectchange" */
export type Moveeffectchange_Aggregate = {
  __typename?: 'moveeffectchange_aggregate';
  aggregate?: Maybe<Moveeffectchange_Aggregate_Fields>;
  nodes: Array<Moveeffectchange>;
};

export type Moveeffectchange_Aggregate_Bool_Exp = {
  count?: InputMaybe<Moveeffectchange_Aggregate_Bool_Exp_Count>;
};

export type Moveeffectchange_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Moveeffectchange_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Moveeffectchange_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_moveeffectchange" */
export type Moveeffectchange_Aggregate_Fields = {
  __typename?: 'moveeffectchange_aggregate_fields';
  avg?: Maybe<Moveeffectchange_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Moveeffectchange_Max_Fields>;
  min?: Maybe<Moveeffectchange_Min_Fields>;
  stddev?: Maybe<Moveeffectchange_Stddev_Fields>;
  stddev_pop?: Maybe<Moveeffectchange_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Moveeffectchange_Stddev_Samp_Fields>;
  sum?: Maybe<Moveeffectchange_Sum_Fields>;
  var_pop?: Maybe<Moveeffectchange_Var_Pop_Fields>;
  var_samp?: Maybe<Moveeffectchange_Var_Samp_Fields>;
  variance?: Maybe<Moveeffectchange_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_moveeffectchange" */
export type Moveeffectchange_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Moveeffectchange_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_moveeffectchange" */
export type Moveeffectchange_Aggregate_Order_By = {
  avg?: InputMaybe<Moveeffectchange_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Moveeffectchange_Max_Order_By>;
  min?: InputMaybe<Moveeffectchange_Min_Order_By>;
  stddev?: InputMaybe<Moveeffectchange_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Moveeffectchange_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Moveeffectchange_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Moveeffectchange_Sum_Order_By>;
  var_pop?: InputMaybe<Moveeffectchange_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Moveeffectchange_Var_Samp_Order_By>;
  variance?: InputMaybe<Moveeffectchange_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Moveeffectchange_Avg_Fields = {
  __typename?: 'moveeffectchange_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_moveeffectchange" */
export type Moveeffectchange_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  move_effect_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_moveeffectchange". All fields are combined with a logical 'AND'. */
export type Moveeffectchange_Bool_Exp = {
  _and?: InputMaybe<Array<Moveeffectchange_Bool_Exp>>;
  _not?: InputMaybe<Moveeffectchange_Bool_Exp>;
  _or?: InputMaybe<Array<Moveeffectchange_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  move_effect_id?: InputMaybe<Int_Comparison_Exp>;
  moveeffect?: InputMaybe<Moveeffect_Bool_Exp>;
  moveeffectchangeeffecttexts?: InputMaybe<Moveeffectchangeeffecttext_Bool_Exp>;
  moveeffectchangeeffecttexts_aggregate?: InputMaybe<Moveeffectchangeeffecttext_Aggregate_Bool_Exp>;
  version_group_id?: InputMaybe<Int_Comparison_Exp>;
  versiongroup?: InputMaybe<Versiongroup_Bool_Exp>;
};

/** aggregate max on columns */
export type Moveeffectchange_Max_Fields = {
  __typename?: 'moveeffectchange_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  move_effect_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_moveeffectchange" */
export type Moveeffectchange_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  move_effect_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Moveeffectchange_Min_Fields = {
  __typename?: 'moveeffectchange_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  move_effect_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_moveeffectchange" */
export type Moveeffectchange_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  move_effect_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_moveeffectchange". */
export type Moveeffectchange_Order_By = {
  id?: InputMaybe<Order_By>;
  move_effect_id?: InputMaybe<Order_By>;
  moveeffect?: InputMaybe<Moveeffect_Order_By>;
  moveeffectchangeeffecttexts_aggregate?: InputMaybe<Moveeffectchangeeffecttext_Aggregate_Order_By>;
  version_group_id?: InputMaybe<Order_By>;
  versiongroup?: InputMaybe<Versiongroup_Order_By>;
};

/** select columns of table "pokemon_v2_moveeffectchange" */
export enum Moveeffectchange_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  MoveEffectId = 'move_effect_id',
  /** column name */
  VersionGroupId = 'version_group_id'
}

/** aggregate stddev on columns */
export type Moveeffectchange_Stddev_Fields = {
  __typename?: 'moveeffectchange_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_moveeffectchange" */
export type Moveeffectchange_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  move_effect_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Moveeffectchange_Stddev_Pop_Fields = {
  __typename?: 'moveeffectchange_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_moveeffectchange" */
export type Moveeffectchange_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  move_effect_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Moveeffectchange_Stddev_Samp_Fields = {
  __typename?: 'moveeffectchange_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_moveeffectchange" */
export type Moveeffectchange_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  move_effect_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Moveeffectchange_Sum_Fields = {
  __typename?: 'moveeffectchange_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  move_effect_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_moveeffectchange" */
export type Moveeffectchange_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  move_effect_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Moveeffectchange_Var_Pop_Fields = {
  __typename?: 'moveeffectchange_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_moveeffectchange" */
export type Moveeffectchange_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  move_effect_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Moveeffectchange_Var_Samp_Fields = {
  __typename?: 'moveeffectchange_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_moveeffectchange" */
export type Moveeffectchange_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  move_effect_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Moveeffectchange_Variance_Fields = {
  __typename?: 'moveeffectchange_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_moveeffectchange" */
export type Moveeffectchange_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  move_effect_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_moveeffectchangeeffecttext" */
export type Moveeffectchangeeffecttext = {
  __typename?: 'moveeffectchangeeffecttext';
  effect: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_effect_change_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  moveeffectchange?: Maybe<Moveeffectchange>;
};

/** aggregated selection of "pokemon_v2_moveeffectchangeeffecttext" */
export type Moveeffectchangeeffecttext_Aggregate = {
  __typename?: 'moveeffectchangeeffecttext_aggregate';
  aggregate?: Maybe<Moveeffectchangeeffecttext_Aggregate_Fields>;
  nodes: Array<Moveeffectchangeeffecttext>;
};

export type Moveeffectchangeeffecttext_Aggregate_Bool_Exp = {
  count?: InputMaybe<Moveeffectchangeeffecttext_Aggregate_Bool_Exp_Count>;
};

export type Moveeffectchangeeffecttext_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Moveeffectchangeeffecttext_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Moveeffectchangeeffecttext_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_moveeffectchangeeffecttext" */
export type Moveeffectchangeeffecttext_Aggregate_Fields = {
  __typename?: 'moveeffectchangeeffecttext_aggregate_fields';
  avg?: Maybe<Moveeffectchangeeffecttext_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Moveeffectchangeeffecttext_Max_Fields>;
  min?: Maybe<Moveeffectchangeeffecttext_Min_Fields>;
  stddev?: Maybe<Moveeffectchangeeffecttext_Stddev_Fields>;
  stddev_pop?: Maybe<Moveeffectchangeeffecttext_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Moveeffectchangeeffecttext_Stddev_Samp_Fields>;
  sum?: Maybe<Moveeffectchangeeffecttext_Sum_Fields>;
  var_pop?: Maybe<Moveeffectchangeeffecttext_Var_Pop_Fields>;
  var_samp?: Maybe<Moveeffectchangeeffecttext_Var_Samp_Fields>;
  variance?: Maybe<Moveeffectchangeeffecttext_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_moveeffectchangeeffecttext" */
export type Moveeffectchangeeffecttext_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Moveeffectchangeeffecttext_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_moveeffectchangeeffecttext" */
export type Moveeffectchangeeffecttext_Aggregate_Order_By = {
  avg?: InputMaybe<Moveeffectchangeeffecttext_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Moveeffectchangeeffecttext_Max_Order_By>;
  min?: InputMaybe<Moveeffectchangeeffecttext_Min_Order_By>;
  stddev?: InputMaybe<Moveeffectchangeeffecttext_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Moveeffectchangeeffecttext_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Moveeffectchangeeffecttext_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Moveeffectchangeeffecttext_Sum_Order_By>;
  var_pop?: InputMaybe<Moveeffectchangeeffecttext_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Moveeffectchangeeffecttext_Var_Samp_Order_By>;
  variance?: InputMaybe<Moveeffectchangeeffecttext_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Moveeffectchangeeffecttext_Avg_Fields = {
  __typename?: 'moveeffectchangeeffecttext_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_effect_change_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_moveeffectchangeeffecttext" */
export type Moveeffectchangeeffecttext_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_effect_change_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_moveeffectchangeeffecttext". All fields are combined with a logical 'AND'. */
export type Moveeffectchangeeffecttext_Bool_Exp = {
  _and?: InputMaybe<Array<Moveeffectchangeeffecttext_Bool_Exp>>;
  _not?: InputMaybe<Moveeffectchangeeffecttext_Bool_Exp>;
  _or?: InputMaybe<Array<Moveeffectchangeeffecttext_Bool_Exp>>;
  effect?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  move_effect_change_id?: InputMaybe<Int_Comparison_Exp>;
  moveeffectchange?: InputMaybe<Moveeffectchange_Bool_Exp>;
};

/** aggregate max on columns */
export type Moveeffectchangeeffecttext_Max_Fields = {
  __typename?: 'moveeffectchangeeffecttext_max_fields';
  effect?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_effect_change_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_moveeffectchangeeffecttext" */
export type Moveeffectchangeeffecttext_Max_Order_By = {
  effect?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_effect_change_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Moveeffectchangeeffecttext_Min_Fields = {
  __typename?: 'moveeffectchangeeffecttext_min_fields';
  effect?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_effect_change_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_moveeffectchangeeffecttext" */
export type Moveeffectchangeeffecttext_Min_Order_By = {
  effect?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_effect_change_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_moveeffectchangeeffecttext". */
export type Moveeffectchangeeffecttext_Order_By = {
  effect?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_effect_change_id?: InputMaybe<Order_By>;
  moveeffectchange?: InputMaybe<Moveeffectchange_Order_By>;
};

/** select columns of table "pokemon_v2_moveeffectchangeeffecttext" */
export enum Moveeffectchangeeffecttext_Select_Column {
  /** column name */
  Effect = 'effect',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  MoveEffectChangeId = 'move_effect_change_id'
}

/** aggregate stddev on columns */
export type Moveeffectchangeeffecttext_Stddev_Fields = {
  __typename?: 'moveeffectchangeeffecttext_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_effect_change_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_moveeffectchangeeffecttext" */
export type Moveeffectchangeeffecttext_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_effect_change_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Moveeffectchangeeffecttext_Stddev_Pop_Fields = {
  __typename?: 'moveeffectchangeeffecttext_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_effect_change_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_moveeffectchangeeffecttext" */
export type Moveeffectchangeeffecttext_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_effect_change_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Moveeffectchangeeffecttext_Stddev_Samp_Fields = {
  __typename?: 'moveeffectchangeeffecttext_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_effect_change_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_moveeffectchangeeffecttext" */
export type Moveeffectchangeeffecttext_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_effect_change_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Moveeffectchangeeffecttext_Sum_Fields = {
  __typename?: 'moveeffectchangeeffecttext_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_effect_change_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_moveeffectchangeeffecttext" */
export type Moveeffectchangeeffecttext_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_effect_change_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Moveeffectchangeeffecttext_Var_Pop_Fields = {
  __typename?: 'moveeffectchangeeffecttext_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_effect_change_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_moveeffectchangeeffecttext" */
export type Moveeffectchangeeffecttext_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_effect_change_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Moveeffectchangeeffecttext_Var_Samp_Fields = {
  __typename?: 'moveeffectchangeeffecttext_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_effect_change_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_moveeffectchangeeffecttext" */
export type Moveeffectchangeeffecttext_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_effect_change_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Moveeffectchangeeffecttext_Variance_Fields = {
  __typename?: 'moveeffectchangeeffecttext_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_effect_change_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_moveeffectchangeeffecttext" */
export type Moveeffectchangeeffecttext_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_effect_change_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_moveeffecteffecttext" */
export type Moveeffecteffecttext = {
  __typename?: 'moveeffecteffecttext';
  effect: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_effect_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  moveeffect?: Maybe<Moveeffect>;
  short_effect: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_moveeffecteffecttext" */
export type Moveeffecteffecttext_Aggregate = {
  __typename?: 'moveeffecteffecttext_aggregate';
  aggregate?: Maybe<Moveeffecteffecttext_Aggregate_Fields>;
  nodes: Array<Moveeffecteffecttext>;
};

export type Moveeffecteffecttext_Aggregate_Bool_Exp = {
  count?: InputMaybe<Moveeffecteffecttext_Aggregate_Bool_Exp_Count>;
};

export type Moveeffecteffecttext_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Moveeffecteffecttext_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Moveeffecteffecttext_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_moveeffecteffecttext" */
export type Moveeffecteffecttext_Aggregate_Fields = {
  __typename?: 'moveeffecteffecttext_aggregate_fields';
  avg?: Maybe<Moveeffecteffecttext_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Moveeffecteffecttext_Max_Fields>;
  min?: Maybe<Moveeffecteffecttext_Min_Fields>;
  stddev?: Maybe<Moveeffecteffecttext_Stddev_Fields>;
  stddev_pop?: Maybe<Moveeffecteffecttext_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Moveeffecteffecttext_Stddev_Samp_Fields>;
  sum?: Maybe<Moveeffecteffecttext_Sum_Fields>;
  var_pop?: Maybe<Moveeffecteffecttext_Var_Pop_Fields>;
  var_samp?: Maybe<Moveeffecteffecttext_Var_Samp_Fields>;
  variance?: Maybe<Moveeffecteffecttext_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_moveeffecteffecttext" */
export type Moveeffecteffecttext_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Moveeffecteffecttext_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_moveeffecteffecttext" */
export type Moveeffecteffecttext_Aggregate_Order_By = {
  avg?: InputMaybe<Moveeffecteffecttext_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Moveeffecteffecttext_Max_Order_By>;
  min?: InputMaybe<Moveeffecteffecttext_Min_Order_By>;
  stddev?: InputMaybe<Moveeffecteffecttext_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Moveeffecteffecttext_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Moveeffecteffecttext_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Moveeffecteffecttext_Sum_Order_By>;
  var_pop?: InputMaybe<Moveeffecteffecttext_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Moveeffecteffecttext_Var_Samp_Order_By>;
  variance?: InputMaybe<Moveeffecteffecttext_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Moveeffecteffecttext_Avg_Fields = {
  __typename?: 'moveeffecteffecttext_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_moveeffecteffecttext" */
export type Moveeffecteffecttext_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_effect_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_moveeffecteffecttext". All fields are combined with a logical 'AND'. */
export type Moveeffecteffecttext_Bool_Exp = {
  _and?: InputMaybe<Array<Moveeffecteffecttext_Bool_Exp>>;
  _not?: InputMaybe<Moveeffecteffecttext_Bool_Exp>;
  _or?: InputMaybe<Array<Moveeffecteffecttext_Bool_Exp>>;
  effect?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  move_effect_id?: InputMaybe<Int_Comparison_Exp>;
  moveeffect?: InputMaybe<Moveeffect_Bool_Exp>;
  short_effect?: InputMaybe<String_Comparison_Exp>;
};

/** aggregate max on columns */
export type Moveeffecteffecttext_Max_Fields = {
  __typename?: 'moveeffecteffecttext_max_fields';
  effect?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_effect_id?: Maybe<Scalars['Int']['output']>;
  short_effect?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "pokemon_v2_moveeffecteffecttext" */
export type Moveeffecteffecttext_Max_Order_By = {
  effect?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_effect_id?: InputMaybe<Order_By>;
  short_effect?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Moveeffecteffecttext_Min_Fields = {
  __typename?: 'moveeffecteffecttext_min_fields';
  effect?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_effect_id?: Maybe<Scalars['Int']['output']>;
  short_effect?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "pokemon_v2_moveeffecteffecttext" */
export type Moveeffecteffecttext_Min_Order_By = {
  effect?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_effect_id?: InputMaybe<Order_By>;
  short_effect?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_moveeffecteffecttext". */
export type Moveeffecteffecttext_Order_By = {
  effect?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_effect_id?: InputMaybe<Order_By>;
  moveeffect?: InputMaybe<Moveeffect_Order_By>;
  short_effect?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_moveeffecteffecttext" */
export enum Moveeffecteffecttext_Select_Column {
  /** column name */
  Effect = 'effect',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  MoveEffectId = 'move_effect_id',
  /** column name */
  ShortEffect = 'short_effect'
}

/** aggregate stddev on columns */
export type Moveeffecteffecttext_Stddev_Fields = {
  __typename?: 'moveeffecteffecttext_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_moveeffecteffecttext" */
export type Moveeffecteffecttext_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_effect_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Moveeffecteffecttext_Stddev_Pop_Fields = {
  __typename?: 'moveeffecteffecttext_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_moveeffecteffecttext" */
export type Moveeffecteffecttext_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_effect_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Moveeffecteffecttext_Stddev_Samp_Fields = {
  __typename?: 'moveeffecteffecttext_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_moveeffecteffecttext" */
export type Moveeffecteffecttext_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_effect_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Moveeffecteffecttext_Sum_Fields = {
  __typename?: 'moveeffecteffecttext_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_effect_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_moveeffecteffecttext" */
export type Moveeffecteffecttext_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_effect_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Moveeffecteffecttext_Var_Pop_Fields = {
  __typename?: 'moveeffecteffecttext_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_moveeffecteffecttext" */
export type Moveeffecteffecttext_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_effect_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Moveeffecteffecttext_Var_Samp_Fields = {
  __typename?: 'moveeffecteffecttext_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_moveeffecteffecttext" */
export type Moveeffecteffecttext_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_effect_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Moveeffecteffecttext_Variance_Fields = {
  __typename?: 'moveeffecteffecttext_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_effect_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_moveeffecteffecttext" */
export type Moveeffecteffecttext_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_effect_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_moveflavortext" */
export type Moveflavortext = {
  __typename?: 'moveflavortext';
  flavor_text: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  move?: Maybe<Move>;
  move_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  versiongroup?: Maybe<Versiongroup>;
};

/** aggregated selection of "pokemon_v2_moveflavortext" */
export type Moveflavortext_Aggregate = {
  __typename?: 'moveflavortext_aggregate';
  aggregate?: Maybe<Moveflavortext_Aggregate_Fields>;
  nodes: Array<Moveflavortext>;
};

export type Moveflavortext_Aggregate_Bool_Exp = {
  count?: InputMaybe<Moveflavortext_Aggregate_Bool_Exp_Count>;
};

export type Moveflavortext_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Moveflavortext_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Moveflavortext_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_moveflavortext" */
export type Moveflavortext_Aggregate_Fields = {
  __typename?: 'moveflavortext_aggregate_fields';
  avg?: Maybe<Moveflavortext_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Moveflavortext_Max_Fields>;
  min?: Maybe<Moveflavortext_Min_Fields>;
  stddev?: Maybe<Moveflavortext_Stddev_Fields>;
  stddev_pop?: Maybe<Moveflavortext_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Moveflavortext_Stddev_Samp_Fields>;
  sum?: Maybe<Moveflavortext_Sum_Fields>;
  var_pop?: Maybe<Moveflavortext_Var_Pop_Fields>;
  var_samp?: Maybe<Moveflavortext_Var_Samp_Fields>;
  variance?: Maybe<Moveflavortext_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_moveflavortext" */
export type Moveflavortext_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Moveflavortext_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_moveflavortext" */
export type Moveflavortext_Aggregate_Order_By = {
  avg?: InputMaybe<Moveflavortext_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Moveflavortext_Max_Order_By>;
  min?: InputMaybe<Moveflavortext_Min_Order_By>;
  stddev?: InputMaybe<Moveflavortext_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Moveflavortext_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Moveflavortext_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Moveflavortext_Sum_Order_By>;
  var_pop?: InputMaybe<Moveflavortext_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Moveflavortext_Var_Samp_Order_By>;
  variance?: InputMaybe<Moveflavortext_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Moveflavortext_Avg_Fields = {
  __typename?: 'moveflavortext_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_moveflavortext" */
export type Moveflavortext_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_moveflavortext". All fields are combined with a logical 'AND'. */
export type Moveflavortext_Bool_Exp = {
  _and?: InputMaybe<Array<Moveflavortext_Bool_Exp>>;
  _not?: InputMaybe<Moveflavortext_Bool_Exp>;
  _or?: InputMaybe<Array<Moveflavortext_Bool_Exp>>;
  flavor_text?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  move?: InputMaybe<Move_Bool_Exp>;
  move_id?: InputMaybe<Int_Comparison_Exp>;
  version_group_id?: InputMaybe<Int_Comparison_Exp>;
  versiongroup?: InputMaybe<Versiongroup_Bool_Exp>;
};

/** aggregate max on columns */
export type Moveflavortext_Max_Fields = {
  __typename?: 'moveflavortext_max_fields';
  flavor_text?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_moveflavortext" */
export type Moveflavortext_Max_Order_By = {
  flavor_text?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Moveflavortext_Min_Fields = {
  __typename?: 'moveflavortext_min_fields';
  flavor_text?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_moveflavortext" */
export type Moveflavortext_Min_Order_By = {
  flavor_text?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_moveflavortext". */
export type Moveflavortext_Order_By = {
  flavor_text?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  move?: InputMaybe<Move_Order_By>;
  move_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
  versiongroup?: InputMaybe<Versiongroup_Order_By>;
};

/** select columns of table "pokemon_v2_moveflavortext" */
export enum Moveflavortext_Select_Column {
  /** column name */
  FlavorText = 'flavor_text',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  MoveId = 'move_id',
  /** column name */
  VersionGroupId = 'version_group_id'
}

/** aggregate stddev on columns */
export type Moveflavortext_Stddev_Fields = {
  __typename?: 'moveflavortext_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_moveflavortext" */
export type Moveflavortext_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Moveflavortext_Stddev_Pop_Fields = {
  __typename?: 'moveflavortext_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_moveflavortext" */
export type Moveflavortext_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Moveflavortext_Stddev_Samp_Fields = {
  __typename?: 'moveflavortext_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_moveflavortext" */
export type Moveflavortext_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Moveflavortext_Sum_Fields = {
  __typename?: 'moveflavortext_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_moveflavortext" */
export type Moveflavortext_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Moveflavortext_Var_Pop_Fields = {
  __typename?: 'moveflavortext_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_moveflavortext" */
export type Moveflavortext_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Moveflavortext_Var_Samp_Fields = {
  __typename?: 'moveflavortext_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_moveflavortext" */
export type Moveflavortext_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Moveflavortext_Variance_Fields = {
  __typename?: 'moveflavortext_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_moveflavortext" */
export type Moveflavortext_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_movelearnmethod" */
export type Movelearnmethod = {
  __typename?: 'movelearnmethod';
  id: Scalars['Int']['output'];
  /** An array relationship */
  movelearnmethoddescriptions: Array<Movelearnmethoddescription>;
  /** An aggregate relationship */
  movelearnmethoddescriptions_aggregate: Movelearnmethoddescription_Aggregate;
  /** An array relationship */
  movelearnmethodnames: Array<Movelearnmethodname>;
  /** An aggregate relationship */
  movelearnmethodnames_aggregate: Movelearnmethodname_Aggregate;
  name: Scalars['String']['output'];
  /** An array relationship */
  pokemonmoves: Array<Pokemonmove>;
  /** An aggregate relationship */
  pokemonmoves_aggregate: Pokemonmove_Aggregate;
  /** An array relationship */
  versiongroupmovelearnmethods: Array<Versiongroupmovelearnmethod>;
  /** An aggregate relationship */
  versiongroupmovelearnmethods_aggregate: Versiongroupmovelearnmethod_Aggregate;
};


/** columns and relationships of "pokemon_v2_movelearnmethod" */
export type MovelearnmethodMovelearnmethoddescriptionsArgs = {
  distinct_on?: InputMaybe<Array<Movelearnmethoddescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movelearnmethoddescription_Order_By>>;
  where?: InputMaybe<Movelearnmethoddescription_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_movelearnmethod" */
export type MovelearnmethodMovelearnmethoddescriptions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Movelearnmethoddescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movelearnmethoddescription_Order_By>>;
  where?: InputMaybe<Movelearnmethoddescription_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_movelearnmethod" */
export type MovelearnmethodMovelearnmethodnamesArgs = {
  distinct_on?: InputMaybe<Array<Movelearnmethodname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movelearnmethodname_Order_By>>;
  where?: InputMaybe<Movelearnmethodname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_movelearnmethod" */
export type MovelearnmethodMovelearnmethodnames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Movelearnmethodname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movelearnmethodname_Order_By>>;
  where?: InputMaybe<Movelearnmethodname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_movelearnmethod" */
export type MovelearnmethodPokemonmovesArgs = {
  distinct_on?: InputMaybe<Array<Pokemonmove_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonmove_Order_By>>;
  where?: InputMaybe<Pokemonmove_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_movelearnmethod" */
export type MovelearnmethodPokemonmoves_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonmove_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonmove_Order_By>>;
  where?: InputMaybe<Pokemonmove_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_movelearnmethod" */
export type MovelearnmethodVersiongroupmovelearnmethodsArgs = {
  distinct_on?: InputMaybe<Array<Versiongroupmovelearnmethod_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Versiongroupmovelearnmethod_Order_By>>;
  where?: InputMaybe<Versiongroupmovelearnmethod_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_movelearnmethod" */
export type MovelearnmethodVersiongroupmovelearnmethods_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Versiongroupmovelearnmethod_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Versiongroupmovelearnmethod_Order_By>>;
  where?: InputMaybe<Versiongroupmovelearnmethod_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_movelearnmethod" */
export type Movelearnmethod_Aggregate = {
  __typename?: 'movelearnmethod_aggregate';
  aggregate?: Maybe<Movelearnmethod_Aggregate_Fields>;
  nodes: Array<Movelearnmethod>;
};

/** aggregate fields of "pokemon_v2_movelearnmethod" */
export type Movelearnmethod_Aggregate_Fields = {
  __typename?: 'movelearnmethod_aggregate_fields';
  avg?: Maybe<Movelearnmethod_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Movelearnmethod_Max_Fields>;
  min?: Maybe<Movelearnmethod_Min_Fields>;
  stddev?: Maybe<Movelearnmethod_Stddev_Fields>;
  stddev_pop?: Maybe<Movelearnmethod_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Movelearnmethod_Stddev_Samp_Fields>;
  sum?: Maybe<Movelearnmethod_Sum_Fields>;
  var_pop?: Maybe<Movelearnmethod_Var_Pop_Fields>;
  var_samp?: Maybe<Movelearnmethod_Var_Samp_Fields>;
  variance?: Maybe<Movelearnmethod_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_movelearnmethod" */
export type Movelearnmethod_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Movelearnmethod_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Movelearnmethod_Avg_Fields = {
  __typename?: 'movelearnmethod_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_movelearnmethod". All fields are combined with a logical 'AND'. */
export type Movelearnmethod_Bool_Exp = {
  _and?: InputMaybe<Array<Movelearnmethod_Bool_Exp>>;
  _not?: InputMaybe<Movelearnmethod_Bool_Exp>;
  _or?: InputMaybe<Array<Movelearnmethod_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  movelearnmethoddescriptions?: InputMaybe<Movelearnmethoddescription_Bool_Exp>;
  movelearnmethoddescriptions_aggregate?: InputMaybe<Movelearnmethoddescription_Aggregate_Bool_Exp>;
  movelearnmethodnames?: InputMaybe<Movelearnmethodname_Bool_Exp>;
  movelearnmethodnames_aggregate?: InputMaybe<Movelearnmethodname_Aggregate_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  pokemonmoves?: InputMaybe<Pokemonmove_Bool_Exp>;
  pokemonmoves_aggregate?: InputMaybe<Pokemonmove_Aggregate_Bool_Exp>;
  versiongroupmovelearnmethods?: InputMaybe<Versiongroupmovelearnmethod_Bool_Exp>;
  versiongroupmovelearnmethods_aggregate?: InputMaybe<Versiongroupmovelearnmethod_Aggregate_Bool_Exp>;
};

/** aggregate max on columns */
export type Movelearnmethod_Max_Fields = {
  __typename?: 'movelearnmethod_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Movelearnmethod_Min_Fields = {
  __typename?: 'movelearnmethod_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** Ordering options when selecting data from "pokemon_v2_movelearnmethod". */
export type Movelearnmethod_Order_By = {
  id?: InputMaybe<Order_By>;
  movelearnmethoddescriptions_aggregate?: InputMaybe<Movelearnmethoddescription_Aggregate_Order_By>;
  movelearnmethodnames_aggregate?: InputMaybe<Movelearnmethodname_Aggregate_Order_By>;
  name?: InputMaybe<Order_By>;
  pokemonmoves_aggregate?: InputMaybe<Pokemonmove_Aggregate_Order_By>;
  versiongroupmovelearnmethods_aggregate?: InputMaybe<Versiongroupmovelearnmethod_Aggregate_Order_By>;
};

/** select columns of table "pokemon_v2_movelearnmethod" */
export enum Movelearnmethod_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Movelearnmethod_Stddev_Fields = {
  __typename?: 'movelearnmethod_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Movelearnmethod_Stddev_Pop_Fields = {
  __typename?: 'movelearnmethod_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Movelearnmethod_Stddev_Samp_Fields = {
  __typename?: 'movelearnmethod_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate sum on columns */
export type Movelearnmethod_Sum_Fields = {
  __typename?: 'movelearnmethod_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate var_pop on columns */
export type Movelearnmethod_Var_Pop_Fields = {
  __typename?: 'movelearnmethod_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Movelearnmethod_Var_Samp_Fields = {
  __typename?: 'movelearnmethod_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Movelearnmethod_Variance_Fields = {
  __typename?: 'movelearnmethod_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_movelearnmethoddescription" */
export type Movelearnmethoddescription = {
  __typename?: 'movelearnmethoddescription';
  description: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_learn_method_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  movelearnmethod?: Maybe<Movelearnmethod>;
};

/** aggregated selection of "pokemon_v2_movelearnmethoddescription" */
export type Movelearnmethoddescription_Aggregate = {
  __typename?: 'movelearnmethoddescription_aggregate';
  aggregate?: Maybe<Movelearnmethoddescription_Aggregate_Fields>;
  nodes: Array<Movelearnmethoddescription>;
};

export type Movelearnmethoddescription_Aggregate_Bool_Exp = {
  count?: InputMaybe<Movelearnmethoddescription_Aggregate_Bool_Exp_Count>;
};

export type Movelearnmethoddescription_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Movelearnmethoddescription_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Movelearnmethoddescription_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_movelearnmethoddescription" */
export type Movelearnmethoddescription_Aggregate_Fields = {
  __typename?: 'movelearnmethoddescription_aggregate_fields';
  avg?: Maybe<Movelearnmethoddescription_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Movelearnmethoddescription_Max_Fields>;
  min?: Maybe<Movelearnmethoddescription_Min_Fields>;
  stddev?: Maybe<Movelearnmethoddescription_Stddev_Fields>;
  stddev_pop?: Maybe<Movelearnmethoddescription_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Movelearnmethoddescription_Stddev_Samp_Fields>;
  sum?: Maybe<Movelearnmethoddescription_Sum_Fields>;
  var_pop?: Maybe<Movelearnmethoddescription_Var_Pop_Fields>;
  var_samp?: Maybe<Movelearnmethoddescription_Var_Samp_Fields>;
  variance?: Maybe<Movelearnmethoddescription_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_movelearnmethoddescription" */
export type Movelearnmethoddescription_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Movelearnmethoddescription_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_movelearnmethoddescription" */
export type Movelearnmethoddescription_Aggregate_Order_By = {
  avg?: InputMaybe<Movelearnmethoddescription_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Movelearnmethoddescription_Max_Order_By>;
  min?: InputMaybe<Movelearnmethoddescription_Min_Order_By>;
  stddev?: InputMaybe<Movelearnmethoddescription_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Movelearnmethoddescription_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Movelearnmethoddescription_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Movelearnmethoddescription_Sum_Order_By>;
  var_pop?: InputMaybe<Movelearnmethoddescription_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Movelearnmethoddescription_Var_Samp_Order_By>;
  variance?: InputMaybe<Movelearnmethoddescription_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Movelearnmethoddescription_Avg_Fields = {
  __typename?: 'movelearnmethoddescription_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_movelearnmethoddescription" */
export type Movelearnmethoddescription_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_learn_method_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_movelearnmethoddescription". All fields are combined with a logical 'AND'. */
export type Movelearnmethoddescription_Bool_Exp = {
  _and?: InputMaybe<Array<Movelearnmethoddescription_Bool_Exp>>;
  _not?: InputMaybe<Movelearnmethoddescription_Bool_Exp>;
  _or?: InputMaybe<Array<Movelearnmethoddescription_Bool_Exp>>;
  description?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  move_learn_method_id?: InputMaybe<Int_Comparison_Exp>;
  movelearnmethod?: InputMaybe<Movelearnmethod_Bool_Exp>;
};

/** aggregate max on columns */
export type Movelearnmethoddescription_Max_Fields = {
  __typename?: 'movelearnmethoddescription_max_fields';
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_learn_method_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_movelearnmethoddescription" */
export type Movelearnmethoddescription_Max_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_learn_method_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Movelearnmethoddescription_Min_Fields = {
  __typename?: 'movelearnmethoddescription_min_fields';
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_learn_method_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_movelearnmethoddescription" */
export type Movelearnmethoddescription_Min_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_learn_method_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_movelearnmethoddescription". */
export type Movelearnmethoddescription_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_learn_method_id?: InputMaybe<Order_By>;
  movelearnmethod?: InputMaybe<Movelearnmethod_Order_By>;
};

/** select columns of table "pokemon_v2_movelearnmethoddescription" */
export enum Movelearnmethoddescription_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  MoveLearnMethodId = 'move_learn_method_id'
}

/** aggregate stddev on columns */
export type Movelearnmethoddescription_Stddev_Fields = {
  __typename?: 'movelearnmethoddescription_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_movelearnmethoddescription" */
export type Movelearnmethoddescription_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_learn_method_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Movelearnmethoddescription_Stddev_Pop_Fields = {
  __typename?: 'movelearnmethoddescription_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_movelearnmethoddescription" */
export type Movelearnmethoddescription_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_learn_method_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Movelearnmethoddescription_Stddev_Samp_Fields = {
  __typename?: 'movelearnmethoddescription_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_movelearnmethoddescription" */
export type Movelearnmethoddescription_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_learn_method_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Movelearnmethoddescription_Sum_Fields = {
  __typename?: 'movelearnmethoddescription_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_learn_method_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_movelearnmethoddescription" */
export type Movelearnmethoddescription_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_learn_method_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Movelearnmethoddescription_Var_Pop_Fields = {
  __typename?: 'movelearnmethoddescription_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_movelearnmethoddescription" */
export type Movelearnmethoddescription_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_learn_method_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Movelearnmethoddescription_Var_Samp_Fields = {
  __typename?: 'movelearnmethoddescription_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_movelearnmethoddescription" */
export type Movelearnmethoddescription_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_learn_method_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Movelearnmethoddescription_Variance_Fields = {
  __typename?: 'movelearnmethoddescription_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_movelearnmethoddescription" */
export type Movelearnmethoddescription_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_learn_method_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_movelearnmethodname" */
export type Movelearnmethodname = {
  __typename?: 'movelearnmethodname';
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_learn_method_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  movelearnmethod?: Maybe<Movelearnmethod>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_movelearnmethodname" */
export type Movelearnmethodname_Aggregate = {
  __typename?: 'movelearnmethodname_aggregate';
  aggregate?: Maybe<Movelearnmethodname_Aggregate_Fields>;
  nodes: Array<Movelearnmethodname>;
};

export type Movelearnmethodname_Aggregate_Bool_Exp = {
  count?: InputMaybe<Movelearnmethodname_Aggregate_Bool_Exp_Count>;
};

export type Movelearnmethodname_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Movelearnmethodname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Movelearnmethodname_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_movelearnmethodname" */
export type Movelearnmethodname_Aggregate_Fields = {
  __typename?: 'movelearnmethodname_aggregate_fields';
  avg?: Maybe<Movelearnmethodname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Movelearnmethodname_Max_Fields>;
  min?: Maybe<Movelearnmethodname_Min_Fields>;
  stddev?: Maybe<Movelearnmethodname_Stddev_Fields>;
  stddev_pop?: Maybe<Movelearnmethodname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Movelearnmethodname_Stddev_Samp_Fields>;
  sum?: Maybe<Movelearnmethodname_Sum_Fields>;
  var_pop?: Maybe<Movelearnmethodname_Var_Pop_Fields>;
  var_samp?: Maybe<Movelearnmethodname_Var_Samp_Fields>;
  variance?: Maybe<Movelearnmethodname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_movelearnmethodname" */
export type Movelearnmethodname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Movelearnmethodname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_movelearnmethodname" */
export type Movelearnmethodname_Aggregate_Order_By = {
  avg?: InputMaybe<Movelearnmethodname_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Movelearnmethodname_Max_Order_By>;
  min?: InputMaybe<Movelearnmethodname_Min_Order_By>;
  stddev?: InputMaybe<Movelearnmethodname_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Movelearnmethodname_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Movelearnmethodname_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Movelearnmethodname_Sum_Order_By>;
  var_pop?: InputMaybe<Movelearnmethodname_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Movelearnmethodname_Var_Samp_Order_By>;
  variance?: InputMaybe<Movelearnmethodname_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Movelearnmethodname_Avg_Fields = {
  __typename?: 'movelearnmethodname_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_movelearnmethodname" */
export type Movelearnmethodname_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_learn_method_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_movelearnmethodname". All fields are combined with a logical 'AND'. */
export type Movelearnmethodname_Bool_Exp = {
  _and?: InputMaybe<Array<Movelearnmethodname_Bool_Exp>>;
  _not?: InputMaybe<Movelearnmethodname_Bool_Exp>;
  _or?: InputMaybe<Array<Movelearnmethodname_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  move_learn_method_id?: InputMaybe<Int_Comparison_Exp>;
  movelearnmethod?: InputMaybe<Movelearnmethod_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** aggregate max on columns */
export type Movelearnmethodname_Max_Fields = {
  __typename?: 'movelearnmethodname_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_learn_method_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "pokemon_v2_movelearnmethodname" */
export type Movelearnmethodname_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_learn_method_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Movelearnmethodname_Min_Fields = {
  __typename?: 'movelearnmethodname_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_learn_method_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "pokemon_v2_movelearnmethodname" */
export type Movelearnmethodname_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_learn_method_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_movelearnmethodname". */
export type Movelearnmethodname_Order_By = {
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_learn_method_id?: InputMaybe<Order_By>;
  movelearnmethod?: InputMaybe<Movelearnmethod_Order_By>;
  name?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_movelearnmethodname" */
export enum Movelearnmethodname_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  MoveLearnMethodId = 'move_learn_method_id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Movelearnmethodname_Stddev_Fields = {
  __typename?: 'movelearnmethodname_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_movelearnmethodname" */
export type Movelearnmethodname_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_learn_method_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Movelearnmethodname_Stddev_Pop_Fields = {
  __typename?: 'movelearnmethodname_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_movelearnmethodname" */
export type Movelearnmethodname_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_learn_method_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Movelearnmethodname_Stddev_Samp_Fields = {
  __typename?: 'movelearnmethodname_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_movelearnmethodname" */
export type Movelearnmethodname_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_learn_method_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Movelearnmethodname_Sum_Fields = {
  __typename?: 'movelearnmethodname_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_learn_method_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_movelearnmethodname" */
export type Movelearnmethodname_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_learn_method_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Movelearnmethodname_Var_Pop_Fields = {
  __typename?: 'movelearnmethodname_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_movelearnmethodname" */
export type Movelearnmethodname_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_learn_method_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Movelearnmethodname_Var_Samp_Fields = {
  __typename?: 'movelearnmethodname_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_movelearnmethodname" */
export type Movelearnmethodname_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_learn_method_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Movelearnmethodname_Variance_Fields = {
  __typename?: 'movelearnmethodname_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_movelearnmethodname" */
export type Movelearnmethodname_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_learn_method_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_movemeta" */
export type Movemeta = {
  __typename?: 'movemeta';
  ailment_chance?: Maybe<Scalars['Int']['output']>;
  crit_rate?: Maybe<Scalars['Int']['output']>;
  drain?: Maybe<Scalars['Int']['output']>;
  flinch_chance?: Maybe<Scalars['Int']['output']>;
  healing?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  max_hits?: Maybe<Scalars['Int']['output']>;
  max_turns?: Maybe<Scalars['Int']['output']>;
  min_hits?: Maybe<Scalars['Int']['output']>;
  min_turns?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  move: Move;
  move_id: Scalars['Int']['output'];
  move_meta_ailment_id?: Maybe<Scalars['Int']['output']>;
  move_meta_category_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  movemetaailment?: Maybe<Movemetaailment>;
  /** An object relationship */
  movemetacategory?: Maybe<Movemetacategory>;
  stat_chance?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_movemeta" */
export type Movemeta_Aggregate = {
  __typename?: 'movemeta_aggregate';
  aggregate?: Maybe<Movemeta_Aggregate_Fields>;
  nodes: Array<Movemeta>;
};

export type Movemeta_Aggregate_Bool_Exp = {
  count?: InputMaybe<Movemeta_Aggregate_Bool_Exp_Count>;
};

export type Movemeta_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Movemeta_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Movemeta_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_movemeta" */
export type Movemeta_Aggregate_Fields = {
  __typename?: 'movemeta_aggregate_fields';
  avg?: Maybe<Movemeta_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Movemeta_Max_Fields>;
  min?: Maybe<Movemeta_Min_Fields>;
  stddev?: Maybe<Movemeta_Stddev_Fields>;
  stddev_pop?: Maybe<Movemeta_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Movemeta_Stddev_Samp_Fields>;
  sum?: Maybe<Movemeta_Sum_Fields>;
  var_pop?: Maybe<Movemeta_Var_Pop_Fields>;
  var_samp?: Maybe<Movemeta_Var_Samp_Fields>;
  variance?: Maybe<Movemeta_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_movemeta" */
export type Movemeta_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Movemeta_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_movemeta" */
export type Movemeta_Aggregate_Order_By = {
  avg?: InputMaybe<Movemeta_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Movemeta_Max_Order_By>;
  min?: InputMaybe<Movemeta_Min_Order_By>;
  stddev?: InputMaybe<Movemeta_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Movemeta_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Movemeta_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Movemeta_Sum_Order_By>;
  var_pop?: InputMaybe<Movemeta_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Movemeta_Var_Samp_Order_By>;
  variance?: InputMaybe<Movemeta_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Movemeta_Avg_Fields = {
  __typename?: 'movemeta_avg_fields';
  ailment_chance?: Maybe<Scalars['Float']['output']>;
  crit_rate?: Maybe<Scalars['Float']['output']>;
  drain?: Maybe<Scalars['Float']['output']>;
  flinch_chance?: Maybe<Scalars['Float']['output']>;
  healing?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  max_hits?: Maybe<Scalars['Float']['output']>;
  max_turns?: Maybe<Scalars['Float']['output']>;
  min_hits?: Maybe<Scalars['Float']['output']>;
  min_turns?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  move_meta_ailment_id?: Maybe<Scalars['Float']['output']>;
  move_meta_category_id?: Maybe<Scalars['Float']['output']>;
  stat_chance?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_movemeta" */
export type Movemeta_Avg_Order_By = {
  ailment_chance?: InputMaybe<Order_By>;
  crit_rate?: InputMaybe<Order_By>;
  drain?: InputMaybe<Order_By>;
  flinch_chance?: InputMaybe<Order_By>;
  healing?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  max_hits?: InputMaybe<Order_By>;
  max_turns?: InputMaybe<Order_By>;
  min_hits?: InputMaybe<Order_By>;
  min_turns?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  move_meta_ailment_id?: InputMaybe<Order_By>;
  move_meta_category_id?: InputMaybe<Order_By>;
  stat_chance?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_movemeta". All fields are combined with a logical 'AND'. */
export type Movemeta_Bool_Exp = {
  _and?: InputMaybe<Array<Movemeta_Bool_Exp>>;
  _not?: InputMaybe<Movemeta_Bool_Exp>;
  _or?: InputMaybe<Array<Movemeta_Bool_Exp>>;
  ailment_chance?: InputMaybe<Int_Comparison_Exp>;
  crit_rate?: InputMaybe<Int_Comparison_Exp>;
  drain?: InputMaybe<Int_Comparison_Exp>;
  flinch_chance?: InputMaybe<Int_Comparison_Exp>;
  healing?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  max_hits?: InputMaybe<Int_Comparison_Exp>;
  max_turns?: InputMaybe<Int_Comparison_Exp>;
  min_hits?: InputMaybe<Int_Comparison_Exp>;
  min_turns?: InputMaybe<Int_Comparison_Exp>;
  move?: InputMaybe<Move_Bool_Exp>;
  move_id?: InputMaybe<Int_Comparison_Exp>;
  move_meta_ailment_id?: InputMaybe<Int_Comparison_Exp>;
  move_meta_category_id?: InputMaybe<Int_Comparison_Exp>;
  movemetaailment?: InputMaybe<Movemetaailment_Bool_Exp>;
  movemetacategory?: InputMaybe<Movemetacategory_Bool_Exp>;
  stat_chance?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Movemeta_Max_Fields = {
  __typename?: 'movemeta_max_fields';
  ailment_chance?: Maybe<Scalars['Int']['output']>;
  crit_rate?: Maybe<Scalars['Int']['output']>;
  drain?: Maybe<Scalars['Int']['output']>;
  flinch_chance?: Maybe<Scalars['Int']['output']>;
  healing?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  max_hits?: Maybe<Scalars['Int']['output']>;
  max_turns?: Maybe<Scalars['Int']['output']>;
  min_hits?: Maybe<Scalars['Int']['output']>;
  min_turns?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
  move_meta_ailment_id?: Maybe<Scalars['Int']['output']>;
  move_meta_category_id?: Maybe<Scalars['Int']['output']>;
  stat_chance?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_movemeta" */
export type Movemeta_Max_Order_By = {
  ailment_chance?: InputMaybe<Order_By>;
  crit_rate?: InputMaybe<Order_By>;
  drain?: InputMaybe<Order_By>;
  flinch_chance?: InputMaybe<Order_By>;
  healing?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  max_hits?: InputMaybe<Order_By>;
  max_turns?: InputMaybe<Order_By>;
  min_hits?: InputMaybe<Order_By>;
  min_turns?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  move_meta_ailment_id?: InputMaybe<Order_By>;
  move_meta_category_id?: InputMaybe<Order_By>;
  stat_chance?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Movemeta_Min_Fields = {
  __typename?: 'movemeta_min_fields';
  ailment_chance?: Maybe<Scalars['Int']['output']>;
  crit_rate?: Maybe<Scalars['Int']['output']>;
  drain?: Maybe<Scalars['Int']['output']>;
  flinch_chance?: Maybe<Scalars['Int']['output']>;
  healing?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  max_hits?: Maybe<Scalars['Int']['output']>;
  max_turns?: Maybe<Scalars['Int']['output']>;
  min_hits?: Maybe<Scalars['Int']['output']>;
  min_turns?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
  move_meta_ailment_id?: Maybe<Scalars['Int']['output']>;
  move_meta_category_id?: Maybe<Scalars['Int']['output']>;
  stat_chance?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_movemeta" */
export type Movemeta_Min_Order_By = {
  ailment_chance?: InputMaybe<Order_By>;
  crit_rate?: InputMaybe<Order_By>;
  drain?: InputMaybe<Order_By>;
  flinch_chance?: InputMaybe<Order_By>;
  healing?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  max_hits?: InputMaybe<Order_By>;
  max_turns?: InputMaybe<Order_By>;
  min_hits?: InputMaybe<Order_By>;
  min_turns?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  move_meta_ailment_id?: InputMaybe<Order_By>;
  move_meta_category_id?: InputMaybe<Order_By>;
  stat_chance?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_movemeta". */
export type Movemeta_Order_By = {
  ailment_chance?: InputMaybe<Order_By>;
  crit_rate?: InputMaybe<Order_By>;
  drain?: InputMaybe<Order_By>;
  flinch_chance?: InputMaybe<Order_By>;
  healing?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  max_hits?: InputMaybe<Order_By>;
  max_turns?: InputMaybe<Order_By>;
  min_hits?: InputMaybe<Order_By>;
  min_turns?: InputMaybe<Order_By>;
  move?: InputMaybe<Move_Order_By>;
  move_id?: InputMaybe<Order_By>;
  move_meta_ailment_id?: InputMaybe<Order_By>;
  move_meta_category_id?: InputMaybe<Order_By>;
  movemetaailment?: InputMaybe<Movemetaailment_Order_By>;
  movemetacategory?: InputMaybe<Movemetacategory_Order_By>;
  stat_chance?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_movemeta" */
export enum Movemeta_Select_Column {
  /** column name */
  AilmentChance = 'ailment_chance',
  /** column name */
  CritRate = 'crit_rate',
  /** column name */
  Drain = 'drain',
  /** column name */
  FlinchChance = 'flinch_chance',
  /** column name */
  Healing = 'healing',
  /** column name */
  Id = 'id',
  /** column name */
  MaxHits = 'max_hits',
  /** column name */
  MaxTurns = 'max_turns',
  /** column name */
  MinHits = 'min_hits',
  /** column name */
  MinTurns = 'min_turns',
  /** column name */
  MoveId = 'move_id',
  /** column name */
  MoveMetaAilmentId = 'move_meta_ailment_id',
  /** column name */
  MoveMetaCategoryId = 'move_meta_category_id',
  /** column name */
  StatChance = 'stat_chance'
}

/** aggregate stddev on columns */
export type Movemeta_Stddev_Fields = {
  __typename?: 'movemeta_stddev_fields';
  ailment_chance?: Maybe<Scalars['Float']['output']>;
  crit_rate?: Maybe<Scalars['Float']['output']>;
  drain?: Maybe<Scalars['Float']['output']>;
  flinch_chance?: Maybe<Scalars['Float']['output']>;
  healing?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  max_hits?: Maybe<Scalars['Float']['output']>;
  max_turns?: Maybe<Scalars['Float']['output']>;
  min_hits?: Maybe<Scalars['Float']['output']>;
  min_turns?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  move_meta_ailment_id?: Maybe<Scalars['Float']['output']>;
  move_meta_category_id?: Maybe<Scalars['Float']['output']>;
  stat_chance?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_movemeta" */
export type Movemeta_Stddev_Order_By = {
  ailment_chance?: InputMaybe<Order_By>;
  crit_rate?: InputMaybe<Order_By>;
  drain?: InputMaybe<Order_By>;
  flinch_chance?: InputMaybe<Order_By>;
  healing?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  max_hits?: InputMaybe<Order_By>;
  max_turns?: InputMaybe<Order_By>;
  min_hits?: InputMaybe<Order_By>;
  min_turns?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  move_meta_ailment_id?: InputMaybe<Order_By>;
  move_meta_category_id?: InputMaybe<Order_By>;
  stat_chance?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Movemeta_Stddev_Pop_Fields = {
  __typename?: 'movemeta_stddev_pop_fields';
  ailment_chance?: Maybe<Scalars['Float']['output']>;
  crit_rate?: Maybe<Scalars['Float']['output']>;
  drain?: Maybe<Scalars['Float']['output']>;
  flinch_chance?: Maybe<Scalars['Float']['output']>;
  healing?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  max_hits?: Maybe<Scalars['Float']['output']>;
  max_turns?: Maybe<Scalars['Float']['output']>;
  min_hits?: Maybe<Scalars['Float']['output']>;
  min_turns?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  move_meta_ailment_id?: Maybe<Scalars['Float']['output']>;
  move_meta_category_id?: Maybe<Scalars['Float']['output']>;
  stat_chance?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_movemeta" */
export type Movemeta_Stddev_Pop_Order_By = {
  ailment_chance?: InputMaybe<Order_By>;
  crit_rate?: InputMaybe<Order_By>;
  drain?: InputMaybe<Order_By>;
  flinch_chance?: InputMaybe<Order_By>;
  healing?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  max_hits?: InputMaybe<Order_By>;
  max_turns?: InputMaybe<Order_By>;
  min_hits?: InputMaybe<Order_By>;
  min_turns?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  move_meta_ailment_id?: InputMaybe<Order_By>;
  move_meta_category_id?: InputMaybe<Order_By>;
  stat_chance?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Movemeta_Stddev_Samp_Fields = {
  __typename?: 'movemeta_stddev_samp_fields';
  ailment_chance?: Maybe<Scalars['Float']['output']>;
  crit_rate?: Maybe<Scalars['Float']['output']>;
  drain?: Maybe<Scalars['Float']['output']>;
  flinch_chance?: Maybe<Scalars['Float']['output']>;
  healing?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  max_hits?: Maybe<Scalars['Float']['output']>;
  max_turns?: Maybe<Scalars['Float']['output']>;
  min_hits?: Maybe<Scalars['Float']['output']>;
  min_turns?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  move_meta_ailment_id?: Maybe<Scalars['Float']['output']>;
  move_meta_category_id?: Maybe<Scalars['Float']['output']>;
  stat_chance?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_movemeta" */
export type Movemeta_Stddev_Samp_Order_By = {
  ailment_chance?: InputMaybe<Order_By>;
  crit_rate?: InputMaybe<Order_By>;
  drain?: InputMaybe<Order_By>;
  flinch_chance?: InputMaybe<Order_By>;
  healing?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  max_hits?: InputMaybe<Order_By>;
  max_turns?: InputMaybe<Order_By>;
  min_hits?: InputMaybe<Order_By>;
  min_turns?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  move_meta_ailment_id?: InputMaybe<Order_By>;
  move_meta_category_id?: InputMaybe<Order_By>;
  stat_chance?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Movemeta_Sum_Fields = {
  __typename?: 'movemeta_sum_fields';
  ailment_chance?: Maybe<Scalars['Int']['output']>;
  crit_rate?: Maybe<Scalars['Int']['output']>;
  drain?: Maybe<Scalars['Int']['output']>;
  flinch_chance?: Maybe<Scalars['Int']['output']>;
  healing?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  max_hits?: Maybe<Scalars['Int']['output']>;
  max_turns?: Maybe<Scalars['Int']['output']>;
  min_hits?: Maybe<Scalars['Int']['output']>;
  min_turns?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
  move_meta_ailment_id?: Maybe<Scalars['Int']['output']>;
  move_meta_category_id?: Maybe<Scalars['Int']['output']>;
  stat_chance?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_movemeta" */
export type Movemeta_Sum_Order_By = {
  ailment_chance?: InputMaybe<Order_By>;
  crit_rate?: InputMaybe<Order_By>;
  drain?: InputMaybe<Order_By>;
  flinch_chance?: InputMaybe<Order_By>;
  healing?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  max_hits?: InputMaybe<Order_By>;
  max_turns?: InputMaybe<Order_By>;
  min_hits?: InputMaybe<Order_By>;
  min_turns?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  move_meta_ailment_id?: InputMaybe<Order_By>;
  move_meta_category_id?: InputMaybe<Order_By>;
  stat_chance?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Movemeta_Var_Pop_Fields = {
  __typename?: 'movemeta_var_pop_fields';
  ailment_chance?: Maybe<Scalars['Float']['output']>;
  crit_rate?: Maybe<Scalars['Float']['output']>;
  drain?: Maybe<Scalars['Float']['output']>;
  flinch_chance?: Maybe<Scalars['Float']['output']>;
  healing?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  max_hits?: Maybe<Scalars['Float']['output']>;
  max_turns?: Maybe<Scalars['Float']['output']>;
  min_hits?: Maybe<Scalars['Float']['output']>;
  min_turns?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  move_meta_ailment_id?: Maybe<Scalars['Float']['output']>;
  move_meta_category_id?: Maybe<Scalars['Float']['output']>;
  stat_chance?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_movemeta" */
export type Movemeta_Var_Pop_Order_By = {
  ailment_chance?: InputMaybe<Order_By>;
  crit_rate?: InputMaybe<Order_By>;
  drain?: InputMaybe<Order_By>;
  flinch_chance?: InputMaybe<Order_By>;
  healing?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  max_hits?: InputMaybe<Order_By>;
  max_turns?: InputMaybe<Order_By>;
  min_hits?: InputMaybe<Order_By>;
  min_turns?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  move_meta_ailment_id?: InputMaybe<Order_By>;
  move_meta_category_id?: InputMaybe<Order_By>;
  stat_chance?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Movemeta_Var_Samp_Fields = {
  __typename?: 'movemeta_var_samp_fields';
  ailment_chance?: Maybe<Scalars['Float']['output']>;
  crit_rate?: Maybe<Scalars['Float']['output']>;
  drain?: Maybe<Scalars['Float']['output']>;
  flinch_chance?: Maybe<Scalars['Float']['output']>;
  healing?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  max_hits?: Maybe<Scalars['Float']['output']>;
  max_turns?: Maybe<Scalars['Float']['output']>;
  min_hits?: Maybe<Scalars['Float']['output']>;
  min_turns?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  move_meta_ailment_id?: Maybe<Scalars['Float']['output']>;
  move_meta_category_id?: Maybe<Scalars['Float']['output']>;
  stat_chance?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_movemeta" */
export type Movemeta_Var_Samp_Order_By = {
  ailment_chance?: InputMaybe<Order_By>;
  crit_rate?: InputMaybe<Order_By>;
  drain?: InputMaybe<Order_By>;
  flinch_chance?: InputMaybe<Order_By>;
  healing?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  max_hits?: InputMaybe<Order_By>;
  max_turns?: InputMaybe<Order_By>;
  min_hits?: InputMaybe<Order_By>;
  min_turns?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  move_meta_ailment_id?: InputMaybe<Order_By>;
  move_meta_category_id?: InputMaybe<Order_By>;
  stat_chance?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Movemeta_Variance_Fields = {
  __typename?: 'movemeta_variance_fields';
  ailment_chance?: Maybe<Scalars['Float']['output']>;
  crit_rate?: Maybe<Scalars['Float']['output']>;
  drain?: Maybe<Scalars['Float']['output']>;
  flinch_chance?: Maybe<Scalars['Float']['output']>;
  healing?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  max_hits?: Maybe<Scalars['Float']['output']>;
  max_turns?: Maybe<Scalars['Float']['output']>;
  min_hits?: Maybe<Scalars['Float']['output']>;
  min_turns?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  move_meta_ailment_id?: Maybe<Scalars['Float']['output']>;
  move_meta_category_id?: Maybe<Scalars['Float']['output']>;
  stat_chance?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_movemeta" */
export type Movemeta_Variance_Order_By = {
  ailment_chance?: InputMaybe<Order_By>;
  crit_rate?: InputMaybe<Order_By>;
  drain?: InputMaybe<Order_By>;
  flinch_chance?: InputMaybe<Order_By>;
  healing?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  max_hits?: InputMaybe<Order_By>;
  max_turns?: InputMaybe<Order_By>;
  min_hits?: InputMaybe<Order_By>;
  min_turns?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  move_meta_ailment_id?: InputMaybe<Order_By>;
  move_meta_category_id?: InputMaybe<Order_By>;
  stat_chance?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_movemetaailment" */
export type Movemetaailment = {
  __typename?: 'movemetaailment';
  id: Scalars['Int']['output'];
  /** An array relationship */
  movemeta: Array<Movemeta>;
  /** An aggregate relationship */
  movemeta_aggregate: Movemeta_Aggregate;
  /** An array relationship */
  movemetaailmentnames: Array<Movemetaailmentname>;
  /** An aggregate relationship */
  movemetaailmentnames_aggregate: Movemetaailmentname_Aggregate;
  name: Scalars['String']['output'];
};


/** columns and relationships of "pokemon_v2_movemetaailment" */
export type MovemetaailmentMovemetaArgs = {
  distinct_on?: InputMaybe<Array<Movemeta_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movemeta_Order_By>>;
  where?: InputMaybe<Movemeta_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_movemetaailment" */
export type MovemetaailmentMovemeta_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Movemeta_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movemeta_Order_By>>;
  where?: InputMaybe<Movemeta_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_movemetaailment" */
export type MovemetaailmentMovemetaailmentnamesArgs = {
  distinct_on?: InputMaybe<Array<Movemetaailmentname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movemetaailmentname_Order_By>>;
  where?: InputMaybe<Movemetaailmentname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_movemetaailment" */
export type MovemetaailmentMovemetaailmentnames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Movemetaailmentname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movemetaailmentname_Order_By>>;
  where?: InputMaybe<Movemetaailmentname_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_movemetaailment" */
export type Movemetaailment_Aggregate = {
  __typename?: 'movemetaailment_aggregate';
  aggregate?: Maybe<Movemetaailment_Aggregate_Fields>;
  nodes: Array<Movemetaailment>;
};

/** aggregate fields of "pokemon_v2_movemetaailment" */
export type Movemetaailment_Aggregate_Fields = {
  __typename?: 'movemetaailment_aggregate_fields';
  avg?: Maybe<Movemetaailment_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Movemetaailment_Max_Fields>;
  min?: Maybe<Movemetaailment_Min_Fields>;
  stddev?: Maybe<Movemetaailment_Stddev_Fields>;
  stddev_pop?: Maybe<Movemetaailment_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Movemetaailment_Stddev_Samp_Fields>;
  sum?: Maybe<Movemetaailment_Sum_Fields>;
  var_pop?: Maybe<Movemetaailment_Var_Pop_Fields>;
  var_samp?: Maybe<Movemetaailment_Var_Samp_Fields>;
  variance?: Maybe<Movemetaailment_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_movemetaailment" */
export type Movemetaailment_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Movemetaailment_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Movemetaailment_Avg_Fields = {
  __typename?: 'movemetaailment_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_movemetaailment". All fields are combined with a logical 'AND'. */
export type Movemetaailment_Bool_Exp = {
  _and?: InputMaybe<Array<Movemetaailment_Bool_Exp>>;
  _not?: InputMaybe<Movemetaailment_Bool_Exp>;
  _or?: InputMaybe<Array<Movemetaailment_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  movemeta?: InputMaybe<Movemeta_Bool_Exp>;
  movemeta_aggregate?: InputMaybe<Movemeta_Aggregate_Bool_Exp>;
  movemetaailmentnames?: InputMaybe<Movemetaailmentname_Bool_Exp>;
  movemetaailmentnames_aggregate?: InputMaybe<Movemetaailmentname_Aggregate_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** aggregate max on columns */
export type Movemetaailment_Max_Fields = {
  __typename?: 'movemetaailment_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Movemetaailment_Min_Fields = {
  __typename?: 'movemetaailment_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** Ordering options when selecting data from "pokemon_v2_movemetaailment". */
export type Movemetaailment_Order_By = {
  id?: InputMaybe<Order_By>;
  movemeta_aggregate?: InputMaybe<Movemeta_Aggregate_Order_By>;
  movemetaailmentnames_aggregate?: InputMaybe<Movemetaailmentname_Aggregate_Order_By>;
  name?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_movemetaailment" */
export enum Movemetaailment_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Movemetaailment_Stddev_Fields = {
  __typename?: 'movemetaailment_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Movemetaailment_Stddev_Pop_Fields = {
  __typename?: 'movemetaailment_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Movemetaailment_Stddev_Samp_Fields = {
  __typename?: 'movemetaailment_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate sum on columns */
export type Movemetaailment_Sum_Fields = {
  __typename?: 'movemetaailment_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate var_pop on columns */
export type Movemetaailment_Var_Pop_Fields = {
  __typename?: 'movemetaailment_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Movemetaailment_Var_Samp_Fields = {
  __typename?: 'movemetaailment_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Movemetaailment_Variance_Fields = {
  __typename?: 'movemetaailment_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_movemetaailmentname" */
export type Movemetaailmentname = {
  __typename?: 'movemetaailmentname';
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_meta_ailment_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  movemetaailment?: Maybe<Movemetaailment>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_movemetaailmentname" */
export type Movemetaailmentname_Aggregate = {
  __typename?: 'movemetaailmentname_aggregate';
  aggregate?: Maybe<Movemetaailmentname_Aggregate_Fields>;
  nodes: Array<Movemetaailmentname>;
};

export type Movemetaailmentname_Aggregate_Bool_Exp = {
  count?: InputMaybe<Movemetaailmentname_Aggregate_Bool_Exp_Count>;
};

export type Movemetaailmentname_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Movemetaailmentname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Movemetaailmentname_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_movemetaailmentname" */
export type Movemetaailmentname_Aggregate_Fields = {
  __typename?: 'movemetaailmentname_aggregate_fields';
  avg?: Maybe<Movemetaailmentname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Movemetaailmentname_Max_Fields>;
  min?: Maybe<Movemetaailmentname_Min_Fields>;
  stddev?: Maybe<Movemetaailmentname_Stddev_Fields>;
  stddev_pop?: Maybe<Movemetaailmentname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Movemetaailmentname_Stddev_Samp_Fields>;
  sum?: Maybe<Movemetaailmentname_Sum_Fields>;
  var_pop?: Maybe<Movemetaailmentname_Var_Pop_Fields>;
  var_samp?: Maybe<Movemetaailmentname_Var_Samp_Fields>;
  variance?: Maybe<Movemetaailmentname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_movemetaailmentname" */
export type Movemetaailmentname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Movemetaailmentname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_movemetaailmentname" */
export type Movemetaailmentname_Aggregate_Order_By = {
  avg?: InputMaybe<Movemetaailmentname_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Movemetaailmentname_Max_Order_By>;
  min?: InputMaybe<Movemetaailmentname_Min_Order_By>;
  stddev?: InputMaybe<Movemetaailmentname_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Movemetaailmentname_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Movemetaailmentname_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Movemetaailmentname_Sum_Order_By>;
  var_pop?: InputMaybe<Movemetaailmentname_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Movemetaailmentname_Var_Samp_Order_By>;
  variance?: InputMaybe<Movemetaailmentname_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Movemetaailmentname_Avg_Fields = {
  __typename?: 'movemetaailmentname_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_meta_ailment_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_movemetaailmentname" */
export type Movemetaailmentname_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_meta_ailment_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_movemetaailmentname". All fields are combined with a logical 'AND'. */
export type Movemetaailmentname_Bool_Exp = {
  _and?: InputMaybe<Array<Movemetaailmentname_Bool_Exp>>;
  _not?: InputMaybe<Movemetaailmentname_Bool_Exp>;
  _or?: InputMaybe<Array<Movemetaailmentname_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  move_meta_ailment_id?: InputMaybe<Int_Comparison_Exp>;
  movemetaailment?: InputMaybe<Movemetaailment_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** aggregate max on columns */
export type Movemetaailmentname_Max_Fields = {
  __typename?: 'movemetaailmentname_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_meta_ailment_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "pokemon_v2_movemetaailmentname" */
export type Movemetaailmentname_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_meta_ailment_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Movemetaailmentname_Min_Fields = {
  __typename?: 'movemetaailmentname_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_meta_ailment_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "pokemon_v2_movemetaailmentname" */
export type Movemetaailmentname_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_meta_ailment_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_movemetaailmentname". */
export type Movemetaailmentname_Order_By = {
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_meta_ailment_id?: InputMaybe<Order_By>;
  movemetaailment?: InputMaybe<Movemetaailment_Order_By>;
  name?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_movemetaailmentname" */
export enum Movemetaailmentname_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  MoveMetaAilmentId = 'move_meta_ailment_id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Movemetaailmentname_Stddev_Fields = {
  __typename?: 'movemetaailmentname_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_meta_ailment_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_movemetaailmentname" */
export type Movemetaailmentname_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_meta_ailment_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Movemetaailmentname_Stddev_Pop_Fields = {
  __typename?: 'movemetaailmentname_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_meta_ailment_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_movemetaailmentname" */
export type Movemetaailmentname_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_meta_ailment_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Movemetaailmentname_Stddev_Samp_Fields = {
  __typename?: 'movemetaailmentname_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_meta_ailment_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_movemetaailmentname" */
export type Movemetaailmentname_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_meta_ailment_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Movemetaailmentname_Sum_Fields = {
  __typename?: 'movemetaailmentname_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_meta_ailment_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_movemetaailmentname" */
export type Movemetaailmentname_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_meta_ailment_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Movemetaailmentname_Var_Pop_Fields = {
  __typename?: 'movemetaailmentname_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_meta_ailment_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_movemetaailmentname" */
export type Movemetaailmentname_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_meta_ailment_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Movemetaailmentname_Var_Samp_Fields = {
  __typename?: 'movemetaailmentname_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_meta_ailment_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_movemetaailmentname" */
export type Movemetaailmentname_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_meta_ailment_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Movemetaailmentname_Variance_Fields = {
  __typename?: 'movemetaailmentname_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_meta_ailment_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_movemetaailmentname" */
export type Movemetaailmentname_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_meta_ailment_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_movemetacategory" */
export type Movemetacategory = {
  __typename?: 'movemetacategory';
  id: Scalars['Int']['output'];
  /** An array relationship */
  movemeta: Array<Movemeta>;
  /** An aggregate relationship */
  movemeta_aggregate: Movemeta_Aggregate;
  /** An array relationship */
  movemetacategorydescriptions: Array<Movemetacategorydescription>;
  /** An aggregate relationship */
  movemetacategorydescriptions_aggregate: Movemetacategorydescription_Aggregate;
  name: Scalars['String']['output'];
};


/** columns and relationships of "pokemon_v2_movemetacategory" */
export type MovemetacategoryMovemetaArgs = {
  distinct_on?: InputMaybe<Array<Movemeta_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movemeta_Order_By>>;
  where?: InputMaybe<Movemeta_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_movemetacategory" */
export type MovemetacategoryMovemeta_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Movemeta_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movemeta_Order_By>>;
  where?: InputMaybe<Movemeta_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_movemetacategory" */
export type MovemetacategoryMovemetacategorydescriptionsArgs = {
  distinct_on?: InputMaybe<Array<Movemetacategorydescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movemetacategorydescription_Order_By>>;
  where?: InputMaybe<Movemetacategorydescription_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_movemetacategory" */
export type MovemetacategoryMovemetacategorydescriptions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Movemetacategorydescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movemetacategorydescription_Order_By>>;
  where?: InputMaybe<Movemetacategorydescription_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_movemetacategory" */
export type Movemetacategory_Aggregate = {
  __typename?: 'movemetacategory_aggregate';
  aggregate?: Maybe<Movemetacategory_Aggregate_Fields>;
  nodes: Array<Movemetacategory>;
};

/** aggregate fields of "pokemon_v2_movemetacategory" */
export type Movemetacategory_Aggregate_Fields = {
  __typename?: 'movemetacategory_aggregate_fields';
  avg?: Maybe<Movemetacategory_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Movemetacategory_Max_Fields>;
  min?: Maybe<Movemetacategory_Min_Fields>;
  stddev?: Maybe<Movemetacategory_Stddev_Fields>;
  stddev_pop?: Maybe<Movemetacategory_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Movemetacategory_Stddev_Samp_Fields>;
  sum?: Maybe<Movemetacategory_Sum_Fields>;
  var_pop?: Maybe<Movemetacategory_Var_Pop_Fields>;
  var_samp?: Maybe<Movemetacategory_Var_Samp_Fields>;
  variance?: Maybe<Movemetacategory_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_movemetacategory" */
export type Movemetacategory_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Movemetacategory_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Movemetacategory_Avg_Fields = {
  __typename?: 'movemetacategory_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_movemetacategory". All fields are combined with a logical 'AND'. */
export type Movemetacategory_Bool_Exp = {
  _and?: InputMaybe<Array<Movemetacategory_Bool_Exp>>;
  _not?: InputMaybe<Movemetacategory_Bool_Exp>;
  _or?: InputMaybe<Array<Movemetacategory_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  movemeta?: InputMaybe<Movemeta_Bool_Exp>;
  movemeta_aggregate?: InputMaybe<Movemeta_Aggregate_Bool_Exp>;
  movemetacategorydescriptions?: InputMaybe<Movemetacategorydescription_Bool_Exp>;
  movemetacategorydescriptions_aggregate?: InputMaybe<Movemetacategorydescription_Aggregate_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** aggregate max on columns */
export type Movemetacategory_Max_Fields = {
  __typename?: 'movemetacategory_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Movemetacategory_Min_Fields = {
  __typename?: 'movemetacategory_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** Ordering options when selecting data from "pokemon_v2_movemetacategory". */
export type Movemetacategory_Order_By = {
  id?: InputMaybe<Order_By>;
  movemeta_aggregate?: InputMaybe<Movemeta_Aggregate_Order_By>;
  movemetacategorydescriptions_aggregate?: InputMaybe<Movemetacategorydescription_Aggregate_Order_By>;
  name?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_movemetacategory" */
export enum Movemetacategory_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Movemetacategory_Stddev_Fields = {
  __typename?: 'movemetacategory_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Movemetacategory_Stddev_Pop_Fields = {
  __typename?: 'movemetacategory_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Movemetacategory_Stddev_Samp_Fields = {
  __typename?: 'movemetacategory_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate sum on columns */
export type Movemetacategory_Sum_Fields = {
  __typename?: 'movemetacategory_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate var_pop on columns */
export type Movemetacategory_Var_Pop_Fields = {
  __typename?: 'movemetacategory_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Movemetacategory_Var_Samp_Fields = {
  __typename?: 'movemetacategory_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Movemetacategory_Variance_Fields = {
  __typename?: 'movemetacategory_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_movemetacategorydescription" */
export type Movemetacategorydescription = {
  __typename?: 'movemetacategorydescription';
  description: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_meta_category_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  movemetacategory?: Maybe<Movemetacategory>;
};

/** aggregated selection of "pokemon_v2_movemetacategorydescription" */
export type Movemetacategorydescription_Aggregate = {
  __typename?: 'movemetacategorydescription_aggregate';
  aggregate?: Maybe<Movemetacategorydescription_Aggregate_Fields>;
  nodes: Array<Movemetacategorydescription>;
};

export type Movemetacategorydescription_Aggregate_Bool_Exp = {
  count?: InputMaybe<Movemetacategorydescription_Aggregate_Bool_Exp_Count>;
};

export type Movemetacategorydescription_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Movemetacategorydescription_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Movemetacategorydescription_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_movemetacategorydescription" */
export type Movemetacategorydescription_Aggregate_Fields = {
  __typename?: 'movemetacategorydescription_aggregate_fields';
  avg?: Maybe<Movemetacategorydescription_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Movemetacategorydescription_Max_Fields>;
  min?: Maybe<Movemetacategorydescription_Min_Fields>;
  stddev?: Maybe<Movemetacategorydescription_Stddev_Fields>;
  stddev_pop?: Maybe<Movemetacategorydescription_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Movemetacategorydescription_Stddev_Samp_Fields>;
  sum?: Maybe<Movemetacategorydescription_Sum_Fields>;
  var_pop?: Maybe<Movemetacategorydescription_Var_Pop_Fields>;
  var_samp?: Maybe<Movemetacategorydescription_Var_Samp_Fields>;
  variance?: Maybe<Movemetacategorydescription_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_movemetacategorydescription" */
export type Movemetacategorydescription_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Movemetacategorydescription_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_movemetacategorydescription" */
export type Movemetacategorydescription_Aggregate_Order_By = {
  avg?: InputMaybe<Movemetacategorydescription_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Movemetacategorydescription_Max_Order_By>;
  min?: InputMaybe<Movemetacategorydescription_Min_Order_By>;
  stddev?: InputMaybe<Movemetacategorydescription_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Movemetacategorydescription_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Movemetacategorydescription_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Movemetacategorydescription_Sum_Order_By>;
  var_pop?: InputMaybe<Movemetacategorydescription_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Movemetacategorydescription_Var_Samp_Order_By>;
  variance?: InputMaybe<Movemetacategorydescription_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Movemetacategorydescription_Avg_Fields = {
  __typename?: 'movemetacategorydescription_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_meta_category_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_movemetacategorydescription" */
export type Movemetacategorydescription_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_meta_category_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_movemetacategorydescription". All fields are combined with a logical 'AND'. */
export type Movemetacategorydescription_Bool_Exp = {
  _and?: InputMaybe<Array<Movemetacategorydescription_Bool_Exp>>;
  _not?: InputMaybe<Movemetacategorydescription_Bool_Exp>;
  _or?: InputMaybe<Array<Movemetacategorydescription_Bool_Exp>>;
  description?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  move_meta_category_id?: InputMaybe<Int_Comparison_Exp>;
  movemetacategory?: InputMaybe<Movemetacategory_Bool_Exp>;
};

/** aggregate max on columns */
export type Movemetacategorydescription_Max_Fields = {
  __typename?: 'movemetacategorydescription_max_fields';
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_meta_category_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_movemetacategorydescription" */
export type Movemetacategorydescription_Max_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_meta_category_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Movemetacategorydescription_Min_Fields = {
  __typename?: 'movemetacategorydescription_min_fields';
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_meta_category_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_movemetacategorydescription" */
export type Movemetacategorydescription_Min_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_meta_category_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_movemetacategorydescription". */
export type Movemetacategorydescription_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_meta_category_id?: InputMaybe<Order_By>;
  movemetacategory?: InputMaybe<Movemetacategory_Order_By>;
};

/** select columns of table "pokemon_v2_movemetacategorydescription" */
export enum Movemetacategorydescription_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  MoveMetaCategoryId = 'move_meta_category_id'
}

/** aggregate stddev on columns */
export type Movemetacategorydescription_Stddev_Fields = {
  __typename?: 'movemetacategorydescription_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_meta_category_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_movemetacategorydescription" */
export type Movemetacategorydescription_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_meta_category_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Movemetacategorydescription_Stddev_Pop_Fields = {
  __typename?: 'movemetacategorydescription_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_meta_category_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_movemetacategorydescription" */
export type Movemetacategorydescription_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_meta_category_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Movemetacategorydescription_Stddev_Samp_Fields = {
  __typename?: 'movemetacategorydescription_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_meta_category_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_movemetacategorydescription" */
export type Movemetacategorydescription_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_meta_category_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Movemetacategorydescription_Sum_Fields = {
  __typename?: 'movemetacategorydescription_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_meta_category_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_movemetacategorydescription" */
export type Movemetacategorydescription_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_meta_category_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Movemetacategorydescription_Var_Pop_Fields = {
  __typename?: 'movemetacategorydescription_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_meta_category_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_movemetacategorydescription" */
export type Movemetacategorydescription_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_meta_category_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Movemetacategorydescription_Var_Samp_Fields = {
  __typename?: 'movemetacategorydescription_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_meta_category_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_movemetacategorydescription" */
export type Movemetacategorydescription_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_meta_category_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Movemetacategorydescription_Variance_Fields = {
  __typename?: 'movemetacategorydescription_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_meta_category_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_movemetacategorydescription" */
export type Movemetacategorydescription_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_meta_category_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_movemetastatchange" */
export type Movemetastatchange = {
  __typename?: 'movemetastatchange';
  change: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  /** An object relationship */
  move?: Maybe<Move>;
  move_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  stat?: Maybe<Stat>;
  stat_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_movemetastatchange" */
export type Movemetastatchange_Aggregate = {
  __typename?: 'movemetastatchange_aggregate';
  aggregate?: Maybe<Movemetastatchange_Aggregate_Fields>;
  nodes: Array<Movemetastatchange>;
};

export type Movemetastatchange_Aggregate_Bool_Exp = {
  count?: InputMaybe<Movemetastatchange_Aggregate_Bool_Exp_Count>;
};

export type Movemetastatchange_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Movemetastatchange_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Movemetastatchange_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_movemetastatchange" */
export type Movemetastatchange_Aggregate_Fields = {
  __typename?: 'movemetastatchange_aggregate_fields';
  avg?: Maybe<Movemetastatchange_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Movemetastatchange_Max_Fields>;
  min?: Maybe<Movemetastatchange_Min_Fields>;
  stddev?: Maybe<Movemetastatchange_Stddev_Fields>;
  stddev_pop?: Maybe<Movemetastatchange_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Movemetastatchange_Stddev_Samp_Fields>;
  sum?: Maybe<Movemetastatchange_Sum_Fields>;
  var_pop?: Maybe<Movemetastatchange_Var_Pop_Fields>;
  var_samp?: Maybe<Movemetastatchange_Var_Samp_Fields>;
  variance?: Maybe<Movemetastatchange_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_movemetastatchange" */
export type Movemetastatchange_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Movemetastatchange_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_movemetastatchange" */
export type Movemetastatchange_Aggregate_Order_By = {
  avg?: InputMaybe<Movemetastatchange_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Movemetastatchange_Max_Order_By>;
  min?: InputMaybe<Movemetastatchange_Min_Order_By>;
  stddev?: InputMaybe<Movemetastatchange_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Movemetastatchange_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Movemetastatchange_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Movemetastatchange_Sum_Order_By>;
  var_pop?: InputMaybe<Movemetastatchange_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Movemetastatchange_Var_Samp_Order_By>;
  variance?: InputMaybe<Movemetastatchange_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Movemetastatchange_Avg_Fields = {
  __typename?: 'movemetastatchange_avg_fields';
  change?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_movemetastatchange" */
export type Movemetastatchange_Avg_Order_By = {
  change?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  stat_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_movemetastatchange". All fields are combined with a logical 'AND'. */
export type Movemetastatchange_Bool_Exp = {
  _and?: InputMaybe<Array<Movemetastatchange_Bool_Exp>>;
  _not?: InputMaybe<Movemetastatchange_Bool_Exp>;
  _or?: InputMaybe<Array<Movemetastatchange_Bool_Exp>>;
  change?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  move?: InputMaybe<Move_Bool_Exp>;
  move_id?: InputMaybe<Int_Comparison_Exp>;
  stat?: InputMaybe<Stat_Bool_Exp>;
  stat_id?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Movemetastatchange_Max_Fields = {
  __typename?: 'movemetastatchange_max_fields';
  change?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
  stat_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_movemetastatchange" */
export type Movemetastatchange_Max_Order_By = {
  change?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  stat_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Movemetastatchange_Min_Fields = {
  __typename?: 'movemetastatchange_min_fields';
  change?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
  stat_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_movemetastatchange" */
export type Movemetastatchange_Min_Order_By = {
  change?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  stat_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_movemetastatchange". */
export type Movemetastatchange_Order_By = {
  change?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move?: InputMaybe<Move_Order_By>;
  move_id?: InputMaybe<Order_By>;
  stat?: InputMaybe<Stat_Order_By>;
  stat_id?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_movemetastatchange" */
export enum Movemetastatchange_Select_Column {
  /** column name */
  Change = 'change',
  /** column name */
  Id = 'id',
  /** column name */
  MoveId = 'move_id',
  /** column name */
  StatId = 'stat_id'
}

/** aggregate stddev on columns */
export type Movemetastatchange_Stddev_Fields = {
  __typename?: 'movemetastatchange_stddev_fields';
  change?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_movemetastatchange" */
export type Movemetastatchange_Stddev_Order_By = {
  change?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  stat_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Movemetastatchange_Stddev_Pop_Fields = {
  __typename?: 'movemetastatchange_stddev_pop_fields';
  change?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_movemetastatchange" */
export type Movemetastatchange_Stddev_Pop_Order_By = {
  change?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  stat_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Movemetastatchange_Stddev_Samp_Fields = {
  __typename?: 'movemetastatchange_stddev_samp_fields';
  change?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_movemetastatchange" */
export type Movemetastatchange_Stddev_Samp_Order_By = {
  change?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  stat_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Movemetastatchange_Sum_Fields = {
  __typename?: 'movemetastatchange_sum_fields';
  change?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
  stat_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_movemetastatchange" */
export type Movemetastatchange_Sum_Order_By = {
  change?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  stat_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Movemetastatchange_Var_Pop_Fields = {
  __typename?: 'movemetastatchange_var_pop_fields';
  change?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_movemetastatchange" */
export type Movemetastatchange_Var_Pop_Order_By = {
  change?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  stat_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Movemetastatchange_Var_Samp_Fields = {
  __typename?: 'movemetastatchange_var_samp_fields';
  change?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_movemetastatchange" */
export type Movemetastatchange_Var_Samp_Order_By = {
  change?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  stat_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Movemetastatchange_Variance_Fields = {
  __typename?: 'movemetastatchange_variance_fields';
  change?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_movemetastatchange" */
export type Movemetastatchange_Variance_Order_By = {
  change?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  stat_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_movename" */
export type Movename = {
  __typename?: 'movename';
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  move?: Maybe<Move>;
  move_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_movename" */
export type Movename_Aggregate = {
  __typename?: 'movename_aggregate';
  aggregate?: Maybe<Movename_Aggregate_Fields>;
  nodes: Array<Movename>;
};

export type Movename_Aggregate_Bool_Exp = {
  count?: InputMaybe<Movename_Aggregate_Bool_Exp_Count>;
};

export type Movename_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Movename_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Movename_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_movename" */
export type Movename_Aggregate_Fields = {
  __typename?: 'movename_aggregate_fields';
  avg?: Maybe<Movename_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Movename_Max_Fields>;
  min?: Maybe<Movename_Min_Fields>;
  stddev?: Maybe<Movename_Stddev_Fields>;
  stddev_pop?: Maybe<Movename_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Movename_Stddev_Samp_Fields>;
  sum?: Maybe<Movename_Sum_Fields>;
  var_pop?: Maybe<Movename_Var_Pop_Fields>;
  var_samp?: Maybe<Movename_Var_Samp_Fields>;
  variance?: Maybe<Movename_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_movename" */
export type Movename_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Movename_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_movename" */
export type Movename_Aggregate_Order_By = {
  avg?: InputMaybe<Movename_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Movename_Max_Order_By>;
  min?: InputMaybe<Movename_Min_Order_By>;
  stddev?: InputMaybe<Movename_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Movename_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Movename_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Movename_Sum_Order_By>;
  var_pop?: InputMaybe<Movename_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Movename_Var_Samp_Order_By>;
  variance?: InputMaybe<Movename_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Movename_Avg_Fields = {
  __typename?: 'movename_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_movename" */
export type Movename_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_movename". All fields are combined with a logical 'AND'. */
export type Movename_Bool_Exp = {
  _and?: InputMaybe<Array<Movename_Bool_Exp>>;
  _not?: InputMaybe<Movename_Bool_Exp>;
  _or?: InputMaybe<Array<Movename_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  move?: InputMaybe<Move_Bool_Exp>;
  move_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** aggregate max on columns */
export type Movename_Max_Fields = {
  __typename?: 'movename_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "pokemon_v2_movename" */
export type Movename_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Movename_Min_Fields = {
  __typename?: 'movename_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "pokemon_v2_movename" */
export type Movename_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_movename". */
export type Movename_Order_By = {
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  move?: InputMaybe<Move_Order_By>;
  move_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_movename" */
export enum Movename_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  MoveId = 'move_id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Movename_Stddev_Fields = {
  __typename?: 'movename_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_movename" */
export type Movename_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Movename_Stddev_Pop_Fields = {
  __typename?: 'movename_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_movename" */
export type Movename_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Movename_Stddev_Samp_Fields = {
  __typename?: 'movename_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_movename" */
export type Movename_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Movename_Sum_Fields = {
  __typename?: 'movename_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_movename" */
export type Movename_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Movename_Var_Pop_Fields = {
  __typename?: 'movename_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_movename" */
export type Movename_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Movename_Var_Samp_Fields = {
  __typename?: 'movename_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_movename" */
export type Movename_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Movename_Variance_Fields = {
  __typename?: 'movename_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_movename" */
export type Movename_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_movetarget" */
export type Movetarget = {
  __typename?: 'movetarget';
  id: Scalars['Int']['output'];
  /** An array relationship */
  moves: Array<Move>;
  /** An aggregate relationship */
  moves_aggregate: Move_Aggregate;
  /** An array relationship */
  movetargetdescriptions: Array<Movetargetdescription>;
  /** An aggregate relationship */
  movetargetdescriptions_aggregate: Movetargetdescription_Aggregate;
  /** An array relationship */
  movetargetnames: Array<Movetargetname>;
  /** An aggregate relationship */
  movetargetnames_aggregate: Movetargetname_Aggregate;
  name: Scalars['String']['output'];
};


/** columns and relationships of "pokemon_v2_movetarget" */
export type MovetargetMovesArgs = {
  distinct_on?: InputMaybe<Array<Move_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Move_Order_By>>;
  where?: InputMaybe<Move_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_movetarget" */
export type MovetargetMoves_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Move_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Move_Order_By>>;
  where?: InputMaybe<Move_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_movetarget" */
export type MovetargetMovetargetdescriptionsArgs = {
  distinct_on?: InputMaybe<Array<Movetargetdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movetargetdescription_Order_By>>;
  where?: InputMaybe<Movetargetdescription_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_movetarget" */
export type MovetargetMovetargetdescriptions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Movetargetdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movetargetdescription_Order_By>>;
  where?: InputMaybe<Movetargetdescription_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_movetarget" */
export type MovetargetMovetargetnamesArgs = {
  distinct_on?: InputMaybe<Array<Movetargetname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movetargetname_Order_By>>;
  where?: InputMaybe<Movetargetname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_movetarget" */
export type MovetargetMovetargetnames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Movetargetname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movetargetname_Order_By>>;
  where?: InputMaybe<Movetargetname_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_movetarget" */
export type Movetarget_Aggregate = {
  __typename?: 'movetarget_aggregate';
  aggregate?: Maybe<Movetarget_Aggregate_Fields>;
  nodes: Array<Movetarget>;
};

/** aggregate fields of "pokemon_v2_movetarget" */
export type Movetarget_Aggregate_Fields = {
  __typename?: 'movetarget_aggregate_fields';
  avg?: Maybe<Movetarget_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Movetarget_Max_Fields>;
  min?: Maybe<Movetarget_Min_Fields>;
  stddev?: Maybe<Movetarget_Stddev_Fields>;
  stddev_pop?: Maybe<Movetarget_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Movetarget_Stddev_Samp_Fields>;
  sum?: Maybe<Movetarget_Sum_Fields>;
  var_pop?: Maybe<Movetarget_Var_Pop_Fields>;
  var_samp?: Maybe<Movetarget_Var_Samp_Fields>;
  variance?: Maybe<Movetarget_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_movetarget" */
export type Movetarget_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Movetarget_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Movetarget_Avg_Fields = {
  __typename?: 'movetarget_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_movetarget". All fields are combined with a logical 'AND'. */
export type Movetarget_Bool_Exp = {
  _and?: InputMaybe<Array<Movetarget_Bool_Exp>>;
  _not?: InputMaybe<Movetarget_Bool_Exp>;
  _or?: InputMaybe<Array<Movetarget_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  moves?: InputMaybe<Move_Bool_Exp>;
  moves_aggregate?: InputMaybe<Move_Aggregate_Bool_Exp>;
  movetargetdescriptions?: InputMaybe<Movetargetdescription_Bool_Exp>;
  movetargetdescriptions_aggregate?: InputMaybe<Movetargetdescription_Aggregate_Bool_Exp>;
  movetargetnames?: InputMaybe<Movetargetname_Bool_Exp>;
  movetargetnames_aggregate?: InputMaybe<Movetargetname_Aggregate_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** aggregate max on columns */
export type Movetarget_Max_Fields = {
  __typename?: 'movetarget_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Movetarget_Min_Fields = {
  __typename?: 'movetarget_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** Ordering options when selecting data from "pokemon_v2_movetarget". */
export type Movetarget_Order_By = {
  id?: InputMaybe<Order_By>;
  moves_aggregate?: InputMaybe<Move_Aggregate_Order_By>;
  movetargetdescriptions_aggregate?: InputMaybe<Movetargetdescription_Aggregate_Order_By>;
  movetargetnames_aggregate?: InputMaybe<Movetargetname_Aggregate_Order_By>;
  name?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_movetarget" */
export enum Movetarget_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Movetarget_Stddev_Fields = {
  __typename?: 'movetarget_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Movetarget_Stddev_Pop_Fields = {
  __typename?: 'movetarget_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Movetarget_Stddev_Samp_Fields = {
  __typename?: 'movetarget_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate sum on columns */
export type Movetarget_Sum_Fields = {
  __typename?: 'movetarget_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate var_pop on columns */
export type Movetarget_Var_Pop_Fields = {
  __typename?: 'movetarget_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Movetarget_Var_Samp_Fields = {
  __typename?: 'movetarget_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Movetarget_Variance_Fields = {
  __typename?: 'movetarget_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_movetargetdescription" */
export type Movetargetdescription = {
  __typename?: 'movetargetdescription';
  description: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_target_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  movetarget?: Maybe<Movetarget>;
};

/** aggregated selection of "pokemon_v2_movetargetdescription" */
export type Movetargetdescription_Aggregate = {
  __typename?: 'movetargetdescription_aggregate';
  aggregate?: Maybe<Movetargetdescription_Aggregate_Fields>;
  nodes: Array<Movetargetdescription>;
};

export type Movetargetdescription_Aggregate_Bool_Exp = {
  count?: InputMaybe<Movetargetdescription_Aggregate_Bool_Exp_Count>;
};

export type Movetargetdescription_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Movetargetdescription_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Movetargetdescription_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_movetargetdescription" */
export type Movetargetdescription_Aggregate_Fields = {
  __typename?: 'movetargetdescription_aggregate_fields';
  avg?: Maybe<Movetargetdescription_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Movetargetdescription_Max_Fields>;
  min?: Maybe<Movetargetdescription_Min_Fields>;
  stddev?: Maybe<Movetargetdescription_Stddev_Fields>;
  stddev_pop?: Maybe<Movetargetdescription_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Movetargetdescription_Stddev_Samp_Fields>;
  sum?: Maybe<Movetargetdescription_Sum_Fields>;
  var_pop?: Maybe<Movetargetdescription_Var_Pop_Fields>;
  var_samp?: Maybe<Movetargetdescription_Var_Samp_Fields>;
  variance?: Maybe<Movetargetdescription_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_movetargetdescription" */
export type Movetargetdescription_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Movetargetdescription_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_movetargetdescription" */
export type Movetargetdescription_Aggregate_Order_By = {
  avg?: InputMaybe<Movetargetdescription_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Movetargetdescription_Max_Order_By>;
  min?: InputMaybe<Movetargetdescription_Min_Order_By>;
  stddev?: InputMaybe<Movetargetdescription_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Movetargetdescription_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Movetargetdescription_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Movetargetdescription_Sum_Order_By>;
  var_pop?: InputMaybe<Movetargetdescription_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Movetargetdescription_Var_Samp_Order_By>;
  variance?: InputMaybe<Movetargetdescription_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Movetargetdescription_Avg_Fields = {
  __typename?: 'movetargetdescription_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_target_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_movetargetdescription" */
export type Movetargetdescription_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_target_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_movetargetdescription". All fields are combined with a logical 'AND'. */
export type Movetargetdescription_Bool_Exp = {
  _and?: InputMaybe<Array<Movetargetdescription_Bool_Exp>>;
  _not?: InputMaybe<Movetargetdescription_Bool_Exp>;
  _or?: InputMaybe<Array<Movetargetdescription_Bool_Exp>>;
  description?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  move_target_id?: InputMaybe<Int_Comparison_Exp>;
  movetarget?: InputMaybe<Movetarget_Bool_Exp>;
};

/** aggregate max on columns */
export type Movetargetdescription_Max_Fields = {
  __typename?: 'movetargetdescription_max_fields';
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_target_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_movetargetdescription" */
export type Movetargetdescription_Max_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_target_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Movetargetdescription_Min_Fields = {
  __typename?: 'movetargetdescription_min_fields';
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_target_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_movetargetdescription" */
export type Movetargetdescription_Min_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_target_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_movetargetdescription". */
export type Movetargetdescription_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_target_id?: InputMaybe<Order_By>;
  movetarget?: InputMaybe<Movetarget_Order_By>;
};

/** select columns of table "pokemon_v2_movetargetdescription" */
export enum Movetargetdescription_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  MoveTargetId = 'move_target_id'
}

/** aggregate stddev on columns */
export type Movetargetdescription_Stddev_Fields = {
  __typename?: 'movetargetdescription_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_target_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_movetargetdescription" */
export type Movetargetdescription_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_target_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Movetargetdescription_Stddev_Pop_Fields = {
  __typename?: 'movetargetdescription_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_target_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_movetargetdescription" */
export type Movetargetdescription_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_target_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Movetargetdescription_Stddev_Samp_Fields = {
  __typename?: 'movetargetdescription_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_target_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_movetargetdescription" */
export type Movetargetdescription_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_target_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Movetargetdescription_Sum_Fields = {
  __typename?: 'movetargetdescription_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_target_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_movetargetdescription" */
export type Movetargetdescription_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_target_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Movetargetdescription_Var_Pop_Fields = {
  __typename?: 'movetargetdescription_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_target_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_movetargetdescription" */
export type Movetargetdescription_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_target_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Movetargetdescription_Var_Samp_Fields = {
  __typename?: 'movetargetdescription_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_target_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_movetargetdescription" */
export type Movetargetdescription_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_target_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Movetargetdescription_Variance_Fields = {
  __typename?: 'movetargetdescription_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_target_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_movetargetdescription" */
export type Movetargetdescription_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_target_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_movetargetname" */
export type Movetargetname = {
  __typename?: 'movetargetname';
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_target_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  movetarget?: Maybe<Movetarget>;
  name: Scalars['String']['output'];
};

/** aggregated selection of "pokemon_v2_movetargetname" */
export type Movetargetname_Aggregate = {
  __typename?: 'movetargetname_aggregate';
  aggregate?: Maybe<Movetargetname_Aggregate_Fields>;
  nodes: Array<Movetargetname>;
};

export type Movetargetname_Aggregate_Bool_Exp = {
  count?: InputMaybe<Movetargetname_Aggregate_Bool_Exp_Count>;
};

export type Movetargetname_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Movetargetname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Movetargetname_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_movetargetname" */
export type Movetargetname_Aggregate_Fields = {
  __typename?: 'movetargetname_aggregate_fields';
  avg?: Maybe<Movetargetname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Movetargetname_Max_Fields>;
  min?: Maybe<Movetargetname_Min_Fields>;
  stddev?: Maybe<Movetargetname_Stddev_Fields>;
  stddev_pop?: Maybe<Movetargetname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Movetargetname_Stddev_Samp_Fields>;
  sum?: Maybe<Movetargetname_Sum_Fields>;
  var_pop?: Maybe<Movetargetname_Var_Pop_Fields>;
  var_samp?: Maybe<Movetargetname_Var_Samp_Fields>;
  variance?: Maybe<Movetargetname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_movetargetname" */
export type Movetargetname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Movetargetname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_movetargetname" */
export type Movetargetname_Aggregate_Order_By = {
  avg?: InputMaybe<Movetargetname_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Movetargetname_Max_Order_By>;
  min?: InputMaybe<Movetargetname_Min_Order_By>;
  stddev?: InputMaybe<Movetargetname_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Movetargetname_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Movetargetname_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Movetargetname_Sum_Order_By>;
  var_pop?: InputMaybe<Movetargetname_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Movetargetname_Var_Samp_Order_By>;
  variance?: InputMaybe<Movetargetname_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Movetargetname_Avg_Fields = {
  __typename?: 'movetargetname_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_target_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_movetargetname" */
export type Movetargetname_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_target_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_movetargetname". All fields are combined with a logical 'AND'. */
export type Movetargetname_Bool_Exp = {
  _and?: InputMaybe<Array<Movetargetname_Bool_Exp>>;
  _not?: InputMaybe<Movetargetname_Bool_Exp>;
  _or?: InputMaybe<Array<Movetargetname_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  move_target_id?: InputMaybe<Int_Comparison_Exp>;
  movetarget?: InputMaybe<Movetarget_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** aggregate max on columns */
export type Movetargetname_Max_Fields = {
  __typename?: 'movetargetname_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_target_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "pokemon_v2_movetargetname" */
export type Movetargetname_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_target_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Movetargetname_Min_Fields = {
  __typename?: 'movetargetname_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_target_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "pokemon_v2_movetargetname" */
export type Movetargetname_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_target_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_movetargetname". */
export type Movetargetname_Order_By = {
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_target_id?: InputMaybe<Order_By>;
  movetarget?: InputMaybe<Movetarget_Order_By>;
  name?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_movetargetname" */
export enum Movetargetname_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  MoveTargetId = 'move_target_id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Movetargetname_Stddev_Fields = {
  __typename?: 'movetargetname_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_target_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_movetargetname" */
export type Movetargetname_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_target_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Movetargetname_Stddev_Pop_Fields = {
  __typename?: 'movetargetname_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_target_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_movetargetname" */
export type Movetargetname_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_target_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Movetargetname_Stddev_Samp_Fields = {
  __typename?: 'movetargetname_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_target_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_movetargetname" */
export type Movetargetname_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_target_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Movetargetname_Sum_Fields = {
  __typename?: 'movetargetname_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  move_target_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_movetargetname" */
export type Movetargetname_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_target_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Movetargetname_Var_Pop_Fields = {
  __typename?: 'movetargetname_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_target_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_movetargetname" */
export type Movetargetname_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_target_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Movetargetname_Var_Samp_Fields = {
  __typename?: 'movetargetname_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_target_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_movetargetname" */
export type Movetargetname_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_target_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Movetargetname_Variance_Fields = {
  __typename?: 'movetargetname_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  move_target_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_movetargetname" */
export type Movetargetname_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  move_target_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_nature" */
export type Nature = {
  __typename?: 'nature';
  /** An object relationship */
  BerryflavorByLikesFlavorId?: Maybe<Berryflavor>;
  /** An object relationship */
  StatByIncreasedStatId?: Maybe<Stat>;
  /** An object relationship */
  berryflavor?: Maybe<Berryflavor>;
  decreased_stat_id?: Maybe<Scalars['Int']['output']>;
  game_index: Scalars['Int']['output'];
  hates_flavor_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  increased_stat_id?: Maybe<Scalars['Int']['output']>;
  likes_flavor_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
  /** An array relationship */
  naturebattlestylepreferences: Array<Naturebattlestylepreference>;
  /** An aggregate relationship */
  naturebattlestylepreferences_aggregate: Naturebattlestylepreference_Aggregate;
  /** An array relationship */
  naturenames: Array<Naturename>;
  /** An aggregate relationship */
  naturenames_aggregate: Naturename_Aggregate;
  /** An array relationship */
  naturepokeathlonstats: Array<Naturepokeathlonstat>;
  /** An aggregate relationship */
  naturepokeathlonstats_aggregate: Naturepokeathlonstat_Aggregate;
  /** An object relationship */
  stat?: Maybe<Stat>;
};


/** columns and relationships of "pokemon_v2_nature" */
export type NatureNaturebattlestylepreferencesArgs = {
  distinct_on?: InputMaybe<Array<Naturebattlestylepreference_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Naturebattlestylepreference_Order_By>>;
  where?: InputMaybe<Naturebattlestylepreference_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_nature" */
export type NatureNaturebattlestylepreferences_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Naturebattlestylepreference_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Naturebattlestylepreference_Order_By>>;
  where?: InputMaybe<Naturebattlestylepreference_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_nature" */
export type NatureNaturenamesArgs = {
  distinct_on?: InputMaybe<Array<Naturename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Naturename_Order_By>>;
  where?: InputMaybe<Naturename_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_nature" */
export type NatureNaturenames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Naturename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Naturename_Order_By>>;
  where?: InputMaybe<Naturename_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_nature" */
export type NatureNaturepokeathlonstatsArgs = {
  distinct_on?: InputMaybe<Array<Naturepokeathlonstat_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Naturepokeathlonstat_Order_By>>;
  where?: InputMaybe<Naturepokeathlonstat_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_nature" */
export type NatureNaturepokeathlonstats_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Naturepokeathlonstat_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Naturepokeathlonstat_Order_By>>;
  where?: InputMaybe<Naturepokeathlonstat_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_nature" */
export type Nature_Aggregate = {
  __typename?: 'nature_aggregate';
  aggregate?: Maybe<Nature_Aggregate_Fields>;
  nodes: Array<Nature>;
};

export type Nature_Aggregate_Bool_Exp = {
  count?: InputMaybe<Nature_Aggregate_Bool_Exp_Count>;
};

export type Nature_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Nature_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Nature_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_nature" */
export type Nature_Aggregate_Fields = {
  __typename?: 'nature_aggregate_fields';
  avg?: Maybe<Nature_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Nature_Max_Fields>;
  min?: Maybe<Nature_Min_Fields>;
  stddev?: Maybe<Nature_Stddev_Fields>;
  stddev_pop?: Maybe<Nature_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Nature_Stddev_Samp_Fields>;
  sum?: Maybe<Nature_Sum_Fields>;
  var_pop?: Maybe<Nature_Var_Pop_Fields>;
  var_samp?: Maybe<Nature_Var_Samp_Fields>;
  variance?: Maybe<Nature_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_nature" */
export type Nature_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Nature_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_nature" */
export type Nature_Aggregate_Order_By = {
  avg?: InputMaybe<Nature_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Nature_Max_Order_By>;
  min?: InputMaybe<Nature_Min_Order_By>;
  stddev?: InputMaybe<Nature_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Nature_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Nature_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Nature_Sum_Order_By>;
  var_pop?: InputMaybe<Nature_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Nature_Var_Samp_Order_By>;
  variance?: InputMaybe<Nature_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Nature_Avg_Fields = {
  __typename?: 'nature_avg_fields';
  decreased_stat_id?: Maybe<Scalars['Float']['output']>;
  game_index?: Maybe<Scalars['Float']['output']>;
  hates_flavor_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  increased_stat_id?: Maybe<Scalars['Float']['output']>;
  likes_flavor_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_nature" */
export type Nature_Avg_Order_By = {
  decreased_stat_id?: InputMaybe<Order_By>;
  game_index?: InputMaybe<Order_By>;
  hates_flavor_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  increased_stat_id?: InputMaybe<Order_By>;
  likes_flavor_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_nature". All fields are combined with a logical 'AND'. */
export type Nature_Bool_Exp = {
  BerryflavorByLikesFlavorId?: InputMaybe<Berryflavor_Bool_Exp>;
  StatByIncreasedStatId?: InputMaybe<Stat_Bool_Exp>;
  _and?: InputMaybe<Array<Nature_Bool_Exp>>;
  _not?: InputMaybe<Nature_Bool_Exp>;
  _or?: InputMaybe<Array<Nature_Bool_Exp>>;
  berryflavor?: InputMaybe<Berryflavor_Bool_Exp>;
  decreased_stat_id?: InputMaybe<Int_Comparison_Exp>;
  game_index?: InputMaybe<Int_Comparison_Exp>;
  hates_flavor_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  increased_stat_id?: InputMaybe<Int_Comparison_Exp>;
  likes_flavor_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  naturebattlestylepreferences?: InputMaybe<Naturebattlestylepreference_Bool_Exp>;
  naturebattlestylepreferences_aggregate?: InputMaybe<Naturebattlestylepreference_Aggregate_Bool_Exp>;
  naturenames?: InputMaybe<Naturename_Bool_Exp>;
  naturenames_aggregate?: InputMaybe<Naturename_Aggregate_Bool_Exp>;
  naturepokeathlonstats?: InputMaybe<Naturepokeathlonstat_Bool_Exp>;
  naturepokeathlonstats_aggregate?: InputMaybe<Naturepokeathlonstat_Aggregate_Bool_Exp>;
  stat?: InputMaybe<Stat_Bool_Exp>;
};

/** aggregate max on columns */
export type Nature_Max_Fields = {
  __typename?: 'nature_max_fields';
  decreased_stat_id?: Maybe<Scalars['Int']['output']>;
  game_index?: Maybe<Scalars['Int']['output']>;
  hates_flavor_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  increased_stat_id?: Maybe<Scalars['Int']['output']>;
  likes_flavor_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "pokemon_v2_nature" */
export type Nature_Max_Order_By = {
  decreased_stat_id?: InputMaybe<Order_By>;
  game_index?: InputMaybe<Order_By>;
  hates_flavor_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  increased_stat_id?: InputMaybe<Order_By>;
  likes_flavor_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Nature_Min_Fields = {
  __typename?: 'nature_min_fields';
  decreased_stat_id?: Maybe<Scalars['Int']['output']>;
  game_index?: Maybe<Scalars['Int']['output']>;
  hates_flavor_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  increased_stat_id?: Maybe<Scalars['Int']['output']>;
  likes_flavor_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "pokemon_v2_nature" */
export type Nature_Min_Order_By = {
  decreased_stat_id?: InputMaybe<Order_By>;
  game_index?: InputMaybe<Order_By>;
  hates_flavor_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  increased_stat_id?: InputMaybe<Order_By>;
  likes_flavor_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_nature". */
export type Nature_Order_By = {
  BerryflavorByLikesFlavorId?: InputMaybe<Berryflavor_Order_By>;
  StatByIncreasedStatId?: InputMaybe<Stat_Order_By>;
  berryflavor?: InputMaybe<Berryflavor_Order_By>;
  decreased_stat_id?: InputMaybe<Order_By>;
  game_index?: InputMaybe<Order_By>;
  hates_flavor_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  increased_stat_id?: InputMaybe<Order_By>;
  likes_flavor_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  naturebattlestylepreferences_aggregate?: InputMaybe<Naturebattlestylepreference_Aggregate_Order_By>;
  naturenames_aggregate?: InputMaybe<Naturename_Aggregate_Order_By>;
  naturepokeathlonstats_aggregate?: InputMaybe<Naturepokeathlonstat_Aggregate_Order_By>;
  stat?: InputMaybe<Stat_Order_By>;
};

/** select columns of table "pokemon_v2_nature" */
export enum Nature_Select_Column {
  /** column name */
  DecreasedStatId = 'decreased_stat_id',
  /** column name */
  GameIndex = 'game_index',
  /** column name */
  HatesFlavorId = 'hates_flavor_id',
  /** column name */
  Id = 'id',
  /** column name */
  IncreasedStatId = 'increased_stat_id',
  /** column name */
  LikesFlavorId = 'likes_flavor_id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Nature_Stddev_Fields = {
  __typename?: 'nature_stddev_fields';
  decreased_stat_id?: Maybe<Scalars['Float']['output']>;
  game_index?: Maybe<Scalars['Float']['output']>;
  hates_flavor_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  increased_stat_id?: Maybe<Scalars['Float']['output']>;
  likes_flavor_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_nature" */
export type Nature_Stddev_Order_By = {
  decreased_stat_id?: InputMaybe<Order_By>;
  game_index?: InputMaybe<Order_By>;
  hates_flavor_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  increased_stat_id?: InputMaybe<Order_By>;
  likes_flavor_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Nature_Stddev_Pop_Fields = {
  __typename?: 'nature_stddev_pop_fields';
  decreased_stat_id?: Maybe<Scalars['Float']['output']>;
  game_index?: Maybe<Scalars['Float']['output']>;
  hates_flavor_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  increased_stat_id?: Maybe<Scalars['Float']['output']>;
  likes_flavor_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_nature" */
export type Nature_Stddev_Pop_Order_By = {
  decreased_stat_id?: InputMaybe<Order_By>;
  game_index?: InputMaybe<Order_By>;
  hates_flavor_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  increased_stat_id?: InputMaybe<Order_By>;
  likes_flavor_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Nature_Stddev_Samp_Fields = {
  __typename?: 'nature_stddev_samp_fields';
  decreased_stat_id?: Maybe<Scalars['Float']['output']>;
  game_index?: Maybe<Scalars['Float']['output']>;
  hates_flavor_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  increased_stat_id?: Maybe<Scalars['Float']['output']>;
  likes_flavor_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_nature" */
export type Nature_Stddev_Samp_Order_By = {
  decreased_stat_id?: InputMaybe<Order_By>;
  game_index?: InputMaybe<Order_By>;
  hates_flavor_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  increased_stat_id?: InputMaybe<Order_By>;
  likes_flavor_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Nature_Sum_Fields = {
  __typename?: 'nature_sum_fields';
  decreased_stat_id?: Maybe<Scalars['Int']['output']>;
  game_index?: Maybe<Scalars['Int']['output']>;
  hates_flavor_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  increased_stat_id?: Maybe<Scalars['Int']['output']>;
  likes_flavor_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_nature" */
export type Nature_Sum_Order_By = {
  decreased_stat_id?: InputMaybe<Order_By>;
  game_index?: InputMaybe<Order_By>;
  hates_flavor_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  increased_stat_id?: InputMaybe<Order_By>;
  likes_flavor_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Nature_Var_Pop_Fields = {
  __typename?: 'nature_var_pop_fields';
  decreased_stat_id?: Maybe<Scalars['Float']['output']>;
  game_index?: Maybe<Scalars['Float']['output']>;
  hates_flavor_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  increased_stat_id?: Maybe<Scalars['Float']['output']>;
  likes_flavor_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_nature" */
export type Nature_Var_Pop_Order_By = {
  decreased_stat_id?: InputMaybe<Order_By>;
  game_index?: InputMaybe<Order_By>;
  hates_flavor_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  increased_stat_id?: InputMaybe<Order_By>;
  likes_flavor_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Nature_Var_Samp_Fields = {
  __typename?: 'nature_var_samp_fields';
  decreased_stat_id?: Maybe<Scalars['Float']['output']>;
  game_index?: Maybe<Scalars['Float']['output']>;
  hates_flavor_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  increased_stat_id?: Maybe<Scalars['Float']['output']>;
  likes_flavor_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_nature" */
export type Nature_Var_Samp_Order_By = {
  decreased_stat_id?: InputMaybe<Order_By>;
  game_index?: InputMaybe<Order_By>;
  hates_flavor_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  increased_stat_id?: InputMaybe<Order_By>;
  likes_flavor_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Nature_Variance_Fields = {
  __typename?: 'nature_variance_fields';
  decreased_stat_id?: Maybe<Scalars['Float']['output']>;
  game_index?: Maybe<Scalars['Float']['output']>;
  hates_flavor_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  increased_stat_id?: Maybe<Scalars['Float']['output']>;
  likes_flavor_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_nature" */
export type Nature_Variance_Order_By = {
  decreased_stat_id?: InputMaybe<Order_By>;
  game_index?: InputMaybe<Order_By>;
  hates_flavor_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  increased_stat_id?: InputMaybe<Order_By>;
  likes_flavor_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_naturebattlestylepreference" */
export type Naturebattlestylepreference = {
  __typename?: 'naturebattlestylepreference';
  high_hp_preference: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  low_hp_preference: Scalars['Int']['output'];
  move_battle_style_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  movebattlestyle?: Maybe<Movebattlestyle>;
  /** An object relationship */
  nature?: Maybe<Nature>;
  nature_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_naturebattlestylepreference" */
export type Naturebattlestylepreference_Aggregate = {
  __typename?: 'naturebattlestylepreference_aggregate';
  aggregate?: Maybe<Naturebattlestylepreference_Aggregate_Fields>;
  nodes: Array<Naturebattlestylepreference>;
};

export type Naturebattlestylepreference_Aggregate_Bool_Exp = {
  count?: InputMaybe<Naturebattlestylepreference_Aggregate_Bool_Exp_Count>;
};

export type Naturebattlestylepreference_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Naturebattlestylepreference_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Naturebattlestylepreference_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_naturebattlestylepreference" */
export type Naturebattlestylepreference_Aggregate_Fields = {
  __typename?: 'naturebattlestylepreference_aggregate_fields';
  avg?: Maybe<Naturebattlestylepreference_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Naturebattlestylepreference_Max_Fields>;
  min?: Maybe<Naturebattlestylepreference_Min_Fields>;
  stddev?: Maybe<Naturebattlestylepreference_Stddev_Fields>;
  stddev_pop?: Maybe<Naturebattlestylepreference_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Naturebattlestylepreference_Stddev_Samp_Fields>;
  sum?: Maybe<Naturebattlestylepreference_Sum_Fields>;
  var_pop?: Maybe<Naturebattlestylepreference_Var_Pop_Fields>;
  var_samp?: Maybe<Naturebattlestylepreference_Var_Samp_Fields>;
  variance?: Maybe<Naturebattlestylepreference_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_naturebattlestylepreference" */
export type Naturebattlestylepreference_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Naturebattlestylepreference_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_naturebattlestylepreference" */
export type Naturebattlestylepreference_Aggregate_Order_By = {
  avg?: InputMaybe<Naturebattlestylepreference_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Naturebattlestylepreference_Max_Order_By>;
  min?: InputMaybe<Naturebattlestylepreference_Min_Order_By>;
  stddev?: InputMaybe<Naturebattlestylepreference_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Naturebattlestylepreference_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Naturebattlestylepreference_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Naturebattlestylepreference_Sum_Order_By>;
  var_pop?: InputMaybe<Naturebattlestylepreference_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Naturebattlestylepreference_Var_Samp_Order_By>;
  variance?: InputMaybe<Naturebattlestylepreference_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Naturebattlestylepreference_Avg_Fields = {
  __typename?: 'naturebattlestylepreference_avg_fields';
  high_hp_preference?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  low_hp_preference?: Maybe<Scalars['Float']['output']>;
  move_battle_style_id?: Maybe<Scalars['Float']['output']>;
  nature_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_naturebattlestylepreference" */
export type Naturebattlestylepreference_Avg_Order_By = {
  high_hp_preference?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  low_hp_preference?: InputMaybe<Order_By>;
  move_battle_style_id?: InputMaybe<Order_By>;
  nature_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_naturebattlestylepreference". All fields are combined with a logical 'AND'. */
export type Naturebattlestylepreference_Bool_Exp = {
  _and?: InputMaybe<Array<Naturebattlestylepreference_Bool_Exp>>;
  _not?: InputMaybe<Naturebattlestylepreference_Bool_Exp>;
  _or?: InputMaybe<Array<Naturebattlestylepreference_Bool_Exp>>;
  high_hp_preference?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  low_hp_preference?: InputMaybe<Int_Comparison_Exp>;
  move_battle_style_id?: InputMaybe<Int_Comparison_Exp>;
  movebattlestyle?: InputMaybe<Movebattlestyle_Bool_Exp>;
  nature?: InputMaybe<Nature_Bool_Exp>;
  nature_id?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Naturebattlestylepreference_Max_Fields = {
  __typename?: 'naturebattlestylepreference_max_fields';
  high_hp_preference?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  low_hp_preference?: Maybe<Scalars['Int']['output']>;
  move_battle_style_id?: Maybe<Scalars['Int']['output']>;
  nature_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_naturebattlestylepreference" */
export type Naturebattlestylepreference_Max_Order_By = {
  high_hp_preference?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  low_hp_preference?: InputMaybe<Order_By>;
  move_battle_style_id?: InputMaybe<Order_By>;
  nature_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Naturebattlestylepreference_Min_Fields = {
  __typename?: 'naturebattlestylepreference_min_fields';
  high_hp_preference?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  low_hp_preference?: Maybe<Scalars['Int']['output']>;
  move_battle_style_id?: Maybe<Scalars['Int']['output']>;
  nature_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_naturebattlestylepreference" */
export type Naturebattlestylepreference_Min_Order_By = {
  high_hp_preference?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  low_hp_preference?: InputMaybe<Order_By>;
  move_battle_style_id?: InputMaybe<Order_By>;
  nature_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_naturebattlestylepreference". */
export type Naturebattlestylepreference_Order_By = {
  high_hp_preference?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  low_hp_preference?: InputMaybe<Order_By>;
  move_battle_style_id?: InputMaybe<Order_By>;
  movebattlestyle?: InputMaybe<Movebattlestyle_Order_By>;
  nature?: InputMaybe<Nature_Order_By>;
  nature_id?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_naturebattlestylepreference" */
export enum Naturebattlestylepreference_Select_Column {
  /** column name */
  HighHpPreference = 'high_hp_preference',
  /** column name */
  Id = 'id',
  /** column name */
  LowHpPreference = 'low_hp_preference',
  /** column name */
  MoveBattleStyleId = 'move_battle_style_id',
  /** column name */
  NatureId = 'nature_id'
}

/** aggregate stddev on columns */
export type Naturebattlestylepreference_Stddev_Fields = {
  __typename?: 'naturebattlestylepreference_stddev_fields';
  high_hp_preference?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  low_hp_preference?: Maybe<Scalars['Float']['output']>;
  move_battle_style_id?: Maybe<Scalars['Float']['output']>;
  nature_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_naturebattlestylepreference" */
export type Naturebattlestylepreference_Stddev_Order_By = {
  high_hp_preference?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  low_hp_preference?: InputMaybe<Order_By>;
  move_battle_style_id?: InputMaybe<Order_By>;
  nature_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Naturebattlestylepreference_Stddev_Pop_Fields = {
  __typename?: 'naturebattlestylepreference_stddev_pop_fields';
  high_hp_preference?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  low_hp_preference?: Maybe<Scalars['Float']['output']>;
  move_battle_style_id?: Maybe<Scalars['Float']['output']>;
  nature_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_naturebattlestylepreference" */
export type Naturebattlestylepreference_Stddev_Pop_Order_By = {
  high_hp_preference?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  low_hp_preference?: InputMaybe<Order_By>;
  move_battle_style_id?: InputMaybe<Order_By>;
  nature_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Naturebattlestylepreference_Stddev_Samp_Fields = {
  __typename?: 'naturebattlestylepreference_stddev_samp_fields';
  high_hp_preference?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  low_hp_preference?: Maybe<Scalars['Float']['output']>;
  move_battle_style_id?: Maybe<Scalars['Float']['output']>;
  nature_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_naturebattlestylepreference" */
export type Naturebattlestylepreference_Stddev_Samp_Order_By = {
  high_hp_preference?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  low_hp_preference?: InputMaybe<Order_By>;
  move_battle_style_id?: InputMaybe<Order_By>;
  nature_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Naturebattlestylepreference_Sum_Fields = {
  __typename?: 'naturebattlestylepreference_sum_fields';
  high_hp_preference?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  low_hp_preference?: Maybe<Scalars['Int']['output']>;
  move_battle_style_id?: Maybe<Scalars['Int']['output']>;
  nature_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_naturebattlestylepreference" */
export type Naturebattlestylepreference_Sum_Order_By = {
  high_hp_preference?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  low_hp_preference?: InputMaybe<Order_By>;
  move_battle_style_id?: InputMaybe<Order_By>;
  nature_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Naturebattlestylepreference_Var_Pop_Fields = {
  __typename?: 'naturebattlestylepreference_var_pop_fields';
  high_hp_preference?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  low_hp_preference?: Maybe<Scalars['Float']['output']>;
  move_battle_style_id?: Maybe<Scalars['Float']['output']>;
  nature_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_naturebattlestylepreference" */
export type Naturebattlestylepreference_Var_Pop_Order_By = {
  high_hp_preference?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  low_hp_preference?: InputMaybe<Order_By>;
  move_battle_style_id?: InputMaybe<Order_By>;
  nature_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Naturebattlestylepreference_Var_Samp_Fields = {
  __typename?: 'naturebattlestylepreference_var_samp_fields';
  high_hp_preference?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  low_hp_preference?: Maybe<Scalars['Float']['output']>;
  move_battle_style_id?: Maybe<Scalars['Float']['output']>;
  nature_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_naturebattlestylepreference" */
export type Naturebattlestylepreference_Var_Samp_Order_By = {
  high_hp_preference?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  low_hp_preference?: InputMaybe<Order_By>;
  move_battle_style_id?: InputMaybe<Order_By>;
  nature_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Naturebattlestylepreference_Variance_Fields = {
  __typename?: 'naturebattlestylepreference_variance_fields';
  high_hp_preference?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  low_hp_preference?: Maybe<Scalars['Float']['output']>;
  move_battle_style_id?: Maybe<Scalars['Float']['output']>;
  nature_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_naturebattlestylepreference" */
export type Naturebattlestylepreference_Variance_Order_By = {
  high_hp_preference?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  low_hp_preference?: InputMaybe<Order_By>;
  move_battle_style_id?: InputMaybe<Order_By>;
  nature_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_naturename" */
export type Naturename = {
  __typename?: 'naturename';
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
  /** An object relationship */
  nature?: Maybe<Nature>;
  nature_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_naturename" */
export type Naturename_Aggregate = {
  __typename?: 'naturename_aggregate';
  aggregate?: Maybe<Naturename_Aggregate_Fields>;
  nodes: Array<Naturename>;
};

export type Naturename_Aggregate_Bool_Exp = {
  count?: InputMaybe<Naturename_Aggregate_Bool_Exp_Count>;
};

export type Naturename_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Naturename_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Naturename_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_naturename" */
export type Naturename_Aggregate_Fields = {
  __typename?: 'naturename_aggregate_fields';
  avg?: Maybe<Naturename_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Naturename_Max_Fields>;
  min?: Maybe<Naturename_Min_Fields>;
  stddev?: Maybe<Naturename_Stddev_Fields>;
  stddev_pop?: Maybe<Naturename_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Naturename_Stddev_Samp_Fields>;
  sum?: Maybe<Naturename_Sum_Fields>;
  var_pop?: Maybe<Naturename_Var_Pop_Fields>;
  var_samp?: Maybe<Naturename_Var_Samp_Fields>;
  variance?: Maybe<Naturename_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_naturename" */
export type Naturename_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Naturename_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_naturename" */
export type Naturename_Aggregate_Order_By = {
  avg?: InputMaybe<Naturename_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Naturename_Max_Order_By>;
  min?: InputMaybe<Naturename_Min_Order_By>;
  stddev?: InputMaybe<Naturename_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Naturename_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Naturename_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Naturename_Sum_Order_By>;
  var_pop?: InputMaybe<Naturename_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Naturename_Var_Samp_Order_By>;
  variance?: InputMaybe<Naturename_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Naturename_Avg_Fields = {
  __typename?: 'naturename_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  nature_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_naturename" */
export type Naturename_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  nature_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_naturename". All fields are combined with a logical 'AND'. */
export type Naturename_Bool_Exp = {
  _and?: InputMaybe<Array<Naturename_Bool_Exp>>;
  _not?: InputMaybe<Naturename_Bool_Exp>;
  _or?: InputMaybe<Array<Naturename_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  nature?: InputMaybe<Nature_Bool_Exp>;
  nature_id?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Naturename_Max_Fields = {
  __typename?: 'naturename_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nature_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_naturename" */
export type Naturename_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  nature_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Naturename_Min_Fields = {
  __typename?: 'naturename_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nature_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_naturename" */
export type Naturename_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  nature_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_naturename". */
export type Naturename_Order_By = {
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  nature?: InputMaybe<Nature_Order_By>;
  nature_id?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_naturename" */
export enum Naturename_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name',
  /** column name */
  NatureId = 'nature_id'
}

/** aggregate stddev on columns */
export type Naturename_Stddev_Fields = {
  __typename?: 'naturename_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  nature_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_naturename" */
export type Naturename_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  nature_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Naturename_Stddev_Pop_Fields = {
  __typename?: 'naturename_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  nature_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_naturename" */
export type Naturename_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  nature_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Naturename_Stddev_Samp_Fields = {
  __typename?: 'naturename_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  nature_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_naturename" */
export type Naturename_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  nature_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Naturename_Sum_Fields = {
  __typename?: 'naturename_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  nature_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_naturename" */
export type Naturename_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  nature_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Naturename_Var_Pop_Fields = {
  __typename?: 'naturename_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  nature_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_naturename" */
export type Naturename_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  nature_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Naturename_Var_Samp_Fields = {
  __typename?: 'naturename_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  nature_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_naturename" */
export type Naturename_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  nature_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Naturename_Variance_Fields = {
  __typename?: 'naturename_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  nature_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_naturename" */
export type Naturename_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  nature_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_naturepokeathlonstat" */
export type Naturepokeathlonstat = {
  __typename?: 'naturepokeathlonstat';
  id: Scalars['Int']['output'];
  max_change: Scalars['Int']['output'];
  /** An object relationship */
  nature?: Maybe<Nature>;
  nature_id?: Maybe<Scalars['Int']['output']>;
  pokeathlon_stat_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  pokeathlonstat?: Maybe<Pokeathlonstat>;
};

/** aggregated selection of "pokemon_v2_naturepokeathlonstat" */
export type Naturepokeathlonstat_Aggregate = {
  __typename?: 'naturepokeathlonstat_aggregate';
  aggregate?: Maybe<Naturepokeathlonstat_Aggregate_Fields>;
  nodes: Array<Naturepokeathlonstat>;
};

export type Naturepokeathlonstat_Aggregate_Bool_Exp = {
  count?: InputMaybe<Naturepokeathlonstat_Aggregate_Bool_Exp_Count>;
};

export type Naturepokeathlonstat_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Naturepokeathlonstat_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Naturepokeathlonstat_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_naturepokeathlonstat" */
export type Naturepokeathlonstat_Aggregate_Fields = {
  __typename?: 'naturepokeathlonstat_aggregate_fields';
  avg?: Maybe<Naturepokeathlonstat_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Naturepokeathlonstat_Max_Fields>;
  min?: Maybe<Naturepokeathlonstat_Min_Fields>;
  stddev?: Maybe<Naturepokeathlonstat_Stddev_Fields>;
  stddev_pop?: Maybe<Naturepokeathlonstat_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Naturepokeathlonstat_Stddev_Samp_Fields>;
  sum?: Maybe<Naturepokeathlonstat_Sum_Fields>;
  var_pop?: Maybe<Naturepokeathlonstat_Var_Pop_Fields>;
  var_samp?: Maybe<Naturepokeathlonstat_Var_Samp_Fields>;
  variance?: Maybe<Naturepokeathlonstat_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_naturepokeathlonstat" */
export type Naturepokeathlonstat_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Naturepokeathlonstat_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_naturepokeathlonstat" */
export type Naturepokeathlonstat_Aggregate_Order_By = {
  avg?: InputMaybe<Naturepokeathlonstat_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Naturepokeathlonstat_Max_Order_By>;
  min?: InputMaybe<Naturepokeathlonstat_Min_Order_By>;
  stddev?: InputMaybe<Naturepokeathlonstat_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Naturepokeathlonstat_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Naturepokeathlonstat_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Naturepokeathlonstat_Sum_Order_By>;
  var_pop?: InputMaybe<Naturepokeathlonstat_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Naturepokeathlonstat_Var_Samp_Order_By>;
  variance?: InputMaybe<Naturepokeathlonstat_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Naturepokeathlonstat_Avg_Fields = {
  __typename?: 'naturepokeathlonstat_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  max_change?: Maybe<Scalars['Float']['output']>;
  nature_id?: Maybe<Scalars['Float']['output']>;
  pokeathlon_stat_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_naturepokeathlonstat" */
export type Naturepokeathlonstat_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  max_change?: InputMaybe<Order_By>;
  nature_id?: InputMaybe<Order_By>;
  pokeathlon_stat_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_naturepokeathlonstat". All fields are combined with a logical 'AND'. */
export type Naturepokeathlonstat_Bool_Exp = {
  _and?: InputMaybe<Array<Naturepokeathlonstat_Bool_Exp>>;
  _not?: InputMaybe<Naturepokeathlonstat_Bool_Exp>;
  _or?: InputMaybe<Array<Naturepokeathlonstat_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  max_change?: InputMaybe<Int_Comparison_Exp>;
  nature?: InputMaybe<Nature_Bool_Exp>;
  nature_id?: InputMaybe<Int_Comparison_Exp>;
  pokeathlon_stat_id?: InputMaybe<Int_Comparison_Exp>;
  pokeathlonstat?: InputMaybe<Pokeathlonstat_Bool_Exp>;
};

/** aggregate max on columns */
export type Naturepokeathlonstat_Max_Fields = {
  __typename?: 'naturepokeathlonstat_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  max_change?: Maybe<Scalars['Int']['output']>;
  nature_id?: Maybe<Scalars['Int']['output']>;
  pokeathlon_stat_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_naturepokeathlonstat" */
export type Naturepokeathlonstat_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  max_change?: InputMaybe<Order_By>;
  nature_id?: InputMaybe<Order_By>;
  pokeathlon_stat_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Naturepokeathlonstat_Min_Fields = {
  __typename?: 'naturepokeathlonstat_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  max_change?: Maybe<Scalars['Int']['output']>;
  nature_id?: Maybe<Scalars['Int']['output']>;
  pokeathlon_stat_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_naturepokeathlonstat" */
export type Naturepokeathlonstat_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  max_change?: InputMaybe<Order_By>;
  nature_id?: InputMaybe<Order_By>;
  pokeathlon_stat_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_naturepokeathlonstat". */
export type Naturepokeathlonstat_Order_By = {
  id?: InputMaybe<Order_By>;
  max_change?: InputMaybe<Order_By>;
  nature?: InputMaybe<Nature_Order_By>;
  nature_id?: InputMaybe<Order_By>;
  pokeathlon_stat_id?: InputMaybe<Order_By>;
  pokeathlonstat?: InputMaybe<Pokeathlonstat_Order_By>;
};

/** select columns of table "pokemon_v2_naturepokeathlonstat" */
export enum Naturepokeathlonstat_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  MaxChange = 'max_change',
  /** column name */
  NatureId = 'nature_id',
  /** column name */
  PokeathlonStatId = 'pokeathlon_stat_id'
}

/** aggregate stddev on columns */
export type Naturepokeathlonstat_Stddev_Fields = {
  __typename?: 'naturepokeathlonstat_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  max_change?: Maybe<Scalars['Float']['output']>;
  nature_id?: Maybe<Scalars['Float']['output']>;
  pokeathlon_stat_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_naturepokeathlonstat" */
export type Naturepokeathlonstat_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  max_change?: InputMaybe<Order_By>;
  nature_id?: InputMaybe<Order_By>;
  pokeathlon_stat_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Naturepokeathlonstat_Stddev_Pop_Fields = {
  __typename?: 'naturepokeathlonstat_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  max_change?: Maybe<Scalars['Float']['output']>;
  nature_id?: Maybe<Scalars['Float']['output']>;
  pokeathlon_stat_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_naturepokeathlonstat" */
export type Naturepokeathlonstat_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  max_change?: InputMaybe<Order_By>;
  nature_id?: InputMaybe<Order_By>;
  pokeathlon_stat_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Naturepokeathlonstat_Stddev_Samp_Fields = {
  __typename?: 'naturepokeathlonstat_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  max_change?: Maybe<Scalars['Float']['output']>;
  nature_id?: Maybe<Scalars['Float']['output']>;
  pokeathlon_stat_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_naturepokeathlonstat" */
export type Naturepokeathlonstat_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  max_change?: InputMaybe<Order_By>;
  nature_id?: InputMaybe<Order_By>;
  pokeathlon_stat_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Naturepokeathlonstat_Sum_Fields = {
  __typename?: 'naturepokeathlonstat_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  max_change?: Maybe<Scalars['Int']['output']>;
  nature_id?: Maybe<Scalars['Int']['output']>;
  pokeathlon_stat_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_naturepokeathlonstat" */
export type Naturepokeathlonstat_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  max_change?: InputMaybe<Order_By>;
  nature_id?: InputMaybe<Order_By>;
  pokeathlon_stat_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Naturepokeathlonstat_Var_Pop_Fields = {
  __typename?: 'naturepokeathlonstat_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  max_change?: Maybe<Scalars['Float']['output']>;
  nature_id?: Maybe<Scalars['Float']['output']>;
  pokeathlon_stat_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_naturepokeathlonstat" */
export type Naturepokeathlonstat_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  max_change?: InputMaybe<Order_By>;
  nature_id?: InputMaybe<Order_By>;
  pokeathlon_stat_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Naturepokeathlonstat_Var_Samp_Fields = {
  __typename?: 'naturepokeathlonstat_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  max_change?: Maybe<Scalars['Float']['output']>;
  nature_id?: Maybe<Scalars['Float']['output']>;
  pokeathlon_stat_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_naturepokeathlonstat" */
export type Naturepokeathlonstat_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  max_change?: InputMaybe<Order_By>;
  nature_id?: InputMaybe<Order_By>;
  pokeathlon_stat_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Naturepokeathlonstat_Variance_Fields = {
  __typename?: 'naturepokeathlonstat_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  max_change?: Maybe<Scalars['Float']['output']>;
  nature_id?: Maybe<Scalars['Float']['output']>;
  pokeathlon_stat_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_naturepokeathlonstat" */
export type Naturepokeathlonstat_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  max_change?: InputMaybe<Order_By>;
  nature_id?: InputMaybe<Order_By>;
  pokeathlon_stat_id?: InputMaybe<Order_By>;
};

/** column ordering options */
export enum Order_By {
  /** in ascending order, nulls last */
  Asc = 'asc',
  /** in ascending order, nulls first */
  AscNullsFirst = 'asc_nulls_first',
  /** in ascending order, nulls last */
  AscNullsLast = 'asc_nulls_last',
  /** in descending order, nulls first */
  Desc = 'desc',
  /** in descending order, nulls first */
  DescNullsFirst = 'desc_nulls_first',
  /** in descending order, nulls last */
  DescNullsLast = 'desc_nulls_last'
}

/** columns and relationships of "pokemon_v2_palpark" */
export type Palpark = {
  __typename?: 'palpark';
  base_score?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  pal_park_area_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  palparkarea?: Maybe<Palparkarea>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  pokemonspecy?: Maybe<Pokemonspecies>;
  rate: Scalars['Int']['output'];
};

/** aggregated selection of "pokemon_v2_palpark" */
export type Palpark_Aggregate = {
  __typename?: 'palpark_aggregate';
  aggregate?: Maybe<Palpark_Aggregate_Fields>;
  nodes: Array<Palpark>;
};

export type Palpark_Aggregate_Bool_Exp = {
  count?: InputMaybe<Palpark_Aggregate_Bool_Exp_Count>;
};

export type Palpark_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Palpark_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Palpark_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_palpark" */
export type Palpark_Aggregate_Fields = {
  __typename?: 'palpark_aggregate_fields';
  avg?: Maybe<Palpark_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Palpark_Max_Fields>;
  min?: Maybe<Palpark_Min_Fields>;
  stddev?: Maybe<Palpark_Stddev_Fields>;
  stddev_pop?: Maybe<Palpark_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Palpark_Stddev_Samp_Fields>;
  sum?: Maybe<Palpark_Sum_Fields>;
  var_pop?: Maybe<Palpark_Var_Pop_Fields>;
  var_samp?: Maybe<Palpark_Var_Samp_Fields>;
  variance?: Maybe<Palpark_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_palpark" */
export type Palpark_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Palpark_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_palpark" */
export type Palpark_Aggregate_Order_By = {
  avg?: InputMaybe<Palpark_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Palpark_Max_Order_By>;
  min?: InputMaybe<Palpark_Min_Order_By>;
  stddev?: InputMaybe<Palpark_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Palpark_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Palpark_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Palpark_Sum_Order_By>;
  var_pop?: InputMaybe<Palpark_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Palpark_Var_Samp_Order_By>;
  variance?: InputMaybe<Palpark_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Palpark_Avg_Fields = {
  __typename?: 'palpark_avg_fields';
  base_score?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pal_park_area_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
  rate?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_palpark" */
export type Palpark_Avg_Order_By = {
  base_score?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pal_park_area_id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
  rate?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_palpark". All fields are combined with a logical 'AND'. */
export type Palpark_Bool_Exp = {
  _and?: InputMaybe<Array<Palpark_Bool_Exp>>;
  _not?: InputMaybe<Palpark_Bool_Exp>;
  _or?: InputMaybe<Array<Palpark_Bool_Exp>>;
  base_score?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  pal_park_area_id?: InputMaybe<Int_Comparison_Exp>;
  palparkarea?: InputMaybe<Palparkarea_Bool_Exp>;
  pokemon_species_id?: InputMaybe<Int_Comparison_Exp>;
  pokemonspecy?: InputMaybe<Pokemonspecies_Bool_Exp>;
  rate?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Palpark_Max_Fields = {
  __typename?: 'palpark_max_fields';
  base_score?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  pal_park_area_id?: Maybe<Scalars['Int']['output']>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
  rate?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_palpark" */
export type Palpark_Max_Order_By = {
  base_score?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pal_park_area_id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
  rate?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Palpark_Min_Fields = {
  __typename?: 'palpark_min_fields';
  base_score?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  pal_park_area_id?: Maybe<Scalars['Int']['output']>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
  rate?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_palpark" */
export type Palpark_Min_Order_By = {
  base_score?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pal_park_area_id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
  rate?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_palpark". */
export type Palpark_Order_By = {
  base_score?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pal_park_area_id?: InputMaybe<Order_By>;
  palparkarea?: InputMaybe<Palparkarea_Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
  pokemonspecy?: InputMaybe<Pokemonspecies_Order_By>;
  rate?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_palpark" */
export enum Palpark_Select_Column {
  /** column name */
  BaseScore = 'base_score',
  /** column name */
  Id = 'id',
  /** column name */
  PalParkAreaId = 'pal_park_area_id',
  /** column name */
  PokemonSpeciesId = 'pokemon_species_id',
  /** column name */
  Rate = 'rate'
}

/** aggregate stddev on columns */
export type Palpark_Stddev_Fields = {
  __typename?: 'palpark_stddev_fields';
  base_score?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pal_park_area_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
  rate?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_palpark" */
export type Palpark_Stddev_Order_By = {
  base_score?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pal_park_area_id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
  rate?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Palpark_Stddev_Pop_Fields = {
  __typename?: 'palpark_stddev_pop_fields';
  base_score?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pal_park_area_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
  rate?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_palpark" */
export type Palpark_Stddev_Pop_Order_By = {
  base_score?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pal_park_area_id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
  rate?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Palpark_Stddev_Samp_Fields = {
  __typename?: 'palpark_stddev_samp_fields';
  base_score?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pal_park_area_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
  rate?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_palpark" */
export type Palpark_Stddev_Samp_Order_By = {
  base_score?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pal_park_area_id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
  rate?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Palpark_Sum_Fields = {
  __typename?: 'palpark_sum_fields';
  base_score?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  pal_park_area_id?: Maybe<Scalars['Int']['output']>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
  rate?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_palpark" */
export type Palpark_Sum_Order_By = {
  base_score?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pal_park_area_id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
  rate?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Palpark_Var_Pop_Fields = {
  __typename?: 'palpark_var_pop_fields';
  base_score?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pal_park_area_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
  rate?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_palpark" */
export type Palpark_Var_Pop_Order_By = {
  base_score?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pal_park_area_id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
  rate?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Palpark_Var_Samp_Fields = {
  __typename?: 'palpark_var_samp_fields';
  base_score?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pal_park_area_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
  rate?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_palpark" */
export type Palpark_Var_Samp_Order_By = {
  base_score?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pal_park_area_id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
  rate?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Palpark_Variance_Fields = {
  __typename?: 'palpark_variance_fields';
  base_score?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pal_park_area_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
  rate?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_palpark" */
export type Palpark_Variance_Order_By = {
  base_score?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pal_park_area_id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
  rate?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_palparkarea" */
export type Palparkarea = {
  __typename?: 'palparkarea';
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  /** An array relationship */
  palparkareanames: Array<Palparkareaname>;
  /** An aggregate relationship */
  palparkareanames_aggregate: Palparkareaname_Aggregate;
  /** An array relationship */
  palparks: Array<Palpark>;
  /** An aggregate relationship */
  palparks_aggregate: Palpark_Aggregate;
};


/** columns and relationships of "pokemon_v2_palparkarea" */
export type PalparkareaPalparkareanamesArgs = {
  distinct_on?: InputMaybe<Array<Palparkareaname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Palparkareaname_Order_By>>;
  where?: InputMaybe<Palparkareaname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_palparkarea" */
export type PalparkareaPalparkareanames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Palparkareaname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Palparkareaname_Order_By>>;
  where?: InputMaybe<Palparkareaname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_palparkarea" */
export type PalparkareaPalparksArgs = {
  distinct_on?: InputMaybe<Array<Palpark_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Palpark_Order_By>>;
  where?: InputMaybe<Palpark_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_palparkarea" */
export type PalparkareaPalparks_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Palpark_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Palpark_Order_By>>;
  where?: InputMaybe<Palpark_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_palparkarea" */
export type Palparkarea_Aggregate = {
  __typename?: 'palparkarea_aggregate';
  aggregate?: Maybe<Palparkarea_Aggregate_Fields>;
  nodes: Array<Palparkarea>;
};

/** aggregate fields of "pokemon_v2_palparkarea" */
export type Palparkarea_Aggregate_Fields = {
  __typename?: 'palparkarea_aggregate_fields';
  avg?: Maybe<Palparkarea_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Palparkarea_Max_Fields>;
  min?: Maybe<Palparkarea_Min_Fields>;
  stddev?: Maybe<Palparkarea_Stddev_Fields>;
  stddev_pop?: Maybe<Palparkarea_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Palparkarea_Stddev_Samp_Fields>;
  sum?: Maybe<Palparkarea_Sum_Fields>;
  var_pop?: Maybe<Palparkarea_Var_Pop_Fields>;
  var_samp?: Maybe<Palparkarea_Var_Samp_Fields>;
  variance?: Maybe<Palparkarea_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_palparkarea" */
export type Palparkarea_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Palparkarea_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Palparkarea_Avg_Fields = {
  __typename?: 'palparkarea_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_palparkarea". All fields are combined with a logical 'AND'. */
export type Palparkarea_Bool_Exp = {
  _and?: InputMaybe<Array<Palparkarea_Bool_Exp>>;
  _not?: InputMaybe<Palparkarea_Bool_Exp>;
  _or?: InputMaybe<Array<Palparkarea_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  palparkareanames?: InputMaybe<Palparkareaname_Bool_Exp>;
  palparkareanames_aggregate?: InputMaybe<Palparkareaname_Aggregate_Bool_Exp>;
  palparks?: InputMaybe<Palpark_Bool_Exp>;
  palparks_aggregate?: InputMaybe<Palpark_Aggregate_Bool_Exp>;
};

/** aggregate max on columns */
export type Palparkarea_Max_Fields = {
  __typename?: 'palparkarea_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Palparkarea_Min_Fields = {
  __typename?: 'palparkarea_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** Ordering options when selecting data from "pokemon_v2_palparkarea". */
export type Palparkarea_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  palparkareanames_aggregate?: InputMaybe<Palparkareaname_Aggregate_Order_By>;
  palparks_aggregate?: InputMaybe<Palpark_Aggregate_Order_By>;
};

/** select columns of table "pokemon_v2_palparkarea" */
export enum Palparkarea_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Palparkarea_Stddev_Fields = {
  __typename?: 'palparkarea_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Palparkarea_Stddev_Pop_Fields = {
  __typename?: 'palparkarea_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Palparkarea_Stddev_Samp_Fields = {
  __typename?: 'palparkarea_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate sum on columns */
export type Palparkarea_Sum_Fields = {
  __typename?: 'palparkarea_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate var_pop on columns */
export type Palparkarea_Var_Pop_Fields = {
  __typename?: 'palparkarea_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Palparkarea_Var_Samp_Fields = {
  __typename?: 'palparkarea_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Palparkarea_Variance_Fields = {
  __typename?: 'palparkarea_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_palparkareaname" */
export type Palparkareaname = {
  __typename?: 'palparkareaname';
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
  pal_park_area_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  palparkarea?: Maybe<Palparkarea>;
};

/** aggregated selection of "pokemon_v2_palparkareaname" */
export type Palparkareaname_Aggregate = {
  __typename?: 'palparkareaname_aggregate';
  aggregate?: Maybe<Palparkareaname_Aggregate_Fields>;
  nodes: Array<Palparkareaname>;
};

export type Palparkareaname_Aggregate_Bool_Exp = {
  count?: InputMaybe<Palparkareaname_Aggregate_Bool_Exp_Count>;
};

export type Palparkareaname_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Palparkareaname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Palparkareaname_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_palparkareaname" */
export type Palparkareaname_Aggregate_Fields = {
  __typename?: 'palparkareaname_aggregate_fields';
  avg?: Maybe<Palparkareaname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Palparkareaname_Max_Fields>;
  min?: Maybe<Palparkareaname_Min_Fields>;
  stddev?: Maybe<Palparkareaname_Stddev_Fields>;
  stddev_pop?: Maybe<Palparkareaname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Palparkareaname_Stddev_Samp_Fields>;
  sum?: Maybe<Palparkareaname_Sum_Fields>;
  var_pop?: Maybe<Palparkareaname_Var_Pop_Fields>;
  var_samp?: Maybe<Palparkareaname_Var_Samp_Fields>;
  variance?: Maybe<Palparkareaname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_palparkareaname" */
export type Palparkareaname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Palparkareaname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_palparkareaname" */
export type Palparkareaname_Aggregate_Order_By = {
  avg?: InputMaybe<Palparkareaname_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Palparkareaname_Max_Order_By>;
  min?: InputMaybe<Palparkareaname_Min_Order_By>;
  stddev?: InputMaybe<Palparkareaname_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Palparkareaname_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Palparkareaname_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Palparkareaname_Sum_Order_By>;
  var_pop?: InputMaybe<Palparkareaname_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Palparkareaname_Var_Samp_Order_By>;
  variance?: InputMaybe<Palparkareaname_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Palparkareaname_Avg_Fields = {
  __typename?: 'palparkareaname_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pal_park_area_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_palparkareaname" */
export type Palparkareaname_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pal_park_area_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_palparkareaname". All fields are combined with a logical 'AND'. */
export type Palparkareaname_Bool_Exp = {
  _and?: InputMaybe<Array<Palparkareaname_Bool_Exp>>;
  _not?: InputMaybe<Palparkareaname_Bool_Exp>;
  _or?: InputMaybe<Array<Palparkareaname_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  pal_park_area_id?: InputMaybe<Int_Comparison_Exp>;
  palparkarea?: InputMaybe<Palparkarea_Bool_Exp>;
};

/** aggregate max on columns */
export type Palparkareaname_Max_Fields = {
  __typename?: 'palparkareaname_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  pal_park_area_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_palparkareaname" */
export type Palparkareaname_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  pal_park_area_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Palparkareaname_Min_Fields = {
  __typename?: 'palparkareaname_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  pal_park_area_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_palparkareaname" */
export type Palparkareaname_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  pal_park_area_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_palparkareaname". */
export type Palparkareaname_Order_By = {
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  pal_park_area_id?: InputMaybe<Order_By>;
  palparkarea?: InputMaybe<Palparkarea_Order_By>;
};

/** select columns of table "pokemon_v2_palparkareaname" */
export enum Palparkareaname_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name',
  /** column name */
  PalParkAreaId = 'pal_park_area_id'
}

/** aggregate stddev on columns */
export type Palparkareaname_Stddev_Fields = {
  __typename?: 'palparkareaname_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pal_park_area_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_palparkareaname" */
export type Palparkareaname_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pal_park_area_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Palparkareaname_Stddev_Pop_Fields = {
  __typename?: 'palparkareaname_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pal_park_area_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_palparkareaname" */
export type Palparkareaname_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pal_park_area_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Palparkareaname_Stddev_Samp_Fields = {
  __typename?: 'palparkareaname_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pal_park_area_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_palparkareaname" */
export type Palparkareaname_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pal_park_area_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Palparkareaname_Sum_Fields = {
  __typename?: 'palparkareaname_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  pal_park_area_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_palparkareaname" */
export type Palparkareaname_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pal_park_area_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Palparkareaname_Var_Pop_Fields = {
  __typename?: 'palparkareaname_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pal_park_area_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_palparkareaname" */
export type Palparkareaname_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pal_park_area_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Palparkareaname_Var_Samp_Fields = {
  __typename?: 'palparkareaname_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pal_park_area_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_palparkareaname" */
export type Palparkareaname_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pal_park_area_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Palparkareaname_Variance_Fields = {
  __typename?: 'palparkareaname_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pal_park_area_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_palparkareaname" */
export type Palparkareaname_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pal_park_area_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_pokeathlonstat" */
export type Pokeathlonstat = {
  __typename?: 'pokeathlonstat';
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  /** An array relationship */
  naturepokeathlonstats: Array<Naturepokeathlonstat>;
  /** An aggregate relationship */
  naturepokeathlonstats_aggregate: Naturepokeathlonstat_Aggregate;
  /** An array relationship */
  pokeathlonstatnames: Array<Pokeathlonstatname>;
  /** An aggregate relationship */
  pokeathlonstatnames_aggregate: Pokeathlonstatname_Aggregate;
};


/** columns and relationships of "pokemon_v2_pokeathlonstat" */
export type PokeathlonstatNaturepokeathlonstatsArgs = {
  distinct_on?: InputMaybe<Array<Naturepokeathlonstat_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Naturepokeathlonstat_Order_By>>;
  where?: InputMaybe<Naturepokeathlonstat_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokeathlonstat" */
export type PokeathlonstatNaturepokeathlonstats_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Naturepokeathlonstat_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Naturepokeathlonstat_Order_By>>;
  where?: InputMaybe<Naturepokeathlonstat_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokeathlonstat" */
export type PokeathlonstatPokeathlonstatnamesArgs = {
  distinct_on?: InputMaybe<Array<Pokeathlonstatname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokeathlonstatname_Order_By>>;
  where?: InputMaybe<Pokeathlonstatname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokeathlonstat" */
export type PokeathlonstatPokeathlonstatnames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokeathlonstatname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokeathlonstatname_Order_By>>;
  where?: InputMaybe<Pokeathlonstatname_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_pokeathlonstat" */
export type Pokeathlonstat_Aggregate = {
  __typename?: 'pokeathlonstat_aggregate';
  aggregate?: Maybe<Pokeathlonstat_Aggregate_Fields>;
  nodes: Array<Pokeathlonstat>;
};

/** aggregate fields of "pokemon_v2_pokeathlonstat" */
export type Pokeathlonstat_Aggregate_Fields = {
  __typename?: 'pokeathlonstat_aggregate_fields';
  avg?: Maybe<Pokeathlonstat_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokeathlonstat_Max_Fields>;
  min?: Maybe<Pokeathlonstat_Min_Fields>;
  stddev?: Maybe<Pokeathlonstat_Stddev_Fields>;
  stddev_pop?: Maybe<Pokeathlonstat_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokeathlonstat_Stddev_Samp_Fields>;
  sum?: Maybe<Pokeathlonstat_Sum_Fields>;
  var_pop?: Maybe<Pokeathlonstat_Var_Pop_Fields>;
  var_samp?: Maybe<Pokeathlonstat_Var_Samp_Fields>;
  variance?: Maybe<Pokeathlonstat_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokeathlonstat" */
export type Pokeathlonstat_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokeathlonstat_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokeathlonstat_Avg_Fields = {
  __typename?: 'pokeathlonstat_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokeathlonstat". All fields are combined with a logical 'AND'. */
export type Pokeathlonstat_Bool_Exp = {
  _and?: InputMaybe<Array<Pokeathlonstat_Bool_Exp>>;
  _not?: InputMaybe<Pokeathlonstat_Bool_Exp>;
  _or?: InputMaybe<Array<Pokeathlonstat_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  naturepokeathlonstats?: InputMaybe<Naturepokeathlonstat_Bool_Exp>;
  naturepokeathlonstats_aggregate?: InputMaybe<Naturepokeathlonstat_Aggregate_Bool_Exp>;
  pokeathlonstatnames?: InputMaybe<Pokeathlonstatname_Bool_Exp>;
  pokeathlonstatnames_aggregate?: InputMaybe<Pokeathlonstatname_Aggregate_Bool_Exp>;
};

/** aggregate max on columns */
export type Pokeathlonstat_Max_Fields = {
  __typename?: 'pokeathlonstat_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokeathlonstat_Min_Fields = {
  __typename?: 'pokeathlonstat_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** Ordering options when selecting data from "pokemon_v2_pokeathlonstat". */
export type Pokeathlonstat_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  naturepokeathlonstats_aggregate?: InputMaybe<Naturepokeathlonstat_Aggregate_Order_By>;
  pokeathlonstatnames_aggregate?: InputMaybe<Pokeathlonstatname_Aggregate_Order_By>;
};

/** select columns of table "pokemon_v2_pokeathlonstat" */
export enum Pokeathlonstat_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Pokeathlonstat_Stddev_Fields = {
  __typename?: 'pokeathlonstat_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokeathlonstat_Stddev_Pop_Fields = {
  __typename?: 'pokeathlonstat_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokeathlonstat_Stddev_Samp_Fields = {
  __typename?: 'pokeathlonstat_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate sum on columns */
export type Pokeathlonstat_Sum_Fields = {
  __typename?: 'pokeathlonstat_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate var_pop on columns */
export type Pokeathlonstat_Var_Pop_Fields = {
  __typename?: 'pokeathlonstat_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokeathlonstat_Var_Samp_Fields = {
  __typename?: 'pokeathlonstat_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokeathlonstat_Variance_Fields = {
  __typename?: 'pokeathlonstat_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_pokeathlonstatname" */
export type Pokeathlonstatname = {
  __typename?: 'pokeathlonstatname';
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
  pokeathlon_stat_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  pokeathlonstat?: Maybe<Pokeathlonstat>;
};

/** aggregated selection of "pokemon_v2_pokeathlonstatname" */
export type Pokeathlonstatname_Aggregate = {
  __typename?: 'pokeathlonstatname_aggregate';
  aggregate?: Maybe<Pokeathlonstatname_Aggregate_Fields>;
  nodes: Array<Pokeathlonstatname>;
};

export type Pokeathlonstatname_Aggregate_Bool_Exp = {
  count?: InputMaybe<Pokeathlonstatname_Aggregate_Bool_Exp_Count>;
};

export type Pokeathlonstatname_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Pokeathlonstatname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Pokeathlonstatname_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_pokeathlonstatname" */
export type Pokeathlonstatname_Aggregate_Fields = {
  __typename?: 'pokeathlonstatname_aggregate_fields';
  avg?: Maybe<Pokeathlonstatname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokeathlonstatname_Max_Fields>;
  min?: Maybe<Pokeathlonstatname_Min_Fields>;
  stddev?: Maybe<Pokeathlonstatname_Stddev_Fields>;
  stddev_pop?: Maybe<Pokeathlonstatname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokeathlonstatname_Stddev_Samp_Fields>;
  sum?: Maybe<Pokeathlonstatname_Sum_Fields>;
  var_pop?: Maybe<Pokeathlonstatname_Var_Pop_Fields>;
  var_samp?: Maybe<Pokeathlonstatname_Var_Samp_Fields>;
  variance?: Maybe<Pokeathlonstatname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokeathlonstatname" */
export type Pokeathlonstatname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokeathlonstatname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_pokeathlonstatname" */
export type Pokeathlonstatname_Aggregate_Order_By = {
  avg?: InputMaybe<Pokeathlonstatname_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Pokeathlonstatname_Max_Order_By>;
  min?: InputMaybe<Pokeathlonstatname_Min_Order_By>;
  stddev?: InputMaybe<Pokeathlonstatname_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Pokeathlonstatname_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Pokeathlonstatname_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Pokeathlonstatname_Sum_Order_By>;
  var_pop?: InputMaybe<Pokeathlonstatname_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Pokeathlonstatname_Var_Samp_Order_By>;
  variance?: InputMaybe<Pokeathlonstatname_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Pokeathlonstatname_Avg_Fields = {
  __typename?: 'pokeathlonstatname_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokeathlon_stat_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_pokeathlonstatname" */
export type Pokeathlonstatname_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokeathlon_stat_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokeathlonstatname". All fields are combined with a logical 'AND'. */
export type Pokeathlonstatname_Bool_Exp = {
  _and?: InputMaybe<Array<Pokeathlonstatname_Bool_Exp>>;
  _not?: InputMaybe<Pokeathlonstatname_Bool_Exp>;
  _or?: InputMaybe<Array<Pokeathlonstatname_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  pokeathlon_stat_id?: InputMaybe<Int_Comparison_Exp>;
  pokeathlonstat?: InputMaybe<Pokeathlonstat_Bool_Exp>;
};

/** aggregate max on columns */
export type Pokeathlonstatname_Max_Fields = {
  __typename?: 'pokeathlonstatname_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  pokeathlon_stat_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_pokeathlonstatname" */
export type Pokeathlonstatname_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  pokeathlon_stat_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Pokeathlonstatname_Min_Fields = {
  __typename?: 'pokeathlonstatname_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  pokeathlon_stat_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_pokeathlonstatname" */
export type Pokeathlonstatname_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  pokeathlon_stat_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_pokeathlonstatname". */
export type Pokeathlonstatname_Order_By = {
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  pokeathlon_stat_id?: InputMaybe<Order_By>;
  pokeathlonstat?: InputMaybe<Pokeathlonstat_Order_By>;
};

/** select columns of table "pokemon_v2_pokeathlonstatname" */
export enum Pokeathlonstatname_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name',
  /** column name */
  PokeathlonStatId = 'pokeathlon_stat_id'
}

/** aggregate stddev on columns */
export type Pokeathlonstatname_Stddev_Fields = {
  __typename?: 'pokeathlonstatname_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokeathlon_stat_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_pokeathlonstatname" */
export type Pokeathlonstatname_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokeathlon_stat_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Pokeathlonstatname_Stddev_Pop_Fields = {
  __typename?: 'pokeathlonstatname_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokeathlon_stat_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_pokeathlonstatname" */
export type Pokeathlonstatname_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokeathlon_stat_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Pokeathlonstatname_Stddev_Samp_Fields = {
  __typename?: 'pokeathlonstatname_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokeathlon_stat_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_pokeathlonstatname" */
export type Pokeathlonstatname_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokeathlon_stat_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Pokeathlonstatname_Sum_Fields = {
  __typename?: 'pokeathlonstatname_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  pokeathlon_stat_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_pokeathlonstatname" */
export type Pokeathlonstatname_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokeathlon_stat_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Pokeathlonstatname_Var_Pop_Fields = {
  __typename?: 'pokeathlonstatname_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokeathlon_stat_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_pokeathlonstatname" */
export type Pokeathlonstatname_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokeathlon_stat_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Pokeathlonstatname_Var_Samp_Fields = {
  __typename?: 'pokeathlonstatname_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokeathlon_stat_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_pokeathlonstatname" */
export type Pokeathlonstatname_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokeathlon_stat_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Pokeathlonstatname_Variance_Fields = {
  __typename?: 'pokeathlonstatname_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokeathlon_stat_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_pokeathlonstatname" */
export type Pokeathlonstatname_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokeathlon_stat_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_pokedex" */
export type Pokedex = {
  __typename?: 'pokedex';
  id: Scalars['Int']['output'];
  is_main_series: Scalars['Boolean']['output'];
  name: Scalars['String']['output'];
  /** An array relationship */
  pokedexdescriptions: Array<Pokedexdescription>;
  /** An aggregate relationship */
  pokedexdescriptions_aggregate: Pokedexdescription_Aggregate;
  /** An array relationship */
  pokedexnames: Array<Pokedexname>;
  /** An aggregate relationship */
  pokedexnames_aggregate: Pokedexname_Aggregate;
  /** An array relationship */
  pokedexversiongroups: Array<Pokedexversiongroup>;
  /** An aggregate relationship */
  pokedexversiongroups_aggregate: Pokedexversiongroup_Aggregate;
  /** An array relationship */
  pokemondexnumbers: Array<Pokemondexnumber>;
  /** An aggregate relationship */
  pokemondexnumbers_aggregate: Pokemondexnumber_Aggregate;
  /** An object relationship */
  region?: Maybe<Region>;
  region_id?: Maybe<Scalars['Int']['output']>;
};


/** columns and relationships of "pokemon_v2_pokedex" */
export type PokedexPokedexdescriptionsArgs = {
  distinct_on?: InputMaybe<Array<Pokedexdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokedexdescription_Order_By>>;
  where?: InputMaybe<Pokedexdescription_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokedex" */
export type PokedexPokedexdescriptions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokedexdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokedexdescription_Order_By>>;
  where?: InputMaybe<Pokedexdescription_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokedex" */
export type PokedexPokedexnamesArgs = {
  distinct_on?: InputMaybe<Array<Pokedexname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokedexname_Order_By>>;
  where?: InputMaybe<Pokedexname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokedex" */
export type PokedexPokedexnames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokedexname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokedexname_Order_By>>;
  where?: InputMaybe<Pokedexname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokedex" */
export type PokedexPokedexversiongroupsArgs = {
  distinct_on?: InputMaybe<Array<Pokedexversiongroup_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokedexversiongroup_Order_By>>;
  where?: InputMaybe<Pokedexversiongroup_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokedex" */
export type PokedexPokedexversiongroups_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokedexversiongroup_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokedexversiongroup_Order_By>>;
  where?: InputMaybe<Pokedexversiongroup_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokedex" */
export type PokedexPokemondexnumbersArgs = {
  distinct_on?: InputMaybe<Array<Pokemondexnumber_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemondexnumber_Order_By>>;
  where?: InputMaybe<Pokemondexnumber_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokedex" */
export type PokedexPokemondexnumbers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemondexnumber_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemondexnumber_Order_By>>;
  where?: InputMaybe<Pokemondexnumber_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_pokedex" */
export type Pokedex_Aggregate = {
  __typename?: 'pokedex_aggregate';
  aggregate?: Maybe<Pokedex_Aggregate_Fields>;
  nodes: Array<Pokedex>;
};

export type Pokedex_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Pokedex_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Pokedex_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Pokedex_Aggregate_Bool_Exp_Count>;
};

export type Pokedex_Aggregate_Bool_Exp_Bool_And = {
  arguments: Pokedex_Select_Column_Pokedex_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Pokedex_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Pokedex_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Pokedex_Select_Column_Pokedex_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Pokedex_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Pokedex_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Pokedex_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Pokedex_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_pokedex" */
export type Pokedex_Aggregate_Fields = {
  __typename?: 'pokedex_aggregate_fields';
  avg?: Maybe<Pokedex_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokedex_Max_Fields>;
  min?: Maybe<Pokedex_Min_Fields>;
  stddev?: Maybe<Pokedex_Stddev_Fields>;
  stddev_pop?: Maybe<Pokedex_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokedex_Stddev_Samp_Fields>;
  sum?: Maybe<Pokedex_Sum_Fields>;
  var_pop?: Maybe<Pokedex_Var_Pop_Fields>;
  var_samp?: Maybe<Pokedex_Var_Samp_Fields>;
  variance?: Maybe<Pokedex_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokedex" */
export type Pokedex_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokedex_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_pokedex" */
export type Pokedex_Aggregate_Order_By = {
  avg?: InputMaybe<Pokedex_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Pokedex_Max_Order_By>;
  min?: InputMaybe<Pokedex_Min_Order_By>;
  stddev?: InputMaybe<Pokedex_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Pokedex_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Pokedex_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Pokedex_Sum_Order_By>;
  var_pop?: InputMaybe<Pokedex_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Pokedex_Var_Samp_Order_By>;
  variance?: InputMaybe<Pokedex_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Pokedex_Avg_Fields = {
  __typename?: 'pokedex_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_pokedex" */
export type Pokedex_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokedex". All fields are combined with a logical 'AND'. */
export type Pokedex_Bool_Exp = {
  _and?: InputMaybe<Array<Pokedex_Bool_Exp>>;
  _not?: InputMaybe<Pokedex_Bool_Exp>;
  _or?: InputMaybe<Array<Pokedex_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  is_main_series?: InputMaybe<Boolean_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  pokedexdescriptions?: InputMaybe<Pokedexdescription_Bool_Exp>;
  pokedexdescriptions_aggregate?: InputMaybe<Pokedexdescription_Aggregate_Bool_Exp>;
  pokedexnames?: InputMaybe<Pokedexname_Bool_Exp>;
  pokedexnames_aggregate?: InputMaybe<Pokedexname_Aggregate_Bool_Exp>;
  pokedexversiongroups?: InputMaybe<Pokedexversiongroup_Bool_Exp>;
  pokedexversiongroups_aggregate?: InputMaybe<Pokedexversiongroup_Aggregate_Bool_Exp>;
  pokemondexnumbers?: InputMaybe<Pokemondexnumber_Bool_Exp>;
  pokemondexnumbers_aggregate?: InputMaybe<Pokemondexnumber_Aggregate_Bool_Exp>;
  region?: InputMaybe<Region_Bool_Exp>;
  region_id?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Pokedex_Max_Fields = {
  __typename?: 'pokedex_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  region_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_pokedex" */
export type Pokedex_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Pokedex_Min_Fields = {
  __typename?: 'pokedex_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  region_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_pokedex" */
export type Pokedex_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_pokedex". */
export type Pokedex_Order_By = {
  id?: InputMaybe<Order_By>;
  is_main_series?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  pokedexdescriptions_aggregate?: InputMaybe<Pokedexdescription_Aggregate_Order_By>;
  pokedexnames_aggregate?: InputMaybe<Pokedexname_Aggregate_Order_By>;
  pokedexversiongroups_aggregate?: InputMaybe<Pokedexversiongroup_Aggregate_Order_By>;
  pokemondexnumbers_aggregate?: InputMaybe<Pokemondexnumber_Aggregate_Order_By>;
  region?: InputMaybe<Region_Order_By>;
  region_id?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_pokedex" */
export enum Pokedex_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  IsMainSeries = 'is_main_series',
  /** column name */
  Name = 'name',
  /** column name */
  RegionId = 'region_id'
}

/** select "pokedex_aggregate_bool_exp_bool_and_arguments_columns" columns of table "pokemon_v2_pokedex" */
export enum Pokedex_Select_Column_Pokedex_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  IsMainSeries = 'is_main_series'
}

/** select "pokedex_aggregate_bool_exp_bool_or_arguments_columns" columns of table "pokemon_v2_pokedex" */
export enum Pokedex_Select_Column_Pokedex_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  IsMainSeries = 'is_main_series'
}

/** aggregate stddev on columns */
export type Pokedex_Stddev_Fields = {
  __typename?: 'pokedex_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_pokedex" */
export type Pokedex_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Pokedex_Stddev_Pop_Fields = {
  __typename?: 'pokedex_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_pokedex" */
export type Pokedex_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Pokedex_Stddev_Samp_Fields = {
  __typename?: 'pokedex_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_pokedex" */
export type Pokedex_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Pokedex_Sum_Fields = {
  __typename?: 'pokedex_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  region_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_pokedex" */
export type Pokedex_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Pokedex_Var_Pop_Fields = {
  __typename?: 'pokedex_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_pokedex" */
export type Pokedex_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Pokedex_Var_Samp_Fields = {
  __typename?: 'pokedex_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_pokedex" */
export type Pokedex_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Pokedex_Variance_Fields = {
  __typename?: 'pokedex_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_pokedex" */
export type Pokedex_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_pokedexdescription" */
export type Pokedexdescription = {
  __typename?: 'pokedexdescription';
  description: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  pokedex?: Maybe<Pokedex>;
  pokedex_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_pokedexdescription" */
export type Pokedexdescription_Aggregate = {
  __typename?: 'pokedexdescription_aggregate';
  aggregate?: Maybe<Pokedexdescription_Aggregate_Fields>;
  nodes: Array<Pokedexdescription>;
};

export type Pokedexdescription_Aggregate_Bool_Exp = {
  count?: InputMaybe<Pokedexdescription_Aggregate_Bool_Exp_Count>;
};

export type Pokedexdescription_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Pokedexdescription_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Pokedexdescription_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_pokedexdescription" */
export type Pokedexdescription_Aggregate_Fields = {
  __typename?: 'pokedexdescription_aggregate_fields';
  avg?: Maybe<Pokedexdescription_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokedexdescription_Max_Fields>;
  min?: Maybe<Pokedexdescription_Min_Fields>;
  stddev?: Maybe<Pokedexdescription_Stddev_Fields>;
  stddev_pop?: Maybe<Pokedexdescription_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokedexdescription_Stddev_Samp_Fields>;
  sum?: Maybe<Pokedexdescription_Sum_Fields>;
  var_pop?: Maybe<Pokedexdescription_Var_Pop_Fields>;
  var_samp?: Maybe<Pokedexdescription_Var_Samp_Fields>;
  variance?: Maybe<Pokedexdescription_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokedexdescription" */
export type Pokedexdescription_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokedexdescription_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_pokedexdescription" */
export type Pokedexdescription_Aggregate_Order_By = {
  avg?: InputMaybe<Pokedexdescription_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Pokedexdescription_Max_Order_By>;
  min?: InputMaybe<Pokedexdescription_Min_Order_By>;
  stddev?: InputMaybe<Pokedexdescription_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Pokedexdescription_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Pokedexdescription_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Pokedexdescription_Sum_Order_By>;
  var_pop?: InputMaybe<Pokedexdescription_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Pokedexdescription_Var_Samp_Order_By>;
  variance?: InputMaybe<Pokedexdescription_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Pokedexdescription_Avg_Fields = {
  __typename?: 'pokedexdescription_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_pokedexdescription" */
export type Pokedexdescription_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokedex_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokedexdescription". All fields are combined with a logical 'AND'. */
export type Pokedexdescription_Bool_Exp = {
  _and?: InputMaybe<Array<Pokedexdescription_Bool_Exp>>;
  _not?: InputMaybe<Pokedexdescription_Bool_Exp>;
  _or?: InputMaybe<Array<Pokedexdescription_Bool_Exp>>;
  description?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  pokedex?: InputMaybe<Pokedex_Bool_Exp>;
  pokedex_id?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Pokedexdescription_Max_Fields = {
  __typename?: 'pokedexdescription_max_fields';
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  pokedex_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_pokedexdescription" */
export type Pokedexdescription_Max_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokedex_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Pokedexdescription_Min_Fields = {
  __typename?: 'pokedexdescription_min_fields';
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  pokedex_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_pokedexdescription" */
export type Pokedexdescription_Min_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokedex_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_pokedexdescription". */
export type Pokedexdescription_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokedex?: InputMaybe<Pokedex_Order_By>;
  pokedex_id?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_pokedexdescription" */
export enum Pokedexdescription_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  PokedexId = 'pokedex_id'
}

/** aggregate stddev on columns */
export type Pokedexdescription_Stddev_Fields = {
  __typename?: 'pokedexdescription_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_pokedexdescription" */
export type Pokedexdescription_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokedex_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Pokedexdescription_Stddev_Pop_Fields = {
  __typename?: 'pokedexdescription_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_pokedexdescription" */
export type Pokedexdescription_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokedex_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Pokedexdescription_Stddev_Samp_Fields = {
  __typename?: 'pokedexdescription_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_pokedexdescription" */
export type Pokedexdescription_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokedex_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Pokedexdescription_Sum_Fields = {
  __typename?: 'pokedexdescription_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  pokedex_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_pokedexdescription" */
export type Pokedexdescription_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokedex_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Pokedexdescription_Var_Pop_Fields = {
  __typename?: 'pokedexdescription_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_pokedexdescription" */
export type Pokedexdescription_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokedex_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Pokedexdescription_Var_Samp_Fields = {
  __typename?: 'pokedexdescription_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_pokedexdescription" */
export type Pokedexdescription_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokedex_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Pokedexdescription_Variance_Fields = {
  __typename?: 'pokedexdescription_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_pokedexdescription" */
export type Pokedexdescription_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokedex_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_pokedexname" */
export type Pokedexname = {
  __typename?: 'pokedexname';
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
  /** An object relationship */
  pokedex?: Maybe<Pokedex>;
  pokedex_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_pokedexname" */
export type Pokedexname_Aggregate = {
  __typename?: 'pokedexname_aggregate';
  aggregate?: Maybe<Pokedexname_Aggregate_Fields>;
  nodes: Array<Pokedexname>;
};

export type Pokedexname_Aggregate_Bool_Exp = {
  count?: InputMaybe<Pokedexname_Aggregate_Bool_Exp_Count>;
};

export type Pokedexname_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Pokedexname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Pokedexname_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_pokedexname" */
export type Pokedexname_Aggregate_Fields = {
  __typename?: 'pokedexname_aggregate_fields';
  avg?: Maybe<Pokedexname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokedexname_Max_Fields>;
  min?: Maybe<Pokedexname_Min_Fields>;
  stddev?: Maybe<Pokedexname_Stddev_Fields>;
  stddev_pop?: Maybe<Pokedexname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokedexname_Stddev_Samp_Fields>;
  sum?: Maybe<Pokedexname_Sum_Fields>;
  var_pop?: Maybe<Pokedexname_Var_Pop_Fields>;
  var_samp?: Maybe<Pokedexname_Var_Samp_Fields>;
  variance?: Maybe<Pokedexname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokedexname" */
export type Pokedexname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokedexname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_pokedexname" */
export type Pokedexname_Aggregate_Order_By = {
  avg?: InputMaybe<Pokedexname_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Pokedexname_Max_Order_By>;
  min?: InputMaybe<Pokedexname_Min_Order_By>;
  stddev?: InputMaybe<Pokedexname_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Pokedexname_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Pokedexname_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Pokedexname_Sum_Order_By>;
  var_pop?: InputMaybe<Pokedexname_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Pokedexname_Var_Samp_Order_By>;
  variance?: InputMaybe<Pokedexname_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Pokedexname_Avg_Fields = {
  __typename?: 'pokedexname_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_pokedexname" */
export type Pokedexname_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokedex_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokedexname". All fields are combined with a logical 'AND'. */
export type Pokedexname_Bool_Exp = {
  _and?: InputMaybe<Array<Pokedexname_Bool_Exp>>;
  _not?: InputMaybe<Pokedexname_Bool_Exp>;
  _or?: InputMaybe<Array<Pokedexname_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  pokedex?: InputMaybe<Pokedex_Bool_Exp>;
  pokedex_id?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Pokedexname_Max_Fields = {
  __typename?: 'pokedexname_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  pokedex_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_pokedexname" */
export type Pokedexname_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  pokedex_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Pokedexname_Min_Fields = {
  __typename?: 'pokedexname_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  pokedex_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_pokedexname" */
export type Pokedexname_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  pokedex_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_pokedexname". */
export type Pokedexname_Order_By = {
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  pokedex?: InputMaybe<Pokedex_Order_By>;
  pokedex_id?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_pokedexname" */
export enum Pokedexname_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name',
  /** column name */
  PokedexId = 'pokedex_id'
}

/** aggregate stddev on columns */
export type Pokedexname_Stddev_Fields = {
  __typename?: 'pokedexname_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_pokedexname" */
export type Pokedexname_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokedex_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Pokedexname_Stddev_Pop_Fields = {
  __typename?: 'pokedexname_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_pokedexname" */
export type Pokedexname_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokedex_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Pokedexname_Stddev_Samp_Fields = {
  __typename?: 'pokedexname_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_pokedexname" */
export type Pokedexname_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokedex_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Pokedexname_Sum_Fields = {
  __typename?: 'pokedexname_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  pokedex_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_pokedexname" */
export type Pokedexname_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokedex_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Pokedexname_Var_Pop_Fields = {
  __typename?: 'pokedexname_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_pokedexname" */
export type Pokedexname_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokedex_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Pokedexname_Var_Samp_Fields = {
  __typename?: 'pokedexname_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_pokedexname" */
export type Pokedexname_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokedex_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Pokedexname_Variance_Fields = {
  __typename?: 'pokedexname_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_pokedexname" */
export type Pokedexname_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokedex_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_pokedexversiongroup" */
export type Pokedexversiongroup = {
  __typename?: 'pokedexversiongroup';
  id: Scalars['Int']['output'];
  /** An object relationship */
  pokedex?: Maybe<Pokedex>;
  pokedex_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  versiongroup?: Maybe<Versiongroup>;
};

/** aggregated selection of "pokemon_v2_pokedexversiongroup" */
export type Pokedexversiongroup_Aggregate = {
  __typename?: 'pokedexversiongroup_aggregate';
  aggregate?: Maybe<Pokedexversiongroup_Aggregate_Fields>;
  nodes: Array<Pokedexversiongroup>;
};

export type Pokedexversiongroup_Aggregate_Bool_Exp = {
  count?: InputMaybe<Pokedexversiongroup_Aggregate_Bool_Exp_Count>;
};

export type Pokedexversiongroup_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Pokedexversiongroup_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Pokedexversiongroup_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_pokedexversiongroup" */
export type Pokedexversiongroup_Aggregate_Fields = {
  __typename?: 'pokedexversiongroup_aggregate_fields';
  avg?: Maybe<Pokedexversiongroup_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokedexversiongroup_Max_Fields>;
  min?: Maybe<Pokedexversiongroup_Min_Fields>;
  stddev?: Maybe<Pokedexversiongroup_Stddev_Fields>;
  stddev_pop?: Maybe<Pokedexversiongroup_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokedexversiongroup_Stddev_Samp_Fields>;
  sum?: Maybe<Pokedexversiongroup_Sum_Fields>;
  var_pop?: Maybe<Pokedexversiongroup_Var_Pop_Fields>;
  var_samp?: Maybe<Pokedexversiongroup_Var_Samp_Fields>;
  variance?: Maybe<Pokedexversiongroup_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokedexversiongroup" */
export type Pokedexversiongroup_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokedexversiongroup_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_pokedexversiongroup" */
export type Pokedexversiongroup_Aggregate_Order_By = {
  avg?: InputMaybe<Pokedexversiongroup_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Pokedexversiongroup_Max_Order_By>;
  min?: InputMaybe<Pokedexversiongroup_Min_Order_By>;
  stddev?: InputMaybe<Pokedexversiongroup_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Pokedexversiongroup_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Pokedexversiongroup_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Pokedexversiongroup_Sum_Order_By>;
  var_pop?: InputMaybe<Pokedexversiongroup_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Pokedexversiongroup_Var_Samp_Order_By>;
  variance?: InputMaybe<Pokedexversiongroup_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Pokedexversiongroup_Avg_Fields = {
  __typename?: 'pokedexversiongroup_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_pokedexversiongroup" */
export type Pokedexversiongroup_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  pokedex_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokedexversiongroup". All fields are combined with a logical 'AND'. */
export type Pokedexversiongroup_Bool_Exp = {
  _and?: InputMaybe<Array<Pokedexversiongroup_Bool_Exp>>;
  _not?: InputMaybe<Pokedexversiongroup_Bool_Exp>;
  _or?: InputMaybe<Array<Pokedexversiongroup_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  pokedex?: InputMaybe<Pokedex_Bool_Exp>;
  pokedex_id?: InputMaybe<Int_Comparison_Exp>;
  version_group_id?: InputMaybe<Int_Comparison_Exp>;
  versiongroup?: InputMaybe<Versiongroup_Bool_Exp>;
};

/** aggregate max on columns */
export type Pokedexversiongroup_Max_Fields = {
  __typename?: 'pokedexversiongroup_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  pokedex_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_pokedexversiongroup" */
export type Pokedexversiongroup_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  pokedex_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Pokedexversiongroup_Min_Fields = {
  __typename?: 'pokedexversiongroup_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  pokedex_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_pokedexversiongroup" */
export type Pokedexversiongroup_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  pokedex_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_pokedexversiongroup". */
export type Pokedexversiongroup_Order_By = {
  id?: InputMaybe<Order_By>;
  pokedex?: InputMaybe<Pokedex_Order_By>;
  pokedex_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
  versiongroup?: InputMaybe<Versiongroup_Order_By>;
};

/** select columns of table "pokemon_v2_pokedexversiongroup" */
export enum Pokedexversiongroup_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  PokedexId = 'pokedex_id',
  /** column name */
  VersionGroupId = 'version_group_id'
}

/** aggregate stddev on columns */
export type Pokedexversiongroup_Stddev_Fields = {
  __typename?: 'pokedexversiongroup_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_pokedexversiongroup" */
export type Pokedexversiongroup_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  pokedex_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Pokedexversiongroup_Stddev_Pop_Fields = {
  __typename?: 'pokedexversiongroup_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_pokedexversiongroup" */
export type Pokedexversiongroup_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  pokedex_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Pokedexversiongroup_Stddev_Samp_Fields = {
  __typename?: 'pokedexversiongroup_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_pokedexversiongroup" */
export type Pokedexversiongroup_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  pokedex_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Pokedexversiongroup_Sum_Fields = {
  __typename?: 'pokedexversiongroup_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  pokedex_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_pokedexversiongroup" */
export type Pokedexversiongroup_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  pokedex_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Pokedexversiongroup_Var_Pop_Fields = {
  __typename?: 'pokedexversiongroup_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_pokedexversiongroup" */
export type Pokedexversiongroup_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  pokedex_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Pokedexversiongroup_Var_Samp_Fields = {
  __typename?: 'pokedexversiongroup_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_pokedexversiongroup" */
export type Pokedexversiongroup_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  pokedex_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Pokedexversiongroup_Variance_Fields = {
  __typename?: 'pokedexversiongroup_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_pokedexversiongroup" */
export type Pokedexversiongroup_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  pokedex_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_pokemon" */
export type Pokemon = {
  __typename?: 'pokemon';
  base_experience?: Maybe<Scalars['Int']['output']>;
  /** An array relationship */
  encounters: Array<Encounter>;
  /** An aggregate relationship */
  encounters_aggregate: Encounter_Aggregate;
  height?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  is_default: Scalars['Boolean']['output'];
  name: Scalars['String']['output'];
  order?: Maybe<Scalars['Int']['output']>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
  /** An array relationship */
  pokemonabilities: Array<Pokemonability>;
  /** An aggregate relationship */
  pokemonabilities_aggregate: Pokemonability_Aggregate;
  /** An array relationship */
  pokemonabilitypasts: Array<Pokemonabilitypast>;
  /** An aggregate relationship */
  pokemonabilitypasts_aggregate: Pokemonabilitypast_Aggregate;
  /** An array relationship */
  pokemoncries: Array<Pokemoncries>;
  /** An aggregate relationship */
  pokemoncries_aggregate: Pokemoncries_Aggregate;
  /** An array relationship */
  pokemonforms: Array<Pokemonform>;
  /** An aggregate relationship */
  pokemonforms_aggregate: Pokemonform_Aggregate;
  /** An array relationship */
  pokemongameindices: Array<Pokemongameindex>;
  /** An aggregate relationship */
  pokemongameindices_aggregate: Pokemongameindex_Aggregate;
  /** An array relationship */
  pokemonitems: Array<Pokemonitem>;
  /** An aggregate relationship */
  pokemonitems_aggregate: Pokemonitem_Aggregate;
  /** An array relationship */
  pokemonmoves: Array<Pokemonmove>;
  /** An aggregate relationship */
  pokemonmoves_aggregate: Pokemonmove_Aggregate;
  /** An object relationship */
  pokemonspecy?: Maybe<Pokemonspecies>;
  /** An array relationship */
  pokemonsprites: Array<Pokemonsprites>;
  /** An aggregate relationship */
  pokemonsprites_aggregate: Pokemonsprites_Aggregate;
  /** An array relationship */
  pokemonstats: Array<Pokemonstat>;
  /** An aggregate relationship */
  pokemonstats_aggregate: Pokemonstat_Aggregate;
  /** An array relationship */
  pokemontypepasts: Array<Pokemontypepast>;
  /** An aggregate relationship */
  pokemontypepasts_aggregate: Pokemontypepast_Aggregate;
  /** An array relationship */
  pokemontypes: Array<Pokemontype>;
  /** An aggregate relationship */
  pokemontypes_aggregate: Pokemontype_Aggregate;
  weight?: Maybe<Scalars['Int']['output']>;
};


/** columns and relationships of "pokemon_v2_pokemon" */
export type PokemonEncountersArgs = {
  distinct_on?: InputMaybe<Array<Encounter_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Encounter_Order_By>>;
  where?: InputMaybe<Encounter_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemon" */
export type PokemonEncounters_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Encounter_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Encounter_Order_By>>;
  where?: InputMaybe<Encounter_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemon" */
export type PokemonPokemonabilitiesArgs = {
  distinct_on?: InputMaybe<Array<Pokemonability_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonability_Order_By>>;
  where?: InputMaybe<Pokemonability_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemon" */
export type PokemonPokemonabilities_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonability_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonability_Order_By>>;
  where?: InputMaybe<Pokemonability_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemon" */
export type PokemonPokemonabilitypastsArgs = {
  distinct_on?: InputMaybe<Array<Pokemonabilitypast_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonabilitypast_Order_By>>;
  where?: InputMaybe<Pokemonabilitypast_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemon" */
export type PokemonPokemonabilitypasts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonabilitypast_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonabilitypast_Order_By>>;
  where?: InputMaybe<Pokemonabilitypast_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemon" */
export type PokemonPokemoncriesArgs = {
  distinct_on?: InputMaybe<Array<Pokemoncries_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemoncries_Order_By>>;
  where?: InputMaybe<Pokemoncries_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemon" */
export type PokemonPokemoncries_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemoncries_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemoncries_Order_By>>;
  where?: InputMaybe<Pokemoncries_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemon" */
export type PokemonPokemonformsArgs = {
  distinct_on?: InputMaybe<Array<Pokemonform_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonform_Order_By>>;
  where?: InputMaybe<Pokemonform_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemon" */
export type PokemonPokemonforms_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonform_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonform_Order_By>>;
  where?: InputMaybe<Pokemonform_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemon" */
export type PokemonPokemongameindicesArgs = {
  distinct_on?: InputMaybe<Array<Pokemongameindex_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemongameindex_Order_By>>;
  where?: InputMaybe<Pokemongameindex_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemon" */
export type PokemonPokemongameindices_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemongameindex_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemongameindex_Order_By>>;
  where?: InputMaybe<Pokemongameindex_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemon" */
export type PokemonPokemonitemsArgs = {
  distinct_on?: InputMaybe<Array<Pokemonitem_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonitem_Order_By>>;
  where?: InputMaybe<Pokemonitem_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemon" */
export type PokemonPokemonitems_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonitem_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonitem_Order_By>>;
  where?: InputMaybe<Pokemonitem_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemon" */
export type PokemonPokemonmovesArgs = {
  distinct_on?: InputMaybe<Array<Pokemonmove_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonmove_Order_By>>;
  where?: InputMaybe<Pokemonmove_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemon" */
export type PokemonPokemonmoves_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonmove_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonmove_Order_By>>;
  where?: InputMaybe<Pokemonmove_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemon" */
export type PokemonPokemonspritesArgs = {
  distinct_on?: InputMaybe<Array<Pokemonsprites_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonsprites_Order_By>>;
  where?: InputMaybe<Pokemonsprites_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemon" */
export type PokemonPokemonsprites_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonsprites_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonsprites_Order_By>>;
  where?: InputMaybe<Pokemonsprites_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemon" */
export type PokemonPokemonstatsArgs = {
  distinct_on?: InputMaybe<Array<Pokemonstat_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonstat_Order_By>>;
  where?: InputMaybe<Pokemonstat_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemon" */
export type PokemonPokemonstats_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonstat_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonstat_Order_By>>;
  where?: InputMaybe<Pokemonstat_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemon" */
export type PokemonPokemontypepastsArgs = {
  distinct_on?: InputMaybe<Array<Pokemontypepast_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemontypepast_Order_By>>;
  where?: InputMaybe<Pokemontypepast_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemon" */
export type PokemonPokemontypepasts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemontypepast_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemontypepast_Order_By>>;
  where?: InputMaybe<Pokemontypepast_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemon" */
export type PokemonPokemontypesArgs = {
  distinct_on?: InputMaybe<Array<Pokemontype_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemontype_Order_By>>;
  where?: InputMaybe<Pokemontype_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemon" */
export type PokemonPokemontypes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemontype_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemontype_Order_By>>;
  where?: InputMaybe<Pokemontype_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_pokemon" */
export type Pokemon_Aggregate = {
  __typename?: 'pokemon_aggregate';
  aggregate?: Maybe<Pokemon_Aggregate_Fields>;
  nodes: Array<Pokemon>;
};

export type Pokemon_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Pokemon_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Pokemon_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Pokemon_Aggregate_Bool_Exp_Count>;
};

export type Pokemon_Aggregate_Bool_Exp_Bool_And = {
  arguments: Pokemon_Select_Column_Pokemon_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Pokemon_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Pokemon_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Pokemon_Select_Column_Pokemon_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Pokemon_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Pokemon_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Pokemon_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Pokemon_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_pokemon" */
export type Pokemon_Aggregate_Fields = {
  __typename?: 'pokemon_aggregate_fields';
  avg?: Maybe<Pokemon_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemon_Max_Fields>;
  min?: Maybe<Pokemon_Min_Fields>;
  stddev?: Maybe<Pokemon_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemon_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemon_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemon_Sum_Fields>;
  var_pop?: Maybe<Pokemon_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemon_Var_Samp_Fields>;
  variance?: Maybe<Pokemon_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemon" */
export type Pokemon_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemon_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_pokemon" */
export type Pokemon_Aggregate_Order_By = {
  avg?: InputMaybe<Pokemon_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Pokemon_Max_Order_By>;
  min?: InputMaybe<Pokemon_Min_Order_By>;
  stddev?: InputMaybe<Pokemon_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Pokemon_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Pokemon_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Pokemon_Sum_Order_By>;
  var_pop?: InputMaybe<Pokemon_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Pokemon_Var_Samp_Order_By>;
  variance?: InputMaybe<Pokemon_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Pokemon_Avg_Fields = {
  __typename?: 'pokemon_avg_fields';
  base_experience?: Maybe<Scalars['Float']['output']>;
  height?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
  weight?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_pokemon" */
export type Pokemon_Avg_Order_By = {
  base_experience?: InputMaybe<Order_By>;
  height?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
  weight?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemon". All fields are combined with a logical 'AND'. */
export type Pokemon_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemon_Bool_Exp>>;
  _not?: InputMaybe<Pokemon_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemon_Bool_Exp>>;
  base_experience?: InputMaybe<Int_Comparison_Exp>;
  encounters?: InputMaybe<Encounter_Bool_Exp>;
  encounters_aggregate?: InputMaybe<Encounter_Aggregate_Bool_Exp>;
  height?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  is_default?: InputMaybe<Boolean_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  order?: InputMaybe<Int_Comparison_Exp>;
  pokemon_species_id?: InputMaybe<Int_Comparison_Exp>;
  pokemonabilities?: InputMaybe<Pokemonability_Bool_Exp>;
  pokemonabilities_aggregate?: InputMaybe<Pokemonability_Aggregate_Bool_Exp>;
  pokemonabilitypasts?: InputMaybe<Pokemonabilitypast_Bool_Exp>;
  pokemonabilitypasts_aggregate?: InputMaybe<Pokemonabilitypast_Aggregate_Bool_Exp>;
  pokemoncries?: InputMaybe<Pokemoncries_Bool_Exp>;
  pokemoncries_aggregate?: InputMaybe<Pokemoncries_Aggregate_Bool_Exp>;
  pokemonforms?: InputMaybe<Pokemonform_Bool_Exp>;
  pokemonforms_aggregate?: InputMaybe<Pokemonform_Aggregate_Bool_Exp>;
  pokemongameindices?: InputMaybe<Pokemongameindex_Bool_Exp>;
  pokemongameindices_aggregate?: InputMaybe<Pokemongameindex_Aggregate_Bool_Exp>;
  pokemonitems?: InputMaybe<Pokemonitem_Bool_Exp>;
  pokemonitems_aggregate?: InputMaybe<Pokemonitem_Aggregate_Bool_Exp>;
  pokemonmoves?: InputMaybe<Pokemonmove_Bool_Exp>;
  pokemonmoves_aggregate?: InputMaybe<Pokemonmove_Aggregate_Bool_Exp>;
  pokemonspecy?: InputMaybe<Pokemonspecies_Bool_Exp>;
  pokemonsprites?: InputMaybe<Pokemonsprites_Bool_Exp>;
  pokemonsprites_aggregate?: InputMaybe<Pokemonsprites_Aggregate_Bool_Exp>;
  pokemonstats?: InputMaybe<Pokemonstat_Bool_Exp>;
  pokemonstats_aggregate?: InputMaybe<Pokemonstat_Aggregate_Bool_Exp>;
  pokemontypepasts?: InputMaybe<Pokemontypepast_Bool_Exp>;
  pokemontypepasts_aggregate?: InputMaybe<Pokemontypepast_Aggregate_Bool_Exp>;
  pokemontypes?: InputMaybe<Pokemontype_Bool_Exp>;
  pokemontypes_aggregate?: InputMaybe<Pokemontype_Aggregate_Bool_Exp>;
  weight?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Pokemon_Max_Fields = {
  __typename?: 'pokemon_max_fields';
  base_experience?: Maybe<Scalars['Int']['output']>;
  height?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
  weight?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_pokemon" */
export type Pokemon_Max_Order_By = {
  base_experience?: InputMaybe<Order_By>;
  height?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
  weight?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Pokemon_Min_Fields = {
  __typename?: 'pokemon_min_fields';
  base_experience?: Maybe<Scalars['Int']['output']>;
  height?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
  weight?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_pokemon" */
export type Pokemon_Min_Order_By = {
  base_experience?: InputMaybe<Order_By>;
  height?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
  weight?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemon". */
export type Pokemon_Order_By = {
  base_experience?: InputMaybe<Order_By>;
  encounters_aggregate?: InputMaybe<Encounter_Aggregate_Order_By>;
  height?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  is_default?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
  pokemonabilities_aggregate?: InputMaybe<Pokemonability_Aggregate_Order_By>;
  pokemonabilitypasts_aggregate?: InputMaybe<Pokemonabilitypast_Aggregate_Order_By>;
  pokemoncries_aggregate?: InputMaybe<Pokemoncries_Aggregate_Order_By>;
  pokemonforms_aggregate?: InputMaybe<Pokemonform_Aggregate_Order_By>;
  pokemongameindices_aggregate?: InputMaybe<Pokemongameindex_Aggregate_Order_By>;
  pokemonitems_aggregate?: InputMaybe<Pokemonitem_Aggregate_Order_By>;
  pokemonmoves_aggregate?: InputMaybe<Pokemonmove_Aggregate_Order_By>;
  pokemonspecy?: InputMaybe<Pokemonspecies_Order_By>;
  pokemonsprites_aggregate?: InputMaybe<Pokemonsprites_Aggregate_Order_By>;
  pokemonstats_aggregate?: InputMaybe<Pokemonstat_Aggregate_Order_By>;
  pokemontypepasts_aggregate?: InputMaybe<Pokemontypepast_Aggregate_Order_By>;
  pokemontypes_aggregate?: InputMaybe<Pokemontype_Aggregate_Order_By>;
  weight?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_pokemon" */
export enum Pokemon_Select_Column {
  /** column name */
  BaseExperience = 'base_experience',
  /** column name */
  Height = 'height',
  /** column name */
  Id = 'id',
  /** column name */
  IsDefault = 'is_default',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  PokemonSpeciesId = 'pokemon_species_id',
  /** column name */
  Weight = 'weight'
}

/** select "pokemon_aggregate_bool_exp_bool_and_arguments_columns" columns of table "pokemon_v2_pokemon" */
export enum Pokemon_Select_Column_Pokemon_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  IsDefault = 'is_default'
}

/** select "pokemon_aggregate_bool_exp_bool_or_arguments_columns" columns of table "pokemon_v2_pokemon" */
export enum Pokemon_Select_Column_Pokemon_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  IsDefault = 'is_default'
}

/** aggregate stddev on columns */
export type Pokemon_Stddev_Fields = {
  __typename?: 'pokemon_stddev_fields';
  base_experience?: Maybe<Scalars['Float']['output']>;
  height?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
  weight?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_pokemon" */
export type Pokemon_Stddev_Order_By = {
  base_experience?: InputMaybe<Order_By>;
  height?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
  weight?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Pokemon_Stddev_Pop_Fields = {
  __typename?: 'pokemon_stddev_pop_fields';
  base_experience?: Maybe<Scalars['Float']['output']>;
  height?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
  weight?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_pokemon" */
export type Pokemon_Stddev_Pop_Order_By = {
  base_experience?: InputMaybe<Order_By>;
  height?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
  weight?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Pokemon_Stddev_Samp_Fields = {
  __typename?: 'pokemon_stddev_samp_fields';
  base_experience?: Maybe<Scalars['Float']['output']>;
  height?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
  weight?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_pokemon" */
export type Pokemon_Stddev_Samp_Order_By = {
  base_experience?: InputMaybe<Order_By>;
  height?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
  weight?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Pokemon_Sum_Fields = {
  __typename?: 'pokemon_sum_fields';
  base_experience?: Maybe<Scalars['Int']['output']>;
  height?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
  weight?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_pokemon" */
export type Pokemon_Sum_Order_By = {
  base_experience?: InputMaybe<Order_By>;
  height?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
  weight?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Pokemon_Var_Pop_Fields = {
  __typename?: 'pokemon_var_pop_fields';
  base_experience?: Maybe<Scalars['Float']['output']>;
  height?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
  weight?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_pokemon" */
export type Pokemon_Var_Pop_Order_By = {
  base_experience?: InputMaybe<Order_By>;
  height?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
  weight?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Pokemon_Var_Samp_Fields = {
  __typename?: 'pokemon_var_samp_fields';
  base_experience?: Maybe<Scalars['Float']['output']>;
  height?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
  weight?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_pokemon" */
export type Pokemon_Var_Samp_Order_By = {
  base_experience?: InputMaybe<Order_By>;
  height?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
  weight?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Pokemon_Variance_Fields = {
  __typename?: 'pokemon_variance_fields';
  base_experience?: Maybe<Scalars['Float']['output']>;
  height?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
  weight?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_pokemon" */
export type Pokemon_Variance_Order_By = {
  base_experience?: InputMaybe<Order_By>;
  height?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
  weight?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_pokemonability" */
export type Pokemonability = {
  __typename?: 'pokemonability';
  /** An object relationship */
  ability?: Maybe<Ability>;
  ability_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  is_hidden: Scalars['Boolean']['output'];
  /** An object relationship */
  pokemon?: Maybe<Pokemon>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  slot: Scalars['Int']['output'];
};

/** aggregated selection of "pokemon_v2_pokemonability" */
export type Pokemonability_Aggregate = {
  __typename?: 'pokemonability_aggregate';
  aggregate?: Maybe<Pokemonability_Aggregate_Fields>;
  nodes: Array<Pokemonability>;
};

export type Pokemonability_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Pokemonability_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Pokemonability_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Pokemonability_Aggregate_Bool_Exp_Count>;
};

export type Pokemonability_Aggregate_Bool_Exp_Bool_And = {
  arguments: Pokemonability_Select_Column_Pokemonability_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Pokemonability_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Pokemonability_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Pokemonability_Select_Column_Pokemonability_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Pokemonability_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Pokemonability_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Pokemonability_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Pokemonability_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_pokemonability" */
export type Pokemonability_Aggregate_Fields = {
  __typename?: 'pokemonability_aggregate_fields';
  avg?: Maybe<Pokemonability_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemonability_Max_Fields>;
  min?: Maybe<Pokemonability_Min_Fields>;
  stddev?: Maybe<Pokemonability_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemonability_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemonability_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemonability_Sum_Fields>;
  var_pop?: Maybe<Pokemonability_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemonability_Var_Samp_Fields>;
  variance?: Maybe<Pokemonability_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemonability" */
export type Pokemonability_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemonability_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_pokemonability" */
export type Pokemonability_Aggregate_Order_By = {
  avg?: InputMaybe<Pokemonability_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Pokemonability_Max_Order_By>;
  min?: InputMaybe<Pokemonability_Min_Order_By>;
  stddev?: InputMaybe<Pokemonability_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Pokemonability_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Pokemonability_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Pokemonability_Sum_Order_By>;
  var_pop?: InputMaybe<Pokemonability_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Pokemonability_Var_Samp_Order_By>;
  variance?: InputMaybe<Pokemonability_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Pokemonability_Avg_Fields = {
  __typename?: 'pokemonability_avg_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_pokemonability" */
export type Pokemonability_Avg_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemonability". All fields are combined with a logical 'AND'. */
export type Pokemonability_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemonability_Bool_Exp>>;
  _not?: InputMaybe<Pokemonability_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemonability_Bool_Exp>>;
  ability?: InputMaybe<Ability_Bool_Exp>;
  ability_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  is_hidden?: InputMaybe<Boolean_Comparison_Exp>;
  pokemon?: InputMaybe<Pokemon_Bool_Exp>;
  pokemon_id?: InputMaybe<Int_Comparison_Exp>;
  slot?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Pokemonability_Max_Fields = {
  __typename?: 'pokemonability_max_fields';
  ability_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  slot?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_pokemonability" */
export type Pokemonability_Max_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Pokemonability_Min_Fields = {
  __typename?: 'pokemonability_min_fields';
  ability_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  slot?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_pokemonability" */
export type Pokemonability_Min_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemonability". */
export type Pokemonability_Order_By = {
  ability?: InputMaybe<Ability_Order_By>;
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  is_hidden?: InputMaybe<Order_By>;
  pokemon?: InputMaybe<Pokemon_Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_pokemonability" */
export enum Pokemonability_Select_Column {
  /** column name */
  AbilityId = 'ability_id',
  /** column name */
  Id = 'id',
  /** column name */
  IsHidden = 'is_hidden',
  /** column name */
  PokemonId = 'pokemon_id',
  /** column name */
  Slot = 'slot'
}

/** select "pokemonability_aggregate_bool_exp_bool_and_arguments_columns" columns of table "pokemon_v2_pokemonability" */
export enum Pokemonability_Select_Column_Pokemonability_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  IsHidden = 'is_hidden'
}

/** select "pokemonability_aggregate_bool_exp_bool_or_arguments_columns" columns of table "pokemon_v2_pokemonability" */
export enum Pokemonability_Select_Column_Pokemonability_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  IsHidden = 'is_hidden'
}

/** aggregate stddev on columns */
export type Pokemonability_Stddev_Fields = {
  __typename?: 'pokemonability_stddev_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_pokemonability" */
export type Pokemonability_Stddev_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Pokemonability_Stddev_Pop_Fields = {
  __typename?: 'pokemonability_stddev_pop_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_pokemonability" */
export type Pokemonability_Stddev_Pop_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Pokemonability_Stddev_Samp_Fields = {
  __typename?: 'pokemonability_stddev_samp_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_pokemonability" */
export type Pokemonability_Stddev_Samp_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Pokemonability_Sum_Fields = {
  __typename?: 'pokemonability_sum_fields';
  ability_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  slot?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_pokemonability" */
export type Pokemonability_Sum_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Pokemonability_Var_Pop_Fields = {
  __typename?: 'pokemonability_var_pop_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_pokemonability" */
export type Pokemonability_Var_Pop_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Pokemonability_Var_Samp_Fields = {
  __typename?: 'pokemonability_var_samp_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_pokemonability" */
export type Pokemonability_Var_Samp_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Pokemonability_Variance_Fields = {
  __typename?: 'pokemonability_variance_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_pokemonability" */
export type Pokemonability_Variance_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_pokemonabilitypast" */
export type Pokemonabilitypast = {
  __typename?: 'pokemonabilitypast';
  /** An object relationship */
  ability?: Maybe<Ability>;
  ability_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  generation?: Maybe<Generation>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  is_hidden: Scalars['Boolean']['output'];
  /** An object relationship */
  pokemon?: Maybe<Pokemon>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  slot: Scalars['Int']['output'];
};

/** aggregated selection of "pokemon_v2_pokemonabilitypast" */
export type Pokemonabilitypast_Aggregate = {
  __typename?: 'pokemonabilitypast_aggregate';
  aggregate?: Maybe<Pokemonabilitypast_Aggregate_Fields>;
  nodes: Array<Pokemonabilitypast>;
};

export type Pokemonabilitypast_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Pokemonabilitypast_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Pokemonabilitypast_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Pokemonabilitypast_Aggregate_Bool_Exp_Count>;
};

export type Pokemonabilitypast_Aggregate_Bool_Exp_Bool_And = {
  arguments: Pokemonabilitypast_Select_Column_Pokemonabilitypast_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Pokemonabilitypast_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Pokemonabilitypast_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Pokemonabilitypast_Select_Column_Pokemonabilitypast_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Pokemonabilitypast_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Pokemonabilitypast_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Pokemonabilitypast_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Pokemonabilitypast_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_pokemonabilitypast" */
export type Pokemonabilitypast_Aggregate_Fields = {
  __typename?: 'pokemonabilitypast_aggregate_fields';
  avg?: Maybe<Pokemonabilitypast_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemonabilitypast_Max_Fields>;
  min?: Maybe<Pokemonabilitypast_Min_Fields>;
  stddev?: Maybe<Pokemonabilitypast_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemonabilitypast_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemonabilitypast_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemonabilitypast_Sum_Fields>;
  var_pop?: Maybe<Pokemonabilitypast_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemonabilitypast_Var_Samp_Fields>;
  variance?: Maybe<Pokemonabilitypast_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemonabilitypast" */
export type Pokemonabilitypast_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemonabilitypast_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_pokemonabilitypast" */
export type Pokemonabilitypast_Aggregate_Order_By = {
  avg?: InputMaybe<Pokemonabilitypast_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Pokemonabilitypast_Max_Order_By>;
  min?: InputMaybe<Pokemonabilitypast_Min_Order_By>;
  stddev?: InputMaybe<Pokemonabilitypast_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Pokemonabilitypast_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Pokemonabilitypast_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Pokemonabilitypast_Sum_Order_By>;
  var_pop?: InputMaybe<Pokemonabilitypast_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Pokemonabilitypast_Var_Samp_Order_By>;
  variance?: InputMaybe<Pokemonabilitypast_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Pokemonabilitypast_Avg_Fields = {
  __typename?: 'pokemonabilitypast_avg_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_pokemonabilitypast" */
export type Pokemonabilitypast_Avg_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemonabilitypast". All fields are combined with a logical 'AND'. */
export type Pokemonabilitypast_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemonabilitypast_Bool_Exp>>;
  _not?: InputMaybe<Pokemonabilitypast_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemonabilitypast_Bool_Exp>>;
  ability?: InputMaybe<Ability_Bool_Exp>;
  ability_id?: InputMaybe<Int_Comparison_Exp>;
  generation?: InputMaybe<Generation_Bool_Exp>;
  generation_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  is_hidden?: InputMaybe<Boolean_Comparison_Exp>;
  pokemon?: InputMaybe<Pokemon_Bool_Exp>;
  pokemon_id?: InputMaybe<Int_Comparison_Exp>;
  slot?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Pokemonabilitypast_Max_Fields = {
  __typename?: 'pokemonabilitypast_max_fields';
  ability_id?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  slot?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_pokemonabilitypast" */
export type Pokemonabilitypast_Max_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Pokemonabilitypast_Min_Fields = {
  __typename?: 'pokemonabilitypast_min_fields';
  ability_id?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  slot?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_pokemonabilitypast" */
export type Pokemonabilitypast_Min_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemonabilitypast". */
export type Pokemonabilitypast_Order_By = {
  ability?: InputMaybe<Ability_Order_By>;
  ability_id?: InputMaybe<Order_By>;
  generation?: InputMaybe<Generation_Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  is_hidden?: InputMaybe<Order_By>;
  pokemon?: InputMaybe<Pokemon_Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_pokemonabilitypast" */
export enum Pokemonabilitypast_Select_Column {
  /** column name */
  AbilityId = 'ability_id',
  /** column name */
  GenerationId = 'generation_id',
  /** column name */
  Id = 'id',
  /** column name */
  IsHidden = 'is_hidden',
  /** column name */
  PokemonId = 'pokemon_id',
  /** column name */
  Slot = 'slot'
}

/** select "pokemonabilitypast_aggregate_bool_exp_bool_and_arguments_columns" columns of table "pokemon_v2_pokemonabilitypast" */
export enum Pokemonabilitypast_Select_Column_Pokemonabilitypast_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  IsHidden = 'is_hidden'
}

/** select "pokemonabilitypast_aggregate_bool_exp_bool_or_arguments_columns" columns of table "pokemon_v2_pokemonabilitypast" */
export enum Pokemonabilitypast_Select_Column_Pokemonabilitypast_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  IsHidden = 'is_hidden'
}

/** aggregate stddev on columns */
export type Pokemonabilitypast_Stddev_Fields = {
  __typename?: 'pokemonabilitypast_stddev_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_pokemonabilitypast" */
export type Pokemonabilitypast_Stddev_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Pokemonabilitypast_Stddev_Pop_Fields = {
  __typename?: 'pokemonabilitypast_stddev_pop_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_pokemonabilitypast" */
export type Pokemonabilitypast_Stddev_Pop_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Pokemonabilitypast_Stddev_Samp_Fields = {
  __typename?: 'pokemonabilitypast_stddev_samp_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_pokemonabilitypast" */
export type Pokemonabilitypast_Stddev_Samp_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Pokemonabilitypast_Sum_Fields = {
  __typename?: 'pokemonabilitypast_sum_fields';
  ability_id?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  slot?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_pokemonabilitypast" */
export type Pokemonabilitypast_Sum_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Pokemonabilitypast_Var_Pop_Fields = {
  __typename?: 'pokemonabilitypast_var_pop_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_pokemonabilitypast" */
export type Pokemonabilitypast_Var_Pop_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Pokemonabilitypast_Var_Samp_Fields = {
  __typename?: 'pokemonabilitypast_var_samp_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_pokemonabilitypast" */
export type Pokemonabilitypast_Var_Samp_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Pokemonabilitypast_Variance_Fields = {
  __typename?: 'pokemonabilitypast_variance_fields';
  ability_id?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_pokemonabilitypast" */
export type Pokemonabilitypast_Variance_Order_By = {
  ability_id?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_pokemoncolor" */
export type Pokemoncolor = {
  __typename?: 'pokemoncolor';
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  /** An array relationship */
  pokemoncolornames: Array<Pokemoncolorname>;
  /** An aggregate relationship */
  pokemoncolornames_aggregate: Pokemoncolorname_Aggregate;
  /** An array relationship */
  pokemonspecies: Array<Pokemonspecies>;
  /** An aggregate relationship */
  pokemonspecies_aggregate: Pokemonspecies_Aggregate;
};


/** columns and relationships of "pokemon_v2_pokemoncolor" */
export type PokemoncolorPokemoncolornamesArgs = {
  distinct_on?: InputMaybe<Array<Pokemoncolorname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemoncolorname_Order_By>>;
  where?: InputMaybe<Pokemoncolorname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemoncolor" */
export type PokemoncolorPokemoncolornames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemoncolorname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemoncolorname_Order_By>>;
  where?: InputMaybe<Pokemoncolorname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemoncolor" */
export type PokemoncolorPokemonspeciesArgs = {
  distinct_on?: InputMaybe<Array<Pokemonspecies_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonspecies_Order_By>>;
  where?: InputMaybe<Pokemonspecies_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemoncolor" */
export type PokemoncolorPokemonspecies_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonspecies_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonspecies_Order_By>>;
  where?: InputMaybe<Pokemonspecies_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_pokemoncolor" */
export type Pokemoncolor_Aggregate = {
  __typename?: 'pokemoncolor_aggregate';
  aggregate?: Maybe<Pokemoncolor_Aggregate_Fields>;
  nodes: Array<Pokemoncolor>;
};

/** aggregate fields of "pokemon_v2_pokemoncolor" */
export type Pokemoncolor_Aggregate_Fields = {
  __typename?: 'pokemoncolor_aggregate_fields';
  avg?: Maybe<Pokemoncolor_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemoncolor_Max_Fields>;
  min?: Maybe<Pokemoncolor_Min_Fields>;
  stddev?: Maybe<Pokemoncolor_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemoncolor_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemoncolor_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemoncolor_Sum_Fields>;
  var_pop?: Maybe<Pokemoncolor_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemoncolor_Var_Samp_Fields>;
  variance?: Maybe<Pokemoncolor_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemoncolor" */
export type Pokemoncolor_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemoncolor_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemoncolor_Avg_Fields = {
  __typename?: 'pokemoncolor_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemoncolor". All fields are combined with a logical 'AND'. */
export type Pokemoncolor_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemoncolor_Bool_Exp>>;
  _not?: InputMaybe<Pokemoncolor_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemoncolor_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  pokemoncolornames?: InputMaybe<Pokemoncolorname_Bool_Exp>;
  pokemoncolornames_aggregate?: InputMaybe<Pokemoncolorname_Aggregate_Bool_Exp>;
  pokemonspecies?: InputMaybe<Pokemonspecies_Bool_Exp>;
  pokemonspecies_aggregate?: InputMaybe<Pokemonspecies_Aggregate_Bool_Exp>;
};

/** aggregate max on columns */
export type Pokemoncolor_Max_Fields = {
  __typename?: 'pokemoncolor_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemoncolor_Min_Fields = {
  __typename?: 'pokemoncolor_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemoncolor". */
export type Pokemoncolor_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  pokemoncolornames_aggregate?: InputMaybe<Pokemoncolorname_Aggregate_Order_By>;
  pokemonspecies_aggregate?: InputMaybe<Pokemonspecies_Aggregate_Order_By>;
};

/** select columns of table "pokemon_v2_pokemoncolor" */
export enum Pokemoncolor_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Pokemoncolor_Stddev_Fields = {
  __typename?: 'pokemoncolor_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemoncolor_Stddev_Pop_Fields = {
  __typename?: 'pokemoncolor_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemoncolor_Stddev_Samp_Fields = {
  __typename?: 'pokemoncolor_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate sum on columns */
export type Pokemoncolor_Sum_Fields = {
  __typename?: 'pokemoncolor_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate var_pop on columns */
export type Pokemoncolor_Var_Pop_Fields = {
  __typename?: 'pokemoncolor_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemoncolor_Var_Samp_Fields = {
  __typename?: 'pokemoncolor_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemoncolor_Variance_Fields = {
  __typename?: 'pokemoncolor_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_pokemoncolorname" */
export type Pokemoncolorname = {
  __typename?: 'pokemoncolorname';
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
  pokemon_color_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  pokemoncolor?: Maybe<Pokemoncolor>;
};

/** aggregated selection of "pokemon_v2_pokemoncolorname" */
export type Pokemoncolorname_Aggregate = {
  __typename?: 'pokemoncolorname_aggregate';
  aggregate?: Maybe<Pokemoncolorname_Aggregate_Fields>;
  nodes: Array<Pokemoncolorname>;
};

export type Pokemoncolorname_Aggregate_Bool_Exp = {
  count?: InputMaybe<Pokemoncolorname_Aggregate_Bool_Exp_Count>;
};

export type Pokemoncolorname_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Pokemoncolorname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Pokemoncolorname_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_pokemoncolorname" */
export type Pokemoncolorname_Aggregate_Fields = {
  __typename?: 'pokemoncolorname_aggregate_fields';
  avg?: Maybe<Pokemoncolorname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemoncolorname_Max_Fields>;
  min?: Maybe<Pokemoncolorname_Min_Fields>;
  stddev?: Maybe<Pokemoncolorname_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemoncolorname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemoncolorname_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemoncolorname_Sum_Fields>;
  var_pop?: Maybe<Pokemoncolorname_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemoncolorname_Var_Samp_Fields>;
  variance?: Maybe<Pokemoncolorname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemoncolorname" */
export type Pokemoncolorname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemoncolorname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_pokemoncolorname" */
export type Pokemoncolorname_Aggregate_Order_By = {
  avg?: InputMaybe<Pokemoncolorname_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Pokemoncolorname_Max_Order_By>;
  min?: InputMaybe<Pokemoncolorname_Min_Order_By>;
  stddev?: InputMaybe<Pokemoncolorname_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Pokemoncolorname_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Pokemoncolorname_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Pokemoncolorname_Sum_Order_By>;
  var_pop?: InputMaybe<Pokemoncolorname_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Pokemoncolorname_Var_Samp_Order_By>;
  variance?: InputMaybe<Pokemoncolorname_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Pokemoncolorname_Avg_Fields = {
  __typename?: 'pokemoncolorname_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_color_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_pokemoncolorname" */
export type Pokemoncolorname_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_color_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemoncolorname". All fields are combined with a logical 'AND'. */
export type Pokemoncolorname_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemoncolorname_Bool_Exp>>;
  _not?: InputMaybe<Pokemoncolorname_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemoncolorname_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  pokemon_color_id?: InputMaybe<Int_Comparison_Exp>;
  pokemoncolor?: InputMaybe<Pokemoncolor_Bool_Exp>;
};

/** aggregate max on columns */
export type Pokemoncolorname_Max_Fields = {
  __typename?: 'pokemoncolorname_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  pokemon_color_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_pokemoncolorname" */
export type Pokemoncolorname_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  pokemon_color_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Pokemoncolorname_Min_Fields = {
  __typename?: 'pokemoncolorname_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  pokemon_color_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_pokemoncolorname" */
export type Pokemoncolorname_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  pokemon_color_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemoncolorname". */
export type Pokemoncolorname_Order_By = {
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  pokemon_color_id?: InputMaybe<Order_By>;
  pokemoncolor?: InputMaybe<Pokemoncolor_Order_By>;
};

/** select columns of table "pokemon_v2_pokemoncolorname" */
export enum Pokemoncolorname_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name',
  /** column name */
  PokemonColorId = 'pokemon_color_id'
}

/** aggregate stddev on columns */
export type Pokemoncolorname_Stddev_Fields = {
  __typename?: 'pokemoncolorname_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_color_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_pokemoncolorname" */
export type Pokemoncolorname_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_color_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Pokemoncolorname_Stddev_Pop_Fields = {
  __typename?: 'pokemoncolorname_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_color_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_pokemoncolorname" */
export type Pokemoncolorname_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_color_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Pokemoncolorname_Stddev_Samp_Fields = {
  __typename?: 'pokemoncolorname_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_color_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_pokemoncolorname" */
export type Pokemoncolorname_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_color_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Pokemoncolorname_Sum_Fields = {
  __typename?: 'pokemoncolorname_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  pokemon_color_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_pokemoncolorname" */
export type Pokemoncolorname_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_color_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Pokemoncolorname_Var_Pop_Fields = {
  __typename?: 'pokemoncolorname_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_color_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_pokemoncolorname" */
export type Pokemoncolorname_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_color_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Pokemoncolorname_Var_Samp_Fields = {
  __typename?: 'pokemoncolorname_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_color_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_pokemoncolorname" */
export type Pokemoncolorname_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_color_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Pokemoncolorname_Variance_Fields = {
  __typename?: 'pokemoncolorname_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_color_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_pokemoncolorname" */
export type Pokemoncolorname_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_color_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_pokemoncries" */
export type Pokemoncries = {
  __typename?: 'pokemoncries';
  cries: Scalars['jsonb']['output'];
  id: Scalars['Int']['output'];
  /** An object relationship */
  pokemon?: Maybe<Pokemon>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
};


/** columns and relationships of "pokemon_v2_pokemoncries" */
export type PokemoncriesCriesArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "pokemon_v2_pokemoncries" */
export type Pokemoncries_Aggregate = {
  __typename?: 'pokemoncries_aggregate';
  aggregate?: Maybe<Pokemoncries_Aggregate_Fields>;
  nodes: Array<Pokemoncries>;
};

export type Pokemoncries_Aggregate_Bool_Exp = {
  count?: InputMaybe<Pokemoncries_Aggregate_Bool_Exp_Count>;
};

export type Pokemoncries_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Pokemoncries_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Pokemoncries_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_pokemoncries" */
export type Pokemoncries_Aggregate_Fields = {
  __typename?: 'pokemoncries_aggregate_fields';
  avg?: Maybe<Pokemoncries_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemoncries_Max_Fields>;
  min?: Maybe<Pokemoncries_Min_Fields>;
  stddev?: Maybe<Pokemoncries_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemoncries_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemoncries_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemoncries_Sum_Fields>;
  var_pop?: Maybe<Pokemoncries_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemoncries_Var_Samp_Fields>;
  variance?: Maybe<Pokemoncries_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemoncries" */
export type Pokemoncries_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemoncries_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_pokemoncries" */
export type Pokemoncries_Aggregate_Order_By = {
  avg?: InputMaybe<Pokemoncries_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Pokemoncries_Max_Order_By>;
  min?: InputMaybe<Pokemoncries_Min_Order_By>;
  stddev?: InputMaybe<Pokemoncries_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Pokemoncries_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Pokemoncries_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Pokemoncries_Sum_Order_By>;
  var_pop?: InputMaybe<Pokemoncries_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Pokemoncries_Var_Samp_Order_By>;
  variance?: InputMaybe<Pokemoncries_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Pokemoncries_Avg_Fields = {
  __typename?: 'pokemoncries_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_pokemoncries" */
export type Pokemoncries_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemoncries". All fields are combined with a logical 'AND'. */
export type Pokemoncries_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemoncries_Bool_Exp>>;
  _not?: InputMaybe<Pokemoncries_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemoncries_Bool_Exp>>;
  cries?: InputMaybe<Jsonb_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  pokemon?: InputMaybe<Pokemon_Bool_Exp>;
  pokemon_id?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Pokemoncries_Max_Fields = {
  __typename?: 'pokemoncries_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_pokemoncries" */
export type Pokemoncries_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Pokemoncries_Min_Fields = {
  __typename?: 'pokemoncries_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_pokemoncries" */
export type Pokemoncries_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemoncries". */
export type Pokemoncries_Order_By = {
  cries?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon?: InputMaybe<Pokemon_Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_pokemoncries" */
export enum Pokemoncries_Select_Column {
  /** column name */
  Cries = 'cries',
  /** column name */
  Id = 'id',
  /** column name */
  PokemonId = 'pokemon_id'
}

/** aggregate stddev on columns */
export type Pokemoncries_Stddev_Fields = {
  __typename?: 'pokemoncries_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_pokemoncries" */
export type Pokemoncries_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Pokemoncries_Stddev_Pop_Fields = {
  __typename?: 'pokemoncries_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_pokemoncries" */
export type Pokemoncries_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Pokemoncries_Stddev_Samp_Fields = {
  __typename?: 'pokemoncries_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_pokemoncries" */
export type Pokemoncries_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Pokemoncries_Sum_Fields = {
  __typename?: 'pokemoncries_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_pokemoncries" */
export type Pokemoncries_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Pokemoncries_Var_Pop_Fields = {
  __typename?: 'pokemoncries_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_pokemoncries" */
export type Pokemoncries_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Pokemoncries_Var_Samp_Fields = {
  __typename?: 'pokemoncries_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_pokemoncries" */
export type Pokemoncries_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Pokemoncries_Variance_Fields = {
  __typename?: 'pokemoncries_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_pokemoncries" */
export type Pokemoncries_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_pokemondexnumber" */
export type Pokemondexnumber = {
  __typename?: 'pokemondexnumber';
  id: Scalars['Int']['output'];
  /** An object relationship */
  pokedex?: Maybe<Pokedex>;
  pokedex_id?: Maybe<Scalars['Int']['output']>;
  pokedex_number: Scalars['Int']['output'];
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  pokemonspecy?: Maybe<Pokemonspecies>;
};

/** aggregated selection of "pokemon_v2_pokemondexnumber" */
export type Pokemondexnumber_Aggregate = {
  __typename?: 'pokemondexnumber_aggregate';
  aggregate?: Maybe<Pokemondexnumber_Aggregate_Fields>;
  nodes: Array<Pokemondexnumber>;
};

export type Pokemondexnumber_Aggregate_Bool_Exp = {
  count?: InputMaybe<Pokemondexnumber_Aggregate_Bool_Exp_Count>;
};

export type Pokemondexnumber_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Pokemondexnumber_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Pokemondexnumber_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_pokemondexnumber" */
export type Pokemondexnumber_Aggregate_Fields = {
  __typename?: 'pokemondexnumber_aggregate_fields';
  avg?: Maybe<Pokemondexnumber_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemondexnumber_Max_Fields>;
  min?: Maybe<Pokemondexnumber_Min_Fields>;
  stddev?: Maybe<Pokemondexnumber_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemondexnumber_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemondexnumber_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemondexnumber_Sum_Fields>;
  var_pop?: Maybe<Pokemondexnumber_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemondexnumber_Var_Samp_Fields>;
  variance?: Maybe<Pokemondexnumber_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemondexnumber" */
export type Pokemondexnumber_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemondexnumber_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_pokemondexnumber" */
export type Pokemondexnumber_Aggregate_Order_By = {
  avg?: InputMaybe<Pokemondexnumber_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Pokemondexnumber_Max_Order_By>;
  min?: InputMaybe<Pokemondexnumber_Min_Order_By>;
  stddev?: InputMaybe<Pokemondexnumber_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Pokemondexnumber_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Pokemondexnumber_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Pokemondexnumber_Sum_Order_By>;
  var_pop?: InputMaybe<Pokemondexnumber_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Pokemondexnumber_Var_Samp_Order_By>;
  variance?: InputMaybe<Pokemondexnumber_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Pokemondexnumber_Avg_Fields = {
  __typename?: 'pokemondexnumber_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
  pokedex_number?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_pokemondexnumber" */
export type Pokemondexnumber_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  pokedex_id?: InputMaybe<Order_By>;
  pokedex_number?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemondexnumber". All fields are combined with a logical 'AND'. */
export type Pokemondexnumber_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemondexnumber_Bool_Exp>>;
  _not?: InputMaybe<Pokemondexnumber_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemondexnumber_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  pokedex?: InputMaybe<Pokedex_Bool_Exp>;
  pokedex_id?: InputMaybe<Int_Comparison_Exp>;
  pokedex_number?: InputMaybe<Int_Comparison_Exp>;
  pokemon_species_id?: InputMaybe<Int_Comparison_Exp>;
  pokemonspecy?: InputMaybe<Pokemonspecies_Bool_Exp>;
};

/** aggregate max on columns */
export type Pokemondexnumber_Max_Fields = {
  __typename?: 'pokemondexnumber_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  pokedex_id?: Maybe<Scalars['Int']['output']>;
  pokedex_number?: Maybe<Scalars['Int']['output']>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_pokemondexnumber" */
export type Pokemondexnumber_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  pokedex_id?: InputMaybe<Order_By>;
  pokedex_number?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Pokemondexnumber_Min_Fields = {
  __typename?: 'pokemondexnumber_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  pokedex_id?: Maybe<Scalars['Int']['output']>;
  pokedex_number?: Maybe<Scalars['Int']['output']>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_pokemondexnumber" */
export type Pokemondexnumber_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  pokedex_id?: InputMaybe<Order_By>;
  pokedex_number?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemondexnumber". */
export type Pokemondexnumber_Order_By = {
  id?: InputMaybe<Order_By>;
  pokedex?: InputMaybe<Pokedex_Order_By>;
  pokedex_id?: InputMaybe<Order_By>;
  pokedex_number?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
  pokemonspecy?: InputMaybe<Pokemonspecies_Order_By>;
};

/** select columns of table "pokemon_v2_pokemondexnumber" */
export enum Pokemondexnumber_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  PokedexId = 'pokedex_id',
  /** column name */
  PokedexNumber = 'pokedex_number',
  /** column name */
  PokemonSpeciesId = 'pokemon_species_id'
}

/** aggregate stddev on columns */
export type Pokemondexnumber_Stddev_Fields = {
  __typename?: 'pokemondexnumber_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
  pokedex_number?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_pokemondexnumber" */
export type Pokemondexnumber_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  pokedex_id?: InputMaybe<Order_By>;
  pokedex_number?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Pokemondexnumber_Stddev_Pop_Fields = {
  __typename?: 'pokemondexnumber_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
  pokedex_number?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_pokemondexnumber" */
export type Pokemondexnumber_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  pokedex_id?: InputMaybe<Order_By>;
  pokedex_number?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Pokemondexnumber_Stddev_Samp_Fields = {
  __typename?: 'pokemondexnumber_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
  pokedex_number?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_pokemondexnumber" */
export type Pokemondexnumber_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  pokedex_id?: InputMaybe<Order_By>;
  pokedex_number?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Pokemondexnumber_Sum_Fields = {
  __typename?: 'pokemondexnumber_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  pokedex_id?: Maybe<Scalars['Int']['output']>;
  pokedex_number?: Maybe<Scalars['Int']['output']>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_pokemondexnumber" */
export type Pokemondexnumber_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  pokedex_id?: InputMaybe<Order_By>;
  pokedex_number?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Pokemondexnumber_Var_Pop_Fields = {
  __typename?: 'pokemondexnumber_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
  pokedex_number?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_pokemondexnumber" */
export type Pokemondexnumber_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  pokedex_id?: InputMaybe<Order_By>;
  pokedex_number?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Pokemondexnumber_Var_Samp_Fields = {
  __typename?: 'pokemondexnumber_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
  pokedex_number?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_pokemondexnumber" */
export type Pokemondexnumber_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  pokedex_id?: InputMaybe<Order_By>;
  pokedex_number?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Pokemondexnumber_Variance_Fields = {
  __typename?: 'pokemondexnumber_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokedex_id?: Maybe<Scalars['Float']['output']>;
  pokedex_number?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_pokemondexnumber" */
export type Pokemondexnumber_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  pokedex_id?: InputMaybe<Order_By>;
  pokedex_number?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_pokemonegggroup" */
export type Pokemonegggroup = {
  __typename?: 'pokemonegggroup';
  egg_group_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  egggroup?: Maybe<Egggroup>;
  id: Scalars['Int']['output'];
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  pokemonspecy?: Maybe<Pokemonspecies>;
};

/** aggregated selection of "pokemon_v2_pokemonegggroup" */
export type Pokemonegggroup_Aggregate = {
  __typename?: 'pokemonegggroup_aggregate';
  aggregate?: Maybe<Pokemonegggroup_Aggregate_Fields>;
  nodes: Array<Pokemonegggroup>;
};

export type Pokemonegggroup_Aggregate_Bool_Exp = {
  count?: InputMaybe<Pokemonegggroup_Aggregate_Bool_Exp_Count>;
};

export type Pokemonegggroup_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Pokemonegggroup_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Pokemonegggroup_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_pokemonegggroup" */
export type Pokemonegggroup_Aggregate_Fields = {
  __typename?: 'pokemonegggroup_aggregate_fields';
  avg?: Maybe<Pokemonegggroup_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemonegggroup_Max_Fields>;
  min?: Maybe<Pokemonegggroup_Min_Fields>;
  stddev?: Maybe<Pokemonegggroup_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemonegggroup_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemonegggroup_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemonegggroup_Sum_Fields>;
  var_pop?: Maybe<Pokemonegggroup_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemonegggroup_Var_Samp_Fields>;
  variance?: Maybe<Pokemonegggroup_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemonegggroup" */
export type Pokemonegggroup_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemonegggroup_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_pokemonegggroup" */
export type Pokemonegggroup_Aggregate_Order_By = {
  avg?: InputMaybe<Pokemonegggroup_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Pokemonegggroup_Max_Order_By>;
  min?: InputMaybe<Pokemonegggroup_Min_Order_By>;
  stddev?: InputMaybe<Pokemonegggroup_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Pokemonegggroup_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Pokemonegggroup_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Pokemonegggroup_Sum_Order_By>;
  var_pop?: InputMaybe<Pokemonegggroup_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Pokemonegggroup_Var_Samp_Order_By>;
  variance?: InputMaybe<Pokemonegggroup_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Pokemonegggroup_Avg_Fields = {
  __typename?: 'pokemonegggroup_avg_fields';
  egg_group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_pokemonegggroup" */
export type Pokemonegggroup_Avg_Order_By = {
  egg_group_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemonegggroup". All fields are combined with a logical 'AND'. */
export type Pokemonegggroup_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemonegggroup_Bool_Exp>>;
  _not?: InputMaybe<Pokemonegggroup_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemonegggroup_Bool_Exp>>;
  egg_group_id?: InputMaybe<Int_Comparison_Exp>;
  egggroup?: InputMaybe<Egggroup_Bool_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  pokemon_species_id?: InputMaybe<Int_Comparison_Exp>;
  pokemonspecy?: InputMaybe<Pokemonspecies_Bool_Exp>;
};

/** aggregate max on columns */
export type Pokemonegggroup_Max_Fields = {
  __typename?: 'pokemonegggroup_max_fields';
  egg_group_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_pokemonegggroup" */
export type Pokemonegggroup_Max_Order_By = {
  egg_group_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Pokemonegggroup_Min_Fields = {
  __typename?: 'pokemonegggroup_min_fields';
  egg_group_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_pokemonegggroup" */
export type Pokemonegggroup_Min_Order_By = {
  egg_group_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemonegggroup". */
export type Pokemonegggroup_Order_By = {
  egg_group_id?: InputMaybe<Order_By>;
  egggroup?: InputMaybe<Egggroup_Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
  pokemonspecy?: InputMaybe<Pokemonspecies_Order_By>;
};

/** select columns of table "pokemon_v2_pokemonegggroup" */
export enum Pokemonegggroup_Select_Column {
  /** column name */
  EggGroupId = 'egg_group_id',
  /** column name */
  Id = 'id',
  /** column name */
  PokemonSpeciesId = 'pokemon_species_id'
}

/** aggregate stddev on columns */
export type Pokemonegggroup_Stddev_Fields = {
  __typename?: 'pokemonegggroup_stddev_fields';
  egg_group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_pokemonegggroup" */
export type Pokemonegggroup_Stddev_Order_By = {
  egg_group_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Pokemonegggroup_Stddev_Pop_Fields = {
  __typename?: 'pokemonegggroup_stddev_pop_fields';
  egg_group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_pokemonegggroup" */
export type Pokemonegggroup_Stddev_Pop_Order_By = {
  egg_group_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Pokemonegggroup_Stddev_Samp_Fields = {
  __typename?: 'pokemonegggroup_stddev_samp_fields';
  egg_group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_pokemonegggroup" */
export type Pokemonegggroup_Stddev_Samp_Order_By = {
  egg_group_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Pokemonegggroup_Sum_Fields = {
  __typename?: 'pokemonegggroup_sum_fields';
  egg_group_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_pokemonegggroup" */
export type Pokemonegggroup_Sum_Order_By = {
  egg_group_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Pokemonegggroup_Var_Pop_Fields = {
  __typename?: 'pokemonegggroup_var_pop_fields';
  egg_group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_pokemonegggroup" */
export type Pokemonegggroup_Var_Pop_Order_By = {
  egg_group_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Pokemonegggroup_Var_Samp_Fields = {
  __typename?: 'pokemonegggroup_var_samp_fields';
  egg_group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_pokemonegggroup" */
export type Pokemonegggroup_Var_Samp_Order_By = {
  egg_group_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Pokemonegggroup_Variance_Fields = {
  __typename?: 'pokemonegggroup_variance_fields';
  egg_group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_pokemonegggroup" */
export type Pokemonegggroup_Variance_Order_By = {
  egg_group_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_pokemonevolution" */
export type Pokemonevolution = {
  __typename?: 'pokemonevolution';
  /** An object relationship */
  ItemByHeldItemId?: Maybe<Item>;
  /** An object relationship */
  PokemonspecyByPartySpeciesId?: Maybe<Pokemonspecies>;
  /** An object relationship */
  PokemonspecyByTradeSpeciesId?: Maybe<Pokemonspecies>;
  /** An object relationship */
  TypeByPartyTypeId?: Maybe<Type>;
  evolution_item_id?: Maybe<Scalars['Int']['output']>;
  evolution_trigger_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  evolutiontrigger?: Maybe<Evolutiontrigger>;
  evolved_species_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  gender?: Maybe<Gender>;
  gender_id?: Maybe<Scalars['Int']['output']>;
  held_item_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  /** An object relationship */
  item?: Maybe<Item>;
  known_move_id?: Maybe<Scalars['Int']['output']>;
  known_move_type_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  location?: Maybe<Location>;
  location_id?: Maybe<Scalars['Int']['output']>;
  min_affection?: Maybe<Scalars['Int']['output']>;
  min_beauty?: Maybe<Scalars['Int']['output']>;
  min_happiness?: Maybe<Scalars['Int']['output']>;
  min_level?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  move?: Maybe<Move>;
  needs_overworld_rain: Scalars['Boolean']['output'];
  party_species_id?: Maybe<Scalars['Int']['output']>;
  party_type_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  pokemonspecy?: Maybe<Pokemonspecies>;
  relative_physical_stats?: Maybe<Scalars['Int']['output']>;
  time_of_day?: Maybe<Scalars['String']['output']>;
  trade_species_id?: Maybe<Scalars['Int']['output']>;
  turn_upside_down: Scalars['Boolean']['output'];
  /** An object relationship */
  type?: Maybe<Type>;
};

/** aggregated selection of "pokemon_v2_pokemonevolution" */
export type Pokemonevolution_Aggregate = {
  __typename?: 'pokemonevolution_aggregate';
  aggregate?: Maybe<Pokemonevolution_Aggregate_Fields>;
  nodes: Array<Pokemonevolution>;
};

export type Pokemonevolution_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Pokemonevolution_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Pokemonevolution_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Pokemonevolution_Aggregate_Bool_Exp_Count>;
};

export type Pokemonevolution_Aggregate_Bool_Exp_Bool_And = {
  arguments: Pokemonevolution_Select_Column_Pokemonevolution_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Pokemonevolution_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Pokemonevolution_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Pokemonevolution_Select_Column_Pokemonevolution_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Pokemonevolution_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Pokemonevolution_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Pokemonevolution_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Pokemonevolution_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_pokemonevolution" */
export type Pokemonevolution_Aggregate_Fields = {
  __typename?: 'pokemonevolution_aggregate_fields';
  avg?: Maybe<Pokemonevolution_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemonevolution_Max_Fields>;
  min?: Maybe<Pokemonevolution_Min_Fields>;
  stddev?: Maybe<Pokemonevolution_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemonevolution_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemonevolution_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemonevolution_Sum_Fields>;
  var_pop?: Maybe<Pokemonevolution_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemonevolution_Var_Samp_Fields>;
  variance?: Maybe<Pokemonevolution_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemonevolution" */
export type Pokemonevolution_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemonevolution_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_pokemonevolution" */
export type Pokemonevolution_Aggregate_Order_By = {
  avg?: InputMaybe<Pokemonevolution_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Pokemonevolution_Max_Order_By>;
  min?: InputMaybe<Pokemonevolution_Min_Order_By>;
  stddev?: InputMaybe<Pokemonevolution_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Pokemonevolution_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Pokemonevolution_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Pokemonevolution_Sum_Order_By>;
  var_pop?: InputMaybe<Pokemonevolution_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Pokemonevolution_Var_Samp_Order_By>;
  variance?: InputMaybe<Pokemonevolution_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Pokemonevolution_Avg_Fields = {
  __typename?: 'pokemonevolution_avg_fields';
  evolution_item_id?: Maybe<Scalars['Float']['output']>;
  evolution_trigger_id?: Maybe<Scalars['Float']['output']>;
  evolved_species_id?: Maybe<Scalars['Float']['output']>;
  gender_id?: Maybe<Scalars['Float']['output']>;
  held_item_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  known_move_id?: Maybe<Scalars['Float']['output']>;
  known_move_type_id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
  min_affection?: Maybe<Scalars['Float']['output']>;
  min_beauty?: Maybe<Scalars['Float']['output']>;
  min_happiness?: Maybe<Scalars['Float']['output']>;
  min_level?: Maybe<Scalars['Float']['output']>;
  party_species_id?: Maybe<Scalars['Float']['output']>;
  party_type_id?: Maybe<Scalars['Float']['output']>;
  relative_physical_stats?: Maybe<Scalars['Float']['output']>;
  trade_species_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_pokemonevolution" */
export type Pokemonevolution_Avg_Order_By = {
  evolution_item_id?: InputMaybe<Order_By>;
  evolution_trigger_id?: InputMaybe<Order_By>;
  evolved_species_id?: InputMaybe<Order_By>;
  gender_id?: InputMaybe<Order_By>;
  held_item_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  known_move_id?: InputMaybe<Order_By>;
  known_move_type_id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
  min_affection?: InputMaybe<Order_By>;
  min_beauty?: InputMaybe<Order_By>;
  min_happiness?: InputMaybe<Order_By>;
  min_level?: InputMaybe<Order_By>;
  party_species_id?: InputMaybe<Order_By>;
  party_type_id?: InputMaybe<Order_By>;
  relative_physical_stats?: InputMaybe<Order_By>;
  trade_species_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemonevolution". All fields are combined with a logical 'AND'. */
export type Pokemonevolution_Bool_Exp = {
  ItemByHeldItemId?: InputMaybe<Item_Bool_Exp>;
  PokemonspecyByPartySpeciesId?: InputMaybe<Pokemonspecies_Bool_Exp>;
  PokemonspecyByTradeSpeciesId?: InputMaybe<Pokemonspecies_Bool_Exp>;
  TypeByPartyTypeId?: InputMaybe<Type_Bool_Exp>;
  _and?: InputMaybe<Array<Pokemonevolution_Bool_Exp>>;
  _not?: InputMaybe<Pokemonevolution_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemonevolution_Bool_Exp>>;
  evolution_item_id?: InputMaybe<Int_Comparison_Exp>;
  evolution_trigger_id?: InputMaybe<Int_Comparison_Exp>;
  evolutiontrigger?: InputMaybe<Evolutiontrigger_Bool_Exp>;
  evolved_species_id?: InputMaybe<Int_Comparison_Exp>;
  gender?: InputMaybe<Gender_Bool_Exp>;
  gender_id?: InputMaybe<Int_Comparison_Exp>;
  held_item_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  item?: InputMaybe<Item_Bool_Exp>;
  known_move_id?: InputMaybe<Int_Comparison_Exp>;
  known_move_type_id?: InputMaybe<Int_Comparison_Exp>;
  location?: InputMaybe<Location_Bool_Exp>;
  location_id?: InputMaybe<Int_Comparison_Exp>;
  min_affection?: InputMaybe<Int_Comparison_Exp>;
  min_beauty?: InputMaybe<Int_Comparison_Exp>;
  min_happiness?: InputMaybe<Int_Comparison_Exp>;
  min_level?: InputMaybe<Int_Comparison_Exp>;
  move?: InputMaybe<Move_Bool_Exp>;
  needs_overworld_rain?: InputMaybe<Boolean_Comparison_Exp>;
  party_species_id?: InputMaybe<Int_Comparison_Exp>;
  party_type_id?: InputMaybe<Int_Comparison_Exp>;
  pokemonspecy?: InputMaybe<Pokemonspecies_Bool_Exp>;
  relative_physical_stats?: InputMaybe<Int_Comparison_Exp>;
  time_of_day?: InputMaybe<String_Comparison_Exp>;
  trade_species_id?: InputMaybe<Int_Comparison_Exp>;
  turn_upside_down?: InputMaybe<Boolean_Comparison_Exp>;
  type?: InputMaybe<Type_Bool_Exp>;
};

/** aggregate max on columns */
export type Pokemonevolution_Max_Fields = {
  __typename?: 'pokemonevolution_max_fields';
  evolution_item_id?: Maybe<Scalars['Int']['output']>;
  evolution_trigger_id?: Maybe<Scalars['Int']['output']>;
  evolved_species_id?: Maybe<Scalars['Int']['output']>;
  gender_id?: Maybe<Scalars['Int']['output']>;
  held_item_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  known_move_id?: Maybe<Scalars['Int']['output']>;
  known_move_type_id?: Maybe<Scalars['Int']['output']>;
  location_id?: Maybe<Scalars['Int']['output']>;
  min_affection?: Maybe<Scalars['Int']['output']>;
  min_beauty?: Maybe<Scalars['Int']['output']>;
  min_happiness?: Maybe<Scalars['Int']['output']>;
  min_level?: Maybe<Scalars['Int']['output']>;
  party_species_id?: Maybe<Scalars['Int']['output']>;
  party_type_id?: Maybe<Scalars['Int']['output']>;
  relative_physical_stats?: Maybe<Scalars['Int']['output']>;
  time_of_day?: Maybe<Scalars['String']['output']>;
  trade_species_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_pokemonevolution" */
export type Pokemonevolution_Max_Order_By = {
  evolution_item_id?: InputMaybe<Order_By>;
  evolution_trigger_id?: InputMaybe<Order_By>;
  evolved_species_id?: InputMaybe<Order_By>;
  gender_id?: InputMaybe<Order_By>;
  held_item_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  known_move_id?: InputMaybe<Order_By>;
  known_move_type_id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
  min_affection?: InputMaybe<Order_By>;
  min_beauty?: InputMaybe<Order_By>;
  min_happiness?: InputMaybe<Order_By>;
  min_level?: InputMaybe<Order_By>;
  party_species_id?: InputMaybe<Order_By>;
  party_type_id?: InputMaybe<Order_By>;
  relative_physical_stats?: InputMaybe<Order_By>;
  time_of_day?: InputMaybe<Order_By>;
  trade_species_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Pokemonevolution_Min_Fields = {
  __typename?: 'pokemonevolution_min_fields';
  evolution_item_id?: Maybe<Scalars['Int']['output']>;
  evolution_trigger_id?: Maybe<Scalars['Int']['output']>;
  evolved_species_id?: Maybe<Scalars['Int']['output']>;
  gender_id?: Maybe<Scalars['Int']['output']>;
  held_item_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  known_move_id?: Maybe<Scalars['Int']['output']>;
  known_move_type_id?: Maybe<Scalars['Int']['output']>;
  location_id?: Maybe<Scalars['Int']['output']>;
  min_affection?: Maybe<Scalars['Int']['output']>;
  min_beauty?: Maybe<Scalars['Int']['output']>;
  min_happiness?: Maybe<Scalars['Int']['output']>;
  min_level?: Maybe<Scalars['Int']['output']>;
  party_species_id?: Maybe<Scalars['Int']['output']>;
  party_type_id?: Maybe<Scalars['Int']['output']>;
  relative_physical_stats?: Maybe<Scalars['Int']['output']>;
  time_of_day?: Maybe<Scalars['String']['output']>;
  trade_species_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_pokemonevolution" */
export type Pokemonevolution_Min_Order_By = {
  evolution_item_id?: InputMaybe<Order_By>;
  evolution_trigger_id?: InputMaybe<Order_By>;
  evolved_species_id?: InputMaybe<Order_By>;
  gender_id?: InputMaybe<Order_By>;
  held_item_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  known_move_id?: InputMaybe<Order_By>;
  known_move_type_id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
  min_affection?: InputMaybe<Order_By>;
  min_beauty?: InputMaybe<Order_By>;
  min_happiness?: InputMaybe<Order_By>;
  min_level?: InputMaybe<Order_By>;
  party_species_id?: InputMaybe<Order_By>;
  party_type_id?: InputMaybe<Order_By>;
  relative_physical_stats?: InputMaybe<Order_By>;
  time_of_day?: InputMaybe<Order_By>;
  trade_species_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemonevolution". */
export type Pokemonevolution_Order_By = {
  ItemByHeldItemId?: InputMaybe<Item_Order_By>;
  PokemonspecyByPartySpeciesId?: InputMaybe<Pokemonspecies_Order_By>;
  PokemonspecyByTradeSpeciesId?: InputMaybe<Pokemonspecies_Order_By>;
  TypeByPartyTypeId?: InputMaybe<Type_Order_By>;
  evolution_item_id?: InputMaybe<Order_By>;
  evolution_trigger_id?: InputMaybe<Order_By>;
  evolutiontrigger?: InputMaybe<Evolutiontrigger_Order_By>;
  evolved_species_id?: InputMaybe<Order_By>;
  gender?: InputMaybe<Gender_Order_By>;
  gender_id?: InputMaybe<Order_By>;
  held_item_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  item?: InputMaybe<Item_Order_By>;
  known_move_id?: InputMaybe<Order_By>;
  known_move_type_id?: InputMaybe<Order_By>;
  location?: InputMaybe<Location_Order_By>;
  location_id?: InputMaybe<Order_By>;
  min_affection?: InputMaybe<Order_By>;
  min_beauty?: InputMaybe<Order_By>;
  min_happiness?: InputMaybe<Order_By>;
  min_level?: InputMaybe<Order_By>;
  move?: InputMaybe<Move_Order_By>;
  needs_overworld_rain?: InputMaybe<Order_By>;
  party_species_id?: InputMaybe<Order_By>;
  party_type_id?: InputMaybe<Order_By>;
  pokemonspecy?: InputMaybe<Pokemonspecies_Order_By>;
  relative_physical_stats?: InputMaybe<Order_By>;
  time_of_day?: InputMaybe<Order_By>;
  trade_species_id?: InputMaybe<Order_By>;
  turn_upside_down?: InputMaybe<Order_By>;
  type?: InputMaybe<Type_Order_By>;
};

/** select columns of table "pokemon_v2_pokemonevolution" */
export enum Pokemonevolution_Select_Column {
  /** column name */
  EvolutionItemId = 'evolution_item_id',
  /** column name */
  EvolutionTriggerId = 'evolution_trigger_id',
  /** column name */
  EvolvedSpeciesId = 'evolved_species_id',
  /** column name */
  GenderId = 'gender_id',
  /** column name */
  HeldItemId = 'held_item_id',
  /** column name */
  Id = 'id',
  /** column name */
  KnownMoveId = 'known_move_id',
  /** column name */
  KnownMoveTypeId = 'known_move_type_id',
  /** column name */
  LocationId = 'location_id',
  /** column name */
  MinAffection = 'min_affection',
  /** column name */
  MinBeauty = 'min_beauty',
  /** column name */
  MinHappiness = 'min_happiness',
  /** column name */
  MinLevel = 'min_level',
  /** column name */
  NeedsOverworldRain = 'needs_overworld_rain',
  /** column name */
  PartySpeciesId = 'party_species_id',
  /** column name */
  PartyTypeId = 'party_type_id',
  /** column name */
  RelativePhysicalStats = 'relative_physical_stats',
  /** column name */
  TimeOfDay = 'time_of_day',
  /** column name */
  TradeSpeciesId = 'trade_species_id',
  /** column name */
  TurnUpsideDown = 'turn_upside_down'
}

/** select "pokemonevolution_aggregate_bool_exp_bool_and_arguments_columns" columns of table "pokemon_v2_pokemonevolution" */
export enum Pokemonevolution_Select_Column_Pokemonevolution_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  NeedsOverworldRain = 'needs_overworld_rain',
  /** column name */
  TurnUpsideDown = 'turn_upside_down'
}

/** select "pokemonevolution_aggregate_bool_exp_bool_or_arguments_columns" columns of table "pokemon_v2_pokemonevolution" */
export enum Pokemonevolution_Select_Column_Pokemonevolution_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  NeedsOverworldRain = 'needs_overworld_rain',
  /** column name */
  TurnUpsideDown = 'turn_upside_down'
}

/** aggregate stddev on columns */
export type Pokemonevolution_Stddev_Fields = {
  __typename?: 'pokemonevolution_stddev_fields';
  evolution_item_id?: Maybe<Scalars['Float']['output']>;
  evolution_trigger_id?: Maybe<Scalars['Float']['output']>;
  evolved_species_id?: Maybe<Scalars['Float']['output']>;
  gender_id?: Maybe<Scalars['Float']['output']>;
  held_item_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  known_move_id?: Maybe<Scalars['Float']['output']>;
  known_move_type_id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
  min_affection?: Maybe<Scalars['Float']['output']>;
  min_beauty?: Maybe<Scalars['Float']['output']>;
  min_happiness?: Maybe<Scalars['Float']['output']>;
  min_level?: Maybe<Scalars['Float']['output']>;
  party_species_id?: Maybe<Scalars['Float']['output']>;
  party_type_id?: Maybe<Scalars['Float']['output']>;
  relative_physical_stats?: Maybe<Scalars['Float']['output']>;
  trade_species_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_pokemonevolution" */
export type Pokemonevolution_Stddev_Order_By = {
  evolution_item_id?: InputMaybe<Order_By>;
  evolution_trigger_id?: InputMaybe<Order_By>;
  evolved_species_id?: InputMaybe<Order_By>;
  gender_id?: InputMaybe<Order_By>;
  held_item_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  known_move_id?: InputMaybe<Order_By>;
  known_move_type_id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
  min_affection?: InputMaybe<Order_By>;
  min_beauty?: InputMaybe<Order_By>;
  min_happiness?: InputMaybe<Order_By>;
  min_level?: InputMaybe<Order_By>;
  party_species_id?: InputMaybe<Order_By>;
  party_type_id?: InputMaybe<Order_By>;
  relative_physical_stats?: InputMaybe<Order_By>;
  trade_species_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Pokemonevolution_Stddev_Pop_Fields = {
  __typename?: 'pokemonevolution_stddev_pop_fields';
  evolution_item_id?: Maybe<Scalars['Float']['output']>;
  evolution_trigger_id?: Maybe<Scalars['Float']['output']>;
  evolved_species_id?: Maybe<Scalars['Float']['output']>;
  gender_id?: Maybe<Scalars['Float']['output']>;
  held_item_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  known_move_id?: Maybe<Scalars['Float']['output']>;
  known_move_type_id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
  min_affection?: Maybe<Scalars['Float']['output']>;
  min_beauty?: Maybe<Scalars['Float']['output']>;
  min_happiness?: Maybe<Scalars['Float']['output']>;
  min_level?: Maybe<Scalars['Float']['output']>;
  party_species_id?: Maybe<Scalars['Float']['output']>;
  party_type_id?: Maybe<Scalars['Float']['output']>;
  relative_physical_stats?: Maybe<Scalars['Float']['output']>;
  trade_species_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_pokemonevolution" */
export type Pokemonevolution_Stddev_Pop_Order_By = {
  evolution_item_id?: InputMaybe<Order_By>;
  evolution_trigger_id?: InputMaybe<Order_By>;
  evolved_species_id?: InputMaybe<Order_By>;
  gender_id?: InputMaybe<Order_By>;
  held_item_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  known_move_id?: InputMaybe<Order_By>;
  known_move_type_id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
  min_affection?: InputMaybe<Order_By>;
  min_beauty?: InputMaybe<Order_By>;
  min_happiness?: InputMaybe<Order_By>;
  min_level?: InputMaybe<Order_By>;
  party_species_id?: InputMaybe<Order_By>;
  party_type_id?: InputMaybe<Order_By>;
  relative_physical_stats?: InputMaybe<Order_By>;
  trade_species_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Pokemonevolution_Stddev_Samp_Fields = {
  __typename?: 'pokemonevolution_stddev_samp_fields';
  evolution_item_id?: Maybe<Scalars['Float']['output']>;
  evolution_trigger_id?: Maybe<Scalars['Float']['output']>;
  evolved_species_id?: Maybe<Scalars['Float']['output']>;
  gender_id?: Maybe<Scalars['Float']['output']>;
  held_item_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  known_move_id?: Maybe<Scalars['Float']['output']>;
  known_move_type_id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
  min_affection?: Maybe<Scalars['Float']['output']>;
  min_beauty?: Maybe<Scalars['Float']['output']>;
  min_happiness?: Maybe<Scalars['Float']['output']>;
  min_level?: Maybe<Scalars['Float']['output']>;
  party_species_id?: Maybe<Scalars['Float']['output']>;
  party_type_id?: Maybe<Scalars['Float']['output']>;
  relative_physical_stats?: Maybe<Scalars['Float']['output']>;
  trade_species_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_pokemonevolution" */
export type Pokemonevolution_Stddev_Samp_Order_By = {
  evolution_item_id?: InputMaybe<Order_By>;
  evolution_trigger_id?: InputMaybe<Order_By>;
  evolved_species_id?: InputMaybe<Order_By>;
  gender_id?: InputMaybe<Order_By>;
  held_item_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  known_move_id?: InputMaybe<Order_By>;
  known_move_type_id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
  min_affection?: InputMaybe<Order_By>;
  min_beauty?: InputMaybe<Order_By>;
  min_happiness?: InputMaybe<Order_By>;
  min_level?: InputMaybe<Order_By>;
  party_species_id?: InputMaybe<Order_By>;
  party_type_id?: InputMaybe<Order_By>;
  relative_physical_stats?: InputMaybe<Order_By>;
  trade_species_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Pokemonevolution_Sum_Fields = {
  __typename?: 'pokemonevolution_sum_fields';
  evolution_item_id?: Maybe<Scalars['Int']['output']>;
  evolution_trigger_id?: Maybe<Scalars['Int']['output']>;
  evolved_species_id?: Maybe<Scalars['Int']['output']>;
  gender_id?: Maybe<Scalars['Int']['output']>;
  held_item_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  known_move_id?: Maybe<Scalars['Int']['output']>;
  known_move_type_id?: Maybe<Scalars['Int']['output']>;
  location_id?: Maybe<Scalars['Int']['output']>;
  min_affection?: Maybe<Scalars['Int']['output']>;
  min_beauty?: Maybe<Scalars['Int']['output']>;
  min_happiness?: Maybe<Scalars['Int']['output']>;
  min_level?: Maybe<Scalars['Int']['output']>;
  party_species_id?: Maybe<Scalars['Int']['output']>;
  party_type_id?: Maybe<Scalars['Int']['output']>;
  relative_physical_stats?: Maybe<Scalars['Int']['output']>;
  trade_species_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_pokemonevolution" */
export type Pokemonevolution_Sum_Order_By = {
  evolution_item_id?: InputMaybe<Order_By>;
  evolution_trigger_id?: InputMaybe<Order_By>;
  evolved_species_id?: InputMaybe<Order_By>;
  gender_id?: InputMaybe<Order_By>;
  held_item_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  known_move_id?: InputMaybe<Order_By>;
  known_move_type_id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
  min_affection?: InputMaybe<Order_By>;
  min_beauty?: InputMaybe<Order_By>;
  min_happiness?: InputMaybe<Order_By>;
  min_level?: InputMaybe<Order_By>;
  party_species_id?: InputMaybe<Order_By>;
  party_type_id?: InputMaybe<Order_By>;
  relative_physical_stats?: InputMaybe<Order_By>;
  trade_species_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Pokemonevolution_Var_Pop_Fields = {
  __typename?: 'pokemonevolution_var_pop_fields';
  evolution_item_id?: Maybe<Scalars['Float']['output']>;
  evolution_trigger_id?: Maybe<Scalars['Float']['output']>;
  evolved_species_id?: Maybe<Scalars['Float']['output']>;
  gender_id?: Maybe<Scalars['Float']['output']>;
  held_item_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  known_move_id?: Maybe<Scalars['Float']['output']>;
  known_move_type_id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
  min_affection?: Maybe<Scalars['Float']['output']>;
  min_beauty?: Maybe<Scalars['Float']['output']>;
  min_happiness?: Maybe<Scalars['Float']['output']>;
  min_level?: Maybe<Scalars['Float']['output']>;
  party_species_id?: Maybe<Scalars['Float']['output']>;
  party_type_id?: Maybe<Scalars['Float']['output']>;
  relative_physical_stats?: Maybe<Scalars['Float']['output']>;
  trade_species_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_pokemonevolution" */
export type Pokemonevolution_Var_Pop_Order_By = {
  evolution_item_id?: InputMaybe<Order_By>;
  evolution_trigger_id?: InputMaybe<Order_By>;
  evolved_species_id?: InputMaybe<Order_By>;
  gender_id?: InputMaybe<Order_By>;
  held_item_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  known_move_id?: InputMaybe<Order_By>;
  known_move_type_id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
  min_affection?: InputMaybe<Order_By>;
  min_beauty?: InputMaybe<Order_By>;
  min_happiness?: InputMaybe<Order_By>;
  min_level?: InputMaybe<Order_By>;
  party_species_id?: InputMaybe<Order_By>;
  party_type_id?: InputMaybe<Order_By>;
  relative_physical_stats?: InputMaybe<Order_By>;
  trade_species_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Pokemonevolution_Var_Samp_Fields = {
  __typename?: 'pokemonevolution_var_samp_fields';
  evolution_item_id?: Maybe<Scalars['Float']['output']>;
  evolution_trigger_id?: Maybe<Scalars['Float']['output']>;
  evolved_species_id?: Maybe<Scalars['Float']['output']>;
  gender_id?: Maybe<Scalars['Float']['output']>;
  held_item_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  known_move_id?: Maybe<Scalars['Float']['output']>;
  known_move_type_id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
  min_affection?: Maybe<Scalars['Float']['output']>;
  min_beauty?: Maybe<Scalars['Float']['output']>;
  min_happiness?: Maybe<Scalars['Float']['output']>;
  min_level?: Maybe<Scalars['Float']['output']>;
  party_species_id?: Maybe<Scalars['Float']['output']>;
  party_type_id?: Maybe<Scalars['Float']['output']>;
  relative_physical_stats?: Maybe<Scalars['Float']['output']>;
  trade_species_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_pokemonevolution" */
export type Pokemonevolution_Var_Samp_Order_By = {
  evolution_item_id?: InputMaybe<Order_By>;
  evolution_trigger_id?: InputMaybe<Order_By>;
  evolved_species_id?: InputMaybe<Order_By>;
  gender_id?: InputMaybe<Order_By>;
  held_item_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  known_move_id?: InputMaybe<Order_By>;
  known_move_type_id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
  min_affection?: InputMaybe<Order_By>;
  min_beauty?: InputMaybe<Order_By>;
  min_happiness?: InputMaybe<Order_By>;
  min_level?: InputMaybe<Order_By>;
  party_species_id?: InputMaybe<Order_By>;
  party_type_id?: InputMaybe<Order_By>;
  relative_physical_stats?: InputMaybe<Order_By>;
  trade_species_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Pokemonevolution_Variance_Fields = {
  __typename?: 'pokemonevolution_variance_fields';
  evolution_item_id?: Maybe<Scalars['Float']['output']>;
  evolution_trigger_id?: Maybe<Scalars['Float']['output']>;
  evolved_species_id?: Maybe<Scalars['Float']['output']>;
  gender_id?: Maybe<Scalars['Float']['output']>;
  held_item_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  known_move_id?: Maybe<Scalars['Float']['output']>;
  known_move_type_id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
  min_affection?: Maybe<Scalars['Float']['output']>;
  min_beauty?: Maybe<Scalars['Float']['output']>;
  min_happiness?: Maybe<Scalars['Float']['output']>;
  min_level?: Maybe<Scalars['Float']['output']>;
  party_species_id?: Maybe<Scalars['Float']['output']>;
  party_type_id?: Maybe<Scalars['Float']['output']>;
  relative_physical_stats?: Maybe<Scalars['Float']['output']>;
  trade_species_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_pokemonevolution" */
export type Pokemonevolution_Variance_Order_By = {
  evolution_item_id?: InputMaybe<Order_By>;
  evolution_trigger_id?: InputMaybe<Order_By>;
  evolved_species_id?: InputMaybe<Order_By>;
  gender_id?: InputMaybe<Order_By>;
  held_item_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  known_move_id?: InputMaybe<Order_By>;
  known_move_type_id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
  min_affection?: InputMaybe<Order_By>;
  min_beauty?: InputMaybe<Order_By>;
  min_happiness?: InputMaybe<Order_By>;
  min_level?: InputMaybe<Order_By>;
  party_species_id?: InputMaybe<Order_By>;
  party_type_id?: InputMaybe<Order_By>;
  relative_physical_stats?: InputMaybe<Order_By>;
  trade_species_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_pokemonform" */
export type Pokemonform = {
  __typename?: 'pokemonform';
  form_name: Scalars['String']['output'];
  form_order?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  is_battle_only: Scalars['Boolean']['output'];
  is_default: Scalars['Boolean']['output'];
  is_mega: Scalars['Boolean']['output'];
  name: Scalars['String']['output'];
  order?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  pokemon?: Maybe<Pokemon>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  /** An array relationship */
  pokemonformgenerations: Array<Pokemonformgeneration>;
  /** An aggregate relationship */
  pokemonformgenerations_aggregate: Pokemonformgeneration_Aggregate;
  /** An array relationship */
  pokemonformnames: Array<Pokemonformname>;
  /** An aggregate relationship */
  pokemonformnames_aggregate: Pokemonformname_Aggregate;
  /** An array relationship */
  pokemonformsprites: Array<Pokemonformsprites>;
  /** An aggregate relationship */
  pokemonformsprites_aggregate: Pokemonformsprites_Aggregate;
  /** An array relationship */
  pokemonformtypes: Array<Pokemonformtype>;
  /** An aggregate relationship */
  pokemonformtypes_aggregate: Pokemonformtype_Aggregate;
  version_group_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  versiongroup?: Maybe<Versiongroup>;
};


/** columns and relationships of "pokemon_v2_pokemonform" */
export type PokemonformPokemonformgenerationsArgs = {
  distinct_on?: InputMaybe<Array<Pokemonformgeneration_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonformgeneration_Order_By>>;
  where?: InputMaybe<Pokemonformgeneration_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemonform" */
export type PokemonformPokemonformgenerations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonformgeneration_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonformgeneration_Order_By>>;
  where?: InputMaybe<Pokemonformgeneration_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemonform" */
export type PokemonformPokemonformnamesArgs = {
  distinct_on?: InputMaybe<Array<Pokemonformname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonformname_Order_By>>;
  where?: InputMaybe<Pokemonformname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemonform" */
export type PokemonformPokemonformnames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonformname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonformname_Order_By>>;
  where?: InputMaybe<Pokemonformname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemonform" */
export type PokemonformPokemonformspritesArgs = {
  distinct_on?: InputMaybe<Array<Pokemonformsprites_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonformsprites_Order_By>>;
  where?: InputMaybe<Pokemonformsprites_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemonform" */
export type PokemonformPokemonformsprites_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonformsprites_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonformsprites_Order_By>>;
  where?: InputMaybe<Pokemonformsprites_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemonform" */
export type PokemonformPokemonformtypesArgs = {
  distinct_on?: InputMaybe<Array<Pokemonformtype_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonformtype_Order_By>>;
  where?: InputMaybe<Pokemonformtype_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemonform" */
export type PokemonformPokemonformtypes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonformtype_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonformtype_Order_By>>;
  where?: InputMaybe<Pokemonformtype_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_pokemonform" */
export type Pokemonform_Aggregate = {
  __typename?: 'pokemonform_aggregate';
  aggregate?: Maybe<Pokemonform_Aggregate_Fields>;
  nodes: Array<Pokemonform>;
};

export type Pokemonform_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Pokemonform_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Pokemonform_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Pokemonform_Aggregate_Bool_Exp_Count>;
};

export type Pokemonform_Aggregate_Bool_Exp_Bool_And = {
  arguments: Pokemonform_Select_Column_Pokemonform_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Pokemonform_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Pokemonform_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Pokemonform_Select_Column_Pokemonform_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Pokemonform_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Pokemonform_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Pokemonform_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Pokemonform_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_pokemonform" */
export type Pokemonform_Aggregate_Fields = {
  __typename?: 'pokemonform_aggregate_fields';
  avg?: Maybe<Pokemonform_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemonform_Max_Fields>;
  min?: Maybe<Pokemonform_Min_Fields>;
  stddev?: Maybe<Pokemonform_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemonform_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemonform_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemonform_Sum_Fields>;
  var_pop?: Maybe<Pokemonform_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemonform_Var_Samp_Fields>;
  variance?: Maybe<Pokemonform_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemonform" */
export type Pokemonform_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemonform_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_pokemonform" */
export type Pokemonform_Aggregate_Order_By = {
  avg?: InputMaybe<Pokemonform_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Pokemonform_Max_Order_By>;
  min?: InputMaybe<Pokemonform_Min_Order_By>;
  stddev?: InputMaybe<Pokemonform_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Pokemonform_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Pokemonform_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Pokemonform_Sum_Order_By>;
  var_pop?: InputMaybe<Pokemonform_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Pokemonform_Var_Samp_Order_By>;
  variance?: InputMaybe<Pokemonform_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Pokemonform_Avg_Fields = {
  __typename?: 'pokemonform_avg_fields';
  form_order?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_pokemonform" */
export type Pokemonform_Avg_Order_By = {
  form_order?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemonform". All fields are combined with a logical 'AND'. */
export type Pokemonform_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemonform_Bool_Exp>>;
  _not?: InputMaybe<Pokemonform_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemonform_Bool_Exp>>;
  form_name?: InputMaybe<String_Comparison_Exp>;
  form_order?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  is_battle_only?: InputMaybe<Boolean_Comparison_Exp>;
  is_default?: InputMaybe<Boolean_Comparison_Exp>;
  is_mega?: InputMaybe<Boolean_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  order?: InputMaybe<Int_Comparison_Exp>;
  pokemon?: InputMaybe<Pokemon_Bool_Exp>;
  pokemon_id?: InputMaybe<Int_Comparison_Exp>;
  pokemonformgenerations?: InputMaybe<Pokemonformgeneration_Bool_Exp>;
  pokemonformgenerations_aggregate?: InputMaybe<Pokemonformgeneration_Aggregate_Bool_Exp>;
  pokemonformnames?: InputMaybe<Pokemonformname_Bool_Exp>;
  pokemonformnames_aggregate?: InputMaybe<Pokemonformname_Aggregate_Bool_Exp>;
  pokemonformsprites?: InputMaybe<Pokemonformsprites_Bool_Exp>;
  pokemonformsprites_aggregate?: InputMaybe<Pokemonformsprites_Aggregate_Bool_Exp>;
  pokemonformtypes?: InputMaybe<Pokemonformtype_Bool_Exp>;
  pokemonformtypes_aggregate?: InputMaybe<Pokemonformtype_Aggregate_Bool_Exp>;
  version_group_id?: InputMaybe<Int_Comparison_Exp>;
  versiongroup?: InputMaybe<Versiongroup_Bool_Exp>;
};

/** aggregate max on columns */
export type Pokemonform_Max_Fields = {
  __typename?: 'pokemonform_max_fields';
  form_name?: Maybe<Scalars['String']['output']>;
  form_order?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_pokemonform" */
export type Pokemonform_Max_Order_By = {
  form_name?: InputMaybe<Order_By>;
  form_order?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Pokemonform_Min_Fields = {
  __typename?: 'pokemonform_min_fields';
  form_name?: Maybe<Scalars['String']['output']>;
  form_order?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_pokemonform" */
export type Pokemonform_Min_Order_By = {
  form_name?: InputMaybe<Order_By>;
  form_order?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemonform". */
export type Pokemonform_Order_By = {
  form_name?: InputMaybe<Order_By>;
  form_order?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  is_battle_only?: InputMaybe<Order_By>;
  is_default?: InputMaybe<Order_By>;
  is_mega?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  pokemon?: InputMaybe<Pokemon_Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  pokemonformgenerations_aggregate?: InputMaybe<Pokemonformgeneration_Aggregate_Order_By>;
  pokemonformnames_aggregate?: InputMaybe<Pokemonformname_Aggregate_Order_By>;
  pokemonformsprites_aggregate?: InputMaybe<Pokemonformsprites_Aggregate_Order_By>;
  pokemonformtypes_aggregate?: InputMaybe<Pokemonformtype_Aggregate_Order_By>;
  version_group_id?: InputMaybe<Order_By>;
  versiongroup?: InputMaybe<Versiongroup_Order_By>;
};

/** select columns of table "pokemon_v2_pokemonform" */
export enum Pokemonform_Select_Column {
  /** column name */
  FormName = 'form_name',
  /** column name */
  FormOrder = 'form_order',
  /** column name */
  Id = 'id',
  /** column name */
  IsBattleOnly = 'is_battle_only',
  /** column name */
  IsDefault = 'is_default',
  /** column name */
  IsMega = 'is_mega',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  PokemonId = 'pokemon_id',
  /** column name */
  VersionGroupId = 'version_group_id'
}

/** select "pokemonform_aggregate_bool_exp_bool_and_arguments_columns" columns of table "pokemon_v2_pokemonform" */
export enum Pokemonform_Select_Column_Pokemonform_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  IsBattleOnly = 'is_battle_only',
  /** column name */
  IsDefault = 'is_default',
  /** column name */
  IsMega = 'is_mega'
}

/** select "pokemonform_aggregate_bool_exp_bool_or_arguments_columns" columns of table "pokemon_v2_pokemonform" */
export enum Pokemonform_Select_Column_Pokemonform_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  IsBattleOnly = 'is_battle_only',
  /** column name */
  IsDefault = 'is_default',
  /** column name */
  IsMega = 'is_mega'
}

/** aggregate stddev on columns */
export type Pokemonform_Stddev_Fields = {
  __typename?: 'pokemonform_stddev_fields';
  form_order?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_pokemonform" */
export type Pokemonform_Stddev_Order_By = {
  form_order?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Pokemonform_Stddev_Pop_Fields = {
  __typename?: 'pokemonform_stddev_pop_fields';
  form_order?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_pokemonform" */
export type Pokemonform_Stddev_Pop_Order_By = {
  form_order?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Pokemonform_Stddev_Samp_Fields = {
  __typename?: 'pokemonform_stddev_samp_fields';
  form_order?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_pokemonform" */
export type Pokemonform_Stddev_Samp_Order_By = {
  form_order?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Pokemonform_Sum_Fields = {
  __typename?: 'pokemonform_sum_fields';
  form_order?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_pokemonform" */
export type Pokemonform_Sum_Order_By = {
  form_order?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Pokemonform_Var_Pop_Fields = {
  __typename?: 'pokemonform_var_pop_fields';
  form_order?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_pokemonform" */
export type Pokemonform_Var_Pop_Order_By = {
  form_order?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Pokemonform_Var_Samp_Fields = {
  __typename?: 'pokemonform_var_samp_fields';
  form_order?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_pokemonform" */
export type Pokemonform_Var_Samp_Order_By = {
  form_order?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Pokemonform_Variance_Fields = {
  __typename?: 'pokemonform_variance_fields';
  form_order?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_pokemonform" */
export type Pokemonform_Variance_Order_By = {
  form_order?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_pokemonformgeneration" */
export type Pokemonformgeneration = {
  __typename?: 'pokemonformgeneration';
  game_index: Scalars['Int']['output'];
  /** An object relationship */
  generation?: Maybe<Generation>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  pokemon_form_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  pokemonform?: Maybe<Pokemonform>;
};

/** aggregated selection of "pokemon_v2_pokemonformgeneration" */
export type Pokemonformgeneration_Aggregate = {
  __typename?: 'pokemonformgeneration_aggregate';
  aggregate?: Maybe<Pokemonformgeneration_Aggregate_Fields>;
  nodes: Array<Pokemonformgeneration>;
};

export type Pokemonformgeneration_Aggregate_Bool_Exp = {
  count?: InputMaybe<Pokemonformgeneration_Aggregate_Bool_Exp_Count>;
};

export type Pokemonformgeneration_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Pokemonformgeneration_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Pokemonformgeneration_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_pokemonformgeneration" */
export type Pokemonformgeneration_Aggregate_Fields = {
  __typename?: 'pokemonformgeneration_aggregate_fields';
  avg?: Maybe<Pokemonformgeneration_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemonformgeneration_Max_Fields>;
  min?: Maybe<Pokemonformgeneration_Min_Fields>;
  stddev?: Maybe<Pokemonformgeneration_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemonformgeneration_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemonformgeneration_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemonformgeneration_Sum_Fields>;
  var_pop?: Maybe<Pokemonformgeneration_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemonformgeneration_Var_Samp_Fields>;
  variance?: Maybe<Pokemonformgeneration_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemonformgeneration" */
export type Pokemonformgeneration_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemonformgeneration_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_pokemonformgeneration" */
export type Pokemonformgeneration_Aggregate_Order_By = {
  avg?: InputMaybe<Pokemonformgeneration_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Pokemonformgeneration_Max_Order_By>;
  min?: InputMaybe<Pokemonformgeneration_Min_Order_By>;
  stddev?: InputMaybe<Pokemonformgeneration_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Pokemonformgeneration_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Pokemonformgeneration_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Pokemonformgeneration_Sum_Order_By>;
  var_pop?: InputMaybe<Pokemonformgeneration_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Pokemonformgeneration_Var_Samp_Order_By>;
  variance?: InputMaybe<Pokemonformgeneration_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Pokemonformgeneration_Avg_Fields = {
  __typename?: 'pokemonformgeneration_avg_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_pokemonformgeneration" */
export type Pokemonformgeneration_Avg_Order_By = {
  game_index?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_form_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemonformgeneration". All fields are combined with a logical 'AND'. */
export type Pokemonformgeneration_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemonformgeneration_Bool_Exp>>;
  _not?: InputMaybe<Pokemonformgeneration_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemonformgeneration_Bool_Exp>>;
  game_index?: InputMaybe<Int_Comparison_Exp>;
  generation?: InputMaybe<Generation_Bool_Exp>;
  generation_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  pokemon_form_id?: InputMaybe<Int_Comparison_Exp>;
  pokemonform?: InputMaybe<Pokemonform_Bool_Exp>;
};

/** aggregate max on columns */
export type Pokemonformgeneration_Max_Fields = {
  __typename?: 'pokemonformgeneration_max_fields';
  game_index?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_form_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_pokemonformgeneration" */
export type Pokemonformgeneration_Max_Order_By = {
  game_index?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_form_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Pokemonformgeneration_Min_Fields = {
  __typename?: 'pokemonformgeneration_min_fields';
  game_index?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_form_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_pokemonformgeneration" */
export type Pokemonformgeneration_Min_Order_By = {
  game_index?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_form_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemonformgeneration". */
export type Pokemonformgeneration_Order_By = {
  game_index?: InputMaybe<Order_By>;
  generation?: InputMaybe<Generation_Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_form_id?: InputMaybe<Order_By>;
  pokemonform?: InputMaybe<Pokemonform_Order_By>;
};

/** select columns of table "pokemon_v2_pokemonformgeneration" */
export enum Pokemonformgeneration_Select_Column {
  /** column name */
  GameIndex = 'game_index',
  /** column name */
  GenerationId = 'generation_id',
  /** column name */
  Id = 'id',
  /** column name */
  PokemonFormId = 'pokemon_form_id'
}

/** aggregate stddev on columns */
export type Pokemonformgeneration_Stddev_Fields = {
  __typename?: 'pokemonformgeneration_stddev_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_pokemonformgeneration" */
export type Pokemonformgeneration_Stddev_Order_By = {
  game_index?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_form_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Pokemonformgeneration_Stddev_Pop_Fields = {
  __typename?: 'pokemonformgeneration_stddev_pop_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_pokemonformgeneration" */
export type Pokemonformgeneration_Stddev_Pop_Order_By = {
  game_index?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_form_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Pokemonformgeneration_Stddev_Samp_Fields = {
  __typename?: 'pokemonformgeneration_stddev_samp_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_pokemonformgeneration" */
export type Pokemonformgeneration_Stddev_Samp_Order_By = {
  game_index?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_form_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Pokemonformgeneration_Sum_Fields = {
  __typename?: 'pokemonformgeneration_sum_fields';
  game_index?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_form_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_pokemonformgeneration" */
export type Pokemonformgeneration_Sum_Order_By = {
  game_index?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_form_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Pokemonformgeneration_Var_Pop_Fields = {
  __typename?: 'pokemonformgeneration_var_pop_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_pokemonformgeneration" */
export type Pokemonformgeneration_Var_Pop_Order_By = {
  game_index?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_form_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Pokemonformgeneration_Var_Samp_Fields = {
  __typename?: 'pokemonformgeneration_var_samp_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_pokemonformgeneration" */
export type Pokemonformgeneration_Var_Samp_Order_By = {
  game_index?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_form_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Pokemonformgeneration_Variance_Fields = {
  __typename?: 'pokemonformgeneration_variance_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_pokemonformgeneration" */
export type Pokemonformgeneration_Variance_Order_By = {
  game_index?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_form_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_pokemonformname" */
export type Pokemonformname = {
  __typename?: 'pokemonformname';
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
  pokemon_form_id?: Maybe<Scalars['Int']['output']>;
  pokemon_name: Scalars['String']['output'];
  /** An object relationship */
  pokemonform?: Maybe<Pokemonform>;
};

/** aggregated selection of "pokemon_v2_pokemonformname" */
export type Pokemonformname_Aggregate = {
  __typename?: 'pokemonformname_aggregate';
  aggregate?: Maybe<Pokemonformname_Aggregate_Fields>;
  nodes: Array<Pokemonformname>;
};

export type Pokemonformname_Aggregate_Bool_Exp = {
  count?: InputMaybe<Pokemonformname_Aggregate_Bool_Exp_Count>;
};

export type Pokemonformname_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Pokemonformname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Pokemonformname_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_pokemonformname" */
export type Pokemonformname_Aggregate_Fields = {
  __typename?: 'pokemonformname_aggregate_fields';
  avg?: Maybe<Pokemonformname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemonformname_Max_Fields>;
  min?: Maybe<Pokemonformname_Min_Fields>;
  stddev?: Maybe<Pokemonformname_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemonformname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemonformname_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemonformname_Sum_Fields>;
  var_pop?: Maybe<Pokemonformname_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemonformname_Var_Samp_Fields>;
  variance?: Maybe<Pokemonformname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemonformname" */
export type Pokemonformname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemonformname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_pokemonformname" */
export type Pokemonformname_Aggregate_Order_By = {
  avg?: InputMaybe<Pokemonformname_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Pokemonformname_Max_Order_By>;
  min?: InputMaybe<Pokemonformname_Min_Order_By>;
  stddev?: InputMaybe<Pokemonformname_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Pokemonformname_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Pokemonformname_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Pokemonformname_Sum_Order_By>;
  var_pop?: InputMaybe<Pokemonformname_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Pokemonformname_Var_Samp_Order_By>;
  variance?: InputMaybe<Pokemonformname_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Pokemonformname_Avg_Fields = {
  __typename?: 'pokemonformname_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_pokemonformname" */
export type Pokemonformname_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_form_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemonformname". All fields are combined with a logical 'AND'. */
export type Pokemonformname_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemonformname_Bool_Exp>>;
  _not?: InputMaybe<Pokemonformname_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemonformname_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  pokemon_form_id?: InputMaybe<Int_Comparison_Exp>;
  pokemon_name?: InputMaybe<String_Comparison_Exp>;
  pokemonform?: InputMaybe<Pokemonform_Bool_Exp>;
};

/** aggregate max on columns */
export type Pokemonformname_Max_Fields = {
  __typename?: 'pokemonformname_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  pokemon_form_id?: Maybe<Scalars['Int']['output']>;
  pokemon_name?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "pokemon_v2_pokemonformname" */
export type Pokemonformname_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  pokemon_form_id?: InputMaybe<Order_By>;
  pokemon_name?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Pokemonformname_Min_Fields = {
  __typename?: 'pokemonformname_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  pokemon_form_id?: Maybe<Scalars['Int']['output']>;
  pokemon_name?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "pokemon_v2_pokemonformname" */
export type Pokemonformname_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  pokemon_form_id?: InputMaybe<Order_By>;
  pokemon_name?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemonformname". */
export type Pokemonformname_Order_By = {
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  pokemon_form_id?: InputMaybe<Order_By>;
  pokemon_name?: InputMaybe<Order_By>;
  pokemonform?: InputMaybe<Pokemonform_Order_By>;
};

/** select columns of table "pokemon_v2_pokemonformname" */
export enum Pokemonformname_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name',
  /** column name */
  PokemonFormId = 'pokemon_form_id',
  /** column name */
  PokemonName = 'pokemon_name'
}

/** aggregate stddev on columns */
export type Pokemonformname_Stddev_Fields = {
  __typename?: 'pokemonformname_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_pokemonformname" */
export type Pokemonformname_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_form_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Pokemonformname_Stddev_Pop_Fields = {
  __typename?: 'pokemonformname_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_pokemonformname" */
export type Pokemonformname_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_form_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Pokemonformname_Stddev_Samp_Fields = {
  __typename?: 'pokemonformname_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_pokemonformname" */
export type Pokemonformname_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_form_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Pokemonformname_Sum_Fields = {
  __typename?: 'pokemonformname_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  pokemon_form_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_pokemonformname" */
export type Pokemonformname_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_form_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Pokemonformname_Var_Pop_Fields = {
  __typename?: 'pokemonformname_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_pokemonformname" */
export type Pokemonformname_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_form_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Pokemonformname_Var_Samp_Fields = {
  __typename?: 'pokemonformname_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_pokemonformname" */
export type Pokemonformname_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_form_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Pokemonformname_Variance_Fields = {
  __typename?: 'pokemonformname_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_pokemonformname" */
export type Pokemonformname_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_form_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_pokemonformsprites" */
export type Pokemonformsprites = {
  __typename?: 'pokemonformsprites';
  id: Scalars['Int']['output'];
  pokemon_form_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  pokemonform?: Maybe<Pokemonform>;
  sprites: Scalars['jsonb']['output'];
};


/** columns and relationships of "pokemon_v2_pokemonformsprites" */
export type PokemonformspritesSpritesArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "pokemon_v2_pokemonformsprites" */
export type Pokemonformsprites_Aggregate = {
  __typename?: 'pokemonformsprites_aggregate';
  aggregate?: Maybe<Pokemonformsprites_Aggregate_Fields>;
  nodes: Array<Pokemonformsprites>;
};

export type Pokemonformsprites_Aggregate_Bool_Exp = {
  count?: InputMaybe<Pokemonformsprites_Aggregate_Bool_Exp_Count>;
};

export type Pokemonformsprites_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Pokemonformsprites_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Pokemonformsprites_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_pokemonformsprites" */
export type Pokemonformsprites_Aggregate_Fields = {
  __typename?: 'pokemonformsprites_aggregate_fields';
  avg?: Maybe<Pokemonformsprites_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemonformsprites_Max_Fields>;
  min?: Maybe<Pokemonformsprites_Min_Fields>;
  stddev?: Maybe<Pokemonformsprites_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemonformsprites_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemonformsprites_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemonformsprites_Sum_Fields>;
  var_pop?: Maybe<Pokemonformsprites_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemonformsprites_Var_Samp_Fields>;
  variance?: Maybe<Pokemonformsprites_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemonformsprites" */
export type Pokemonformsprites_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemonformsprites_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_pokemonformsprites" */
export type Pokemonformsprites_Aggregate_Order_By = {
  avg?: InputMaybe<Pokemonformsprites_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Pokemonformsprites_Max_Order_By>;
  min?: InputMaybe<Pokemonformsprites_Min_Order_By>;
  stddev?: InputMaybe<Pokemonformsprites_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Pokemonformsprites_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Pokemonformsprites_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Pokemonformsprites_Sum_Order_By>;
  var_pop?: InputMaybe<Pokemonformsprites_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Pokemonformsprites_Var_Samp_Order_By>;
  variance?: InputMaybe<Pokemonformsprites_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Pokemonformsprites_Avg_Fields = {
  __typename?: 'pokemonformsprites_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_pokemonformsprites" */
export type Pokemonformsprites_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_form_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemonformsprites". All fields are combined with a logical 'AND'. */
export type Pokemonformsprites_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemonformsprites_Bool_Exp>>;
  _not?: InputMaybe<Pokemonformsprites_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemonformsprites_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  pokemon_form_id?: InputMaybe<Int_Comparison_Exp>;
  pokemonform?: InputMaybe<Pokemonform_Bool_Exp>;
  sprites?: InputMaybe<Jsonb_Comparison_Exp>;
};

/** aggregate max on columns */
export type Pokemonformsprites_Max_Fields = {
  __typename?: 'pokemonformsprites_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_form_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_pokemonformsprites" */
export type Pokemonformsprites_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_form_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Pokemonformsprites_Min_Fields = {
  __typename?: 'pokemonformsprites_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_form_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_pokemonformsprites" */
export type Pokemonformsprites_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_form_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemonformsprites". */
export type Pokemonformsprites_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_form_id?: InputMaybe<Order_By>;
  pokemonform?: InputMaybe<Pokemonform_Order_By>;
  sprites?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_pokemonformsprites" */
export enum Pokemonformsprites_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  PokemonFormId = 'pokemon_form_id',
  /** column name */
  Sprites = 'sprites'
}

/** aggregate stddev on columns */
export type Pokemonformsprites_Stddev_Fields = {
  __typename?: 'pokemonformsprites_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_pokemonformsprites" */
export type Pokemonformsprites_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_form_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Pokemonformsprites_Stddev_Pop_Fields = {
  __typename?: 'pokemonformsprites_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_pokemonformsprites" */
export type Pokemonformsprites_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_form_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Pokemonformsprites_Stddev_Samp_Fields = {
  __typename?: 'pokemonformsprites_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_pokemonformsprites" */
export type Pokemonformsprites_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_form_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Pokemonformsprites_Sum_Fields = {
  __typename?: 'pokemonformsprites_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_form_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_pokemonformsprites" */
export type Pokemonformsprites_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_form_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Pokemonformsprites_Var_Pop_Fields = {
  __typename?: 'pokemonformsprites_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_pokemonformsprites" */
export type Pokemonformsprites_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_form_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Pokemonformsprites_Var_Samp_Fields = {
  __typename?: 'pokemonformsprites_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_pokemonformsprites" */
export type Pokemonformsprites_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_form_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Pokemonformsprites_Variance_Fields = {
  __typename?: 'pokemonformsprites_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_pokemonformsprites" */
export type Pokemonformsprites_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_form_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_pokemonformtype" */
export type Pokemonformtype = {
  __typename?: 'pokemonformtype';
  id: Scalars['Int']['output'];
  pokemon_form_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  pokemonform?: Maybe<Pokemonform>;
  slot: Scalars['Int']['output'];
  /** An object relationship */
  type?: Maybe<Type>;
  type_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_pokemonformtype" */
export type Pokemonformtype_Aggregate = {
  __typename?: 'pokemonformtype_aggregate';
  aggregate?: Maybe<Pokemonformtype_Aggregate_Fields>;
  nodes: Array<Pokemonformtype>;
};

export type Pokemonformtype_Aggregate_Bool_Exp = {
  count?: InputMaybe<Pokemonformtype_Aggregate_Bool_Exp_Count>;
};

export type Pokemonformtype_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Pokemonformtype_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Pokemonformtype_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_pokemonformtype" */
export type Pokemonformtype_Aggregate_Fields = {
  __typename?: 'pokemonformtype_aggregate_fields';
  avg?: Maybe<Pokemonformtype_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemonformtype_Max_Fields>;
  min?: Maybe<Pokemonformtype_Min_Fields>;
  stddev?: Maybe<Pokemonformtype_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemonformtype_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemonformtype_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemonformtype_Sum_Fields>;
  var_pop?: Maybe<Pokemonformtype_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemonformtype_Var_Samp_Fields>;
  variance?: Maybe<Pokemonformtype_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemonformtype" */
export type Pokemonformtype_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemonformtype_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_pokemonformtype" */
export type Pokemonformtype_Aggregate_Order_By = {
  avg?: InputMaybe<Pokemonformtype_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Pokemonformtype_Max_Order_By>;
  min?: InputMaybe<Pokemonformtype_Min_Order_By>;
  stddev?: InputMaybe<Pokemonformtype_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Pokemonformtype_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Pokemonformtype_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Pokemonformtype_Sum_Order_By>;
  var_pop?: InputMaybe<Pokemonformtype_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Pokemonformtype_Var_Samp_Order_By>;
  variance?: InputMaybe<Pokemonformtype_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Pokemonformtype_Avg_Fields = {
  __typename?: 'pokemonformtype_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_pokemonformtype" */
export type Pokemonformtype_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_form_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemonformtype". All fields are combined with a logical 'AND'. */
export type Pokemonformtype_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemonformtype_Bool_Exp>>;
  _not?: InputMaybe<Pokemonformtype_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemonformtype_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  pokemon_form_id?: InputMaybe<Int_Comparison_Exp>;
  pokemonform?: InputMaybe<Pokemonform_Bool_Exp>;
  slot?: InputMaybe<Int_Comparison_Exp>;
  type?: InputMaybe<Type_Bool_Exp>;
  type_id?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Pokemonformtype_Max_Fields = {
  __typename?: 'pokemonformtype_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_form_id?: Maybe<Scalars['Int']['output']>;
  slot?: Maybe<Scalars['Int']['output']>;
  type_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_pokemonformtype" */
export type Pokemonformtype_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_form_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Pokemonformtype_Min_Fields = {
  __typename?: 'pokemonformtype_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_form_id?: Maybe<Scalars['Int']['output']>;
  slot?: Maybe<Scalars['Int']['output']>;
  type_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_pokemonformtype" */
export type Pokemonformtype_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_form_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemonformtype". */
export type Pokemonformtype_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_form_id?: InputMaybe<Order_By>;
  pokemonform?: InputMaybe<Pokemonform_Order_By>;
  slot?: InputMaybe<Order_By>;
  type?: InputMaybe<Type_Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_pokemonformtype" */
export enum Pokemonformtype_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  PokemonFormId = 'pokemon_form_id',
  /** column name */
  Slot = 'slot',
  /** column name */
  TypeId = 'type_id'
}

/** aggregate stddev on columns */
export type Pokemonformtype_Stddev_Fields = {
  __typename?: 'pokemonformtype_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_pokemonformtype" */
export type Pokemonformtype_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_form_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Pokemonformtype_Stddev_Pop_Fields = {
  __typename?: 'pokemonformtype_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_pokemonformtype" */
export type Pokemonformtype_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_form_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Pokemonformtype_Stddev_Samp_Fields = {
  __typename?: 'pokemonformtype_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_pokemonformtype" */
export type Pokemonformtype_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_form_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Pokemonformtype_Sum_Fields = {
  __typename?: 'pokemonformtype_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_form_id?: Maybe<Scalars['Int']['output']>;
  slot?: Maybe<Scalars['Int']['output']>;
  type_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_pokemonformtype" */
export type Pokemonformtype_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_form_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Pokemonformtype_Var_Pop_Fields = {
  __typename?: 'pokemonformtype_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_pokemonformtype" */
export type Pokemonformtype_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_form_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Pokemonformtype_Var_Samp_Fields = {
  __typename?: 'pokemonformtype_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_pokemonformtype" */
export type Pokemonformtype_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_form_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Pokemonformtype_Variance_Fields = {
  __typename?: 'pokemonformtype_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_form_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_pokemonformtype" */
export type Pokemonformtype_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_form_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_pokemongameindex" */
export type Pokemongameindex = {
  __typename?: 'pokemongameindex';
  game_index: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  /** An object relationship */
  pokemon?: Maybe<Pokemon>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  version?: Maybe<Version>;
  version_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_pokemongameindex" */
export type Pokemongameindex_Aggregate = {
  __typename?: 'pokemongameindex_aggregate';
  aggregate?: Maybe<Pokemongameindex_Aggregate_Fields>;
  nodes: Array<Pokemongameindex>;
};

export type Pokemongameindex_Aggregate_Bool_Exp = {
  count?: InputMaybe<Pokemongameindex_Aggregate_Bool_Exp_Count>;
};

export type Pokemongameindex_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Pokemongameindex_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Pokemongameindex_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_pokemongameindex" */
export type Pokemongameindex_Aggregate_Fields = {
  __typename?: 'pokemongameindex_aggregate_fields';
  avg?: Maybe<Pokemongameindex_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemongameindex_Max_Fields>;
  min?: Maybe<Pokemongameindex_Min_Fields>;
  stddev?: Maybe<Pokemongameindex_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemongameindex_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemongameindex_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemongameindex_Sum_Fields>;
  var_pop?: Maybe<Pokemongameindex_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemongameindex_Var_Samp_Fields>;
  variance?: Maybe<Pokemongameindex_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemongameindex" */
export type Pokemongameindex_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemongameindex_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_pokemongameindex" */
export type Pokemongameindex_Aggregate_Order_By = {
  avg?: InputMaybe<Pokemongameindex_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Pokemongameindex_Max_Order_By>;
  min?: InputMaybe<Pokemongameindex_Min_Order_By>;
  stddev?: InputMaybe<Pokemongameindex_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Pokemongameindex_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Pokemongameindex_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Pokemongameindex_Sum_Order_By>;
  var_pop?: InputMaybe<Pokemongameindex_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Pokemongameindex_Var_Samp_Order_By>;
  variance?: InputMaybe<Pokemongameindex_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Pokemongameindex_Avg_Fields = {
  __typename?: 'pokemongameindex_avg_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_pokemongameindex" */
export type Pokemongameindex_Avg_Order_By = {
  game_index?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemongameindex". All fields are combined with a logical 'AND'. */
export type Pokemongameindex_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemongameindex_Bool_Exp>>;
  _not?: InputMaybe<Pokemongameindex_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemongameindex_Bool_Exp>>;
  game_index?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  pokemon?: InputMaybe<Pokemon_Bool_Exp>;
  pokemon_id?: InputMaybe<Int_Comparison_Exp>;
  version?: InputMaybe<Version_Bool_Exp>;
  version_id?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Pokemongameindex_Max_Fields = {
  __typename?: 'pokemongameindex_max_fields';
  game_index?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  version_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_pokemongameindex" */
export type Pokemongameindex_Max_Order_By = {
  game_index?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Pokemongameindex_Min_Fields = {
  __typename?: 'pokemongameindex_min_fields';
  game_index?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  version_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_pokemongameindex" */
export type Pokemongameindex_Min_Order_By = {
  game_index?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemongameindex". */
export type Pokemongameindex_Order_By = {
  game_index?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon?: InputMaybe<Pokemon_Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  version?: InputMaybe<Version_Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_pokemongameindex" */
export enum Pokemongameindex_Select_Column {
  /** column name */
  GameIndex = 'game_index',
  /** column name */
  Id = 'id',
  /** column name */
  PokemonId = 'pokemon_id',
  /** column name */
  VersionId = 'version_id'
}

/** aggregate stddev on columns */
export type Pokemongameindex_Stddev_Fields = {
  __typename?: 'pokemongameindex_stddev_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_pokemongameindex" */
export type Pokemongameindex_Stddev_Order_By = {
  game_index?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Pokemongameindex_Stddev_Pop_Fields = {
  __typename?: 'pokemongameindex_stddev_pop_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_pokemongameindex" */
export type Pokemongameindex_Stddev_Pop_Order_By = {
  game_index?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Pokemongameindex_Stddev_Samp_Fields = {
  __typename?: 'pokemongameindex_stddev_samp_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_pokemongameindex" */
export type Pokemongameindex_Stddev_Samp_Order_By = {
  game_index?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Pokemongameindex_Sum_Fields = {
  __typename?: 'pokemongameindex_sum_fields';
  game_index?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  version_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_pokemongameindex" */
export type Pokemongameindex_Sum_Order_By = {
  game_index?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Pokemongameindex_Var_Pop_Fields = {
  __typename?: 'pokemongameindex_var_pop_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_pokemongameindex" */
export type Pokemongameindex_Var_Pop_Order_By = {
  game_index?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Pokemongameindex_Var_Samp_Fields = {
  __typename?: 'pokemongameindex_var_samp_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_pokemongameindex" */
export type Pokemongameindex_Var_Samp_Order_By = {
  game_index?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Pokemongameindex_Variance_Fields = {
  __typename?: 'pokemongameindex_variance_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_pokemongameindex" */
export type Pokemongameindex_Variance_Order_By = {
  game_index?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_pokemonhabitat" */
export type Pokemonhabitat = {
  __typename?: 'pokemonhabitat';
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  /** An array relationship */
  pokemonhabitatnames: Array<Pokemonhabitatname>;
  /** An aggregate relationship */
  pokemonhabitatnames_aggregate: Pokemonhabitatname_Aggregate;
  /** An array relationship */
  pokemonspecies: Array<Pokemonspecies>;
  /** An aggregate relationship */
  pokemonspecies_aggregate: Pokemonspecies_Aggregate;
};


/** columns and relationships of "pokemon_v2_pokemonhabitat" */
export type PokemonhabitatPokemonhabitatnamesArgs = {
  distinct_on?: InputMaybe<Array<Pokemonhabitatname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonhabitatname_Order_By>>;
  where?: InputMaybe<Pokemonhabitatname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemonhabitat" */
export type PokemonhabitatPokemonhabitatnames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonhabitatname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonhabitatname_Order_By>>;
  where?: InputMaybe<Pokemonhabitatname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemonhabitat" */
export type PokemonhabitatPokemonspeciesArgs = {
  distinct_on?: InputMaybe<Array<Pokemonspecies_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonspecies_Order_By>>;
  where?: InputMaybe<Pokemonspecies_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemonhabitat" */
export type PokemonhabitatPokemonspecies_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonspecies_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonspecies_Order_By>>;
  where?: InputMaybe<Pokemonspecies_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_pokemonhabitat" */
export type Pokemonhabitat_Aggregate = {
  __typename?: 'pokemonhabitat_aggregate';
  aggregate?: Maybe<Pokemonhabitat_Aggregate_Fields>;
  nodes: Array<Pokemonhabitat>;
};

/** aggregate fields of "pokemon_v2_pokemonhabitat" */
export type Pokemonhabitat_Aggregate_Fields = {
  __typename?: 'pokemonhabitat_aggregate_fields';
  avg?: Maybe<Pokemonhabitat_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemonhabitat_Max_Fields>;
  min?: Maybe<Pokemonhabitat_Min_Fields>;
  stddev?: Maybe<Pokemonhabitat_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemonhabitat_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemonhabitat_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemonhabitat_Sum_Fields>;
  var_pop?: Maybe<Pokemonhabitat_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemonhabitat_Var_Samp_Fields>;
  variance?: Maybe<Pokemonhabitat_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemonhabitat" */
export type Pokemonhabitat_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemonhabitat_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemonhabitat_Avg_Fields = {
  __typename?: 'pokemonhabitat_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemonhabitat". All fields are combined with a logical 'AND'. */
export type Pokemonhabitat_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemonhabitat_Bool_Exp>>;
  _not?: InputMaybe<Pokemonhabitat_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemonhabitat_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  pokemonhabitatnames?: InputMaybe<Pokemonhabitatname_Bool_Exp>;
  pokemonhabitatnames_aggregate?: InputMaybe<Pokemonhabitatname_Aggregate_Bool_Exp>;
  pokemonspecies?: InputMaybe<Pokemonspecies_Bool_Exp>;
  pokemonspecies_aggregate?: InputMaybe<Pokemonspecies_Aggregate_Bool_Exp>;
};

/** aggregate max on columns */
export type Pokemonhabitat_Max_Fields = {
  __typename?: 'pokemonhabitat_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemonhabitat_Min_Fields = {
  __typename?: 'pokemonhabitat_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemonhabitat". */
export type Pokemonhabitat_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  pokemonhabitatnames_aggregate?: InputMaybe<Pokemonhabitatname_Aggregate_Order_By>;
  pokemonspecies_aggregate?: InputMaybe<Pokemonspecies_Aggregate_Order_By>;
};

/** select columns of table "pokemon_v2_pokemonhabitat" */
export enum Pokemonhabitat_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Pokemonhabitat_Stddev_Fields = {
  __typename?: 'pokemonhabitat_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemonhabitat_Stddev_Pop_Fields = {
  __typename?: 'pokemonhabitat_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemonhabitat_Stddev_Samp_Fields = {
  __typename?: 'pokemonhabitat_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate sum on columns */
export type Pokemonhabitat_Sum_Fields = {
  __typename?: 'pokemonhabitat_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate var_pop on columns */
export type Pokemonhabitat_Var_Pop_Fields = {
  __typename?: 'pokemonhabitat_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemonhabitat_Var_Samp_Fields = {
  __typename?: 'pokemonhabitat_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemonhabitat_Variance_Fields = {
  __typename?: 'pokemonhabitat_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_pokemonhabitatname" */
export type Pokemonhabitatname = {
  __typename?: 'pokemonhabitatname';
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
  pokemon_habitat_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  pokemonhabitat?: Maybe<Pokemonhabitat>;
};

/** aggregated selection of "pokemon_v2_pokemonhabitatname" */
export type Pokemonhabitatname_Aggregate = {
  __typename?: 'pokemonhabitatname_aggregate';
  aggregate?: Maybe<Pokemonhabitatname_Aggregate_Fields>;
  nodes: Array<Pokemonhabitatname>;
};

export type Pokemonhabitatname_Aggregate_Bool_Exp = {
  count?: InputMaybe<Pokemonhabitatname_Aggregate_Bool_Exp_Count>;
};

export type Pokemonhabitatname_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Pokemonhabitatname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Pokemonhabitatname_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_pokemonhabitatname" */
export type Pokemonhabitatname_Aggregate_Fields = {
  __typename?: 'pokemonhabitatname_aggregate_fields';
  avg?: Maybe<Pokemonhabitatname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemonhabitatname_Max_Fields>;
  min?: Maybe<Pokemonhabitatname_Min_Fields>;
  stddev?: Maybe<Pokemonhabitatname_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemonhabitatname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemonhabitatname_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemonhabitatname_Sum_Fields>;
  var_pop?: Maybe<Pokemonhabitatname_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemonhabitatname_Var_Samp_Fields>;
  variance?: Maybe<Pokemonhabitatname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemonhabitatname" */
export type Pokemonhabitatname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemonhabitatname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_pokemonhabitatname" */
export type Pokemonhabitatname_Aggregate_Order_By = {
  avg?: InputMaybe<Pokemonhabitatname_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Pokemonhabitatname_Max_Order_By>;
  min?: InputMaybe<Pokemonhabitatname_Min_Order_By>;
  stddev?: InputMaybe<Pokemonhabitatname_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Pokemonhabitatname_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Pokemonhabitatname_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Pokemonhabitatname_Sum_Order_By>;
  var_pop?: InputMaybe<Pokemonhabitatname_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Pokemonhabitatname_Var_Samp_Order_By>;
  variance?: InputMaybe<Pokemonhabitatname_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Pokemonhabitatname_Avg_Fields = {
  __typename?: 'pokemonhabitatname_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_habitat_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_pokemonhabitatname" */
export type Pokemonhabitatname_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_habitat_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemonhabitatname". All fields are combined with a logical 'AND'. */
export type Pokemonhabitatname_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemonhabitatname_Bool_Exp>>;
  _not?: InputMaybe<Pokemonhabitatname_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemonhabitatname_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  pokemon_habitat_id?: InputMaybe<Int_Comparison_Exp>;
  pokemonhabitat?: InputMaybe<Pokemonhabitat_Bool_Exp>;
};

/** aggregate max on columns */
export type Pokemonhabitatname_Max_Fields = {
  __typename?: 'pokemonhabitatname_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  pokemon_habitat_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_pokemonhabitatname" */
export type Pokemonhabitatname_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  pokemon_habitat_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Pokemonhabitatname_Min_Fields = {
  __typename?: 'pokemonhabitatname_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  pokemon_habitat_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_pokemonhabitatname" */
export type Pokemonhabitatname_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  pokemon_habitat_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemonhabitatname". */
export type Pokemonhabitatname_Order_By = {
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  pokemon_habitat_id?: InputMaybe<Order_By>;
  pokemonhabitat?: InputMaybe<Pokemonhabitat_Order_By>;
};

/** select columns of table "pokemon_v2_pokemonhabitatname" */
export enum Pokemonhabitatname_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name',
  /** column name */
  PokemonHabitatId = 'pokemon_habitat_id'
}

/** aggregate stddev on columns */
export type Pokemonhabitatname_Stddev_Fields = {
  __typename?: 'pokemonhabitatname_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_habitat_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_pokemonhabitatname" */
export type Pokemonhabitatname_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_habitat_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Pokemonhabitatname_Stddev_Pop_Fields = {
  __typename?: 'pokemonhabitatname_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_habitat_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_pokemonhabitatname" */
export type Pokemonhabitatname_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_habitat_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Pokemonhabitatname_Stddev_Samp_Fields = {
  __typename?: 'pokemonhabitatname_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_habitat_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_pokemonhabitatname" */
export type Pokemonhabitatname_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_habitat_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Pokemonhabitatname_Sum_Fields = {
  __typename?: 'pokemonhabitatname_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  pokemon_habitat_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_pokemonhabitatname" */
export type Pokemonhabitatname_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_habitat_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Pokemonhabitatname_Var_Pop_Fields = {
  __typename?: 'pokemonhabitatname_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_habitat_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_pokemonhabitatname" */
export type Pokemonhabitatname_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_habitat_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Pokemonhabitatname_Var_Samp_Fields = {
  __typename?: 'pokemonhabitatname_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_habitat_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_pokemonhabitatname" */
export type Pokemonhabitatname_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_habitat_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Pokemonhabitatname_Variance_Fields = {
  __typename?: 'pokemonhabitatname_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_habitat_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_pokemonhabitatname" */
export type Pokemonhabitatname_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_habitat_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_pokemonitem" */
export type Pokemonitem = {
  __typename?: 'pokemonitem';
  id: Scalars['Int']['output'];
  /** An object relationship */
  item?: Maybe<Item>;
  item_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  pokemon?: Maybe<Pokemon>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  rarity: Scalars['Int']['output'];
  /** An object relationship */
  version?: Maybe<Version>;
  version_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_pokemonitem" */
export type Pokemonitem_Aggregate = {
  __typename?: 'pokemonitem_aggregate';
  aggregate?: Maybe<Pokemonitem_Aggregate_Fields>;
  nodes: Array<Pokemonitem>;
};

export type Pokemonitem_Aggregate_Bool_Exp = {
  count?: InputMaybe<Pokemonitem_Aggregate_Bool_Exp_Count>;
};

export type Pokemonitem_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Pokemonitem_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Pokemonitem_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_pokemonitem" */
export type Pokemonitem_Aggregate_Fields = {
  __typename?: 'pokemonitem_aggregate_fields';
  avg?: Maybe<Pokemonitem_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemonitem_Max_Fields>;
  min?: Maybe<Pokemonitem_Min_Fields>;
  stddev?: Maybe<Pokemonitem_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemonitem_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemonitem_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemonitem_Sum_Fields>;
  var_pop?: Maybe<Pokemonitem_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemonitem_Var_Samp_Fields>;
  variance?: Maybe<Pokemonitem_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemonitem" */
export type Pokemonitem_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemonitem_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_pokemonitem" */
export type Pokemonitem_Aggregate_Order_By = {
  avg?: InputMaybe<Pokemonitem_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Pokemonitem_Max_Order_By>;
  min?: InputMaybe<Pokemonitem_Min_Order_By>;
  stddev?: InputMaybe<Pokemonitem_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Pokemonitem_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Pokemonitem_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Pokemonitem_Sum_Order_By>;
  var_pop?: InputMaybe<Pokemonitem_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Pokemonitem_Var_Samp_Order_By>;
  variance?: InputMaybe<Pokemonitem_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Pokemonitem_Avg_Fields = {
  __typename?: 'pokemonitem_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  rarity?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_pokemonitem" */
export type Pokemonitem_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  rarity?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemonitem". All fields are combined with a logical 'AND'. */
export type Pokemonitem_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemonitem_Bool_Exp>>;
  _not?: InputMaybe<Pokemonitem_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemonitem_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  item?: InputMaybe<Item_Bool_Exp>;
  item_id?: InputMaybe<Int_Comparison_Exp>;
  pokemon?: InputMaybe<Pokemon_Bool_Exp>;
  pokemon_id?: InputMaybe<Int_Comparison_Exp>;
  rarity?: InputMaybe<Int_Comparison_Exp>;
  version?: InputMaybe<Version_Bool_Exp>;
  version_id?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Pokemonitem_Max_Fields = {
  __typename?: 'pokemonitem_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  rarity?: Maybe<Scalars['Int']['output']>;
  version_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_pokemonitem" */
export type Pokemonitem_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  rarity?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Pokemonitem_Min_Fields = {
  __typename?: 'pokemonitem_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  rarity?: Maybe<Scalars['Int']['output']>;
  version_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_pokemonitem" */
export type Pokemonitem_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  rarity?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemonitem". */
export type Pokemonitem_Order_By = {
  id?: InputMaybe<Order_By>;
  item?: InputMaybe<Item_Order_By>;
  item_id?: InputMaybe<Order_By>;
  pokemon?: InputMaybe<Pokemon_Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  rarity?: InputMaybe<Order_By>;
  version?: InputMaybe<Version_Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_pokemonitem" */
export enum Pokemonitem_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  ItemId = 'item_id',
  /** column name */
  PokemonId = 'pokemon_id',
  /** column name */
  Rarity = 'rarity',
  /** column name */
  VersionId = 'version_id'
}

/** aggregate stddev on columns */
export type Pokemonitem_Stddev_Fields = {
  __typename?: 'pokemonitem_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  rarity?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_pokemonitem" */
export type Pokemonitem_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  rarity?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Pokemonitem_Stddev_Pop_Fields = {
  __typename?: 'pokemonitem_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  rarity?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_pokemonitem" */
export type Pokemonitem_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  rarity?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Pokemonitem_Stddev_Samp_Fields = {
  __typename?: 'pokemonitem_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  rarity?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_pokemonitem" */
export type Pokemonitem_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  rarity?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Pokemonitem_Sum_Fields = {
  __typename?: 'pokemonitem_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  item_id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  rarity?: Maybe<Scalars['Int']['output']>;
  version_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_pokemonitem" */
export type Pokemonitem_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  rarity?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Pokemonitem_Var_Pop_Fields = {
  __typename?: 'pokemonitem_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  rarity?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_pokemonitem" */
export type Pokemonitem_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  rarity?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Pokemonitem_Var_Samp_Fields = {
  __typename?: 'pokemonitem_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  rarity?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_pokemonitem" */
export type Pokemonitem_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  rarity?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Pokemonitem_Variance_Fields = {
  __typename?: 'pokemonitem_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  item_id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  rarity?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_pokemonitem" */
export type Pokemonitem_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  item_id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  rarity?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_pokemonmove" */
export type Pokemonmove = {
  __typename?: 'pokemonmove';
  id: Scalars['Int']['output'];
  level: Scalars['Int']['output'];
  mastery?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  move?: Maybe<Move>;
  move_id?: Maybe<Scalars['Int']['output']>;
  move_learn_method_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  movelearnmethod?: Maybe<Movelearnmethod>;
  order?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  pokemon?: Maybe<Pokemon>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  versiongroup?: Maybe<Versiongroup>;
};

/** aggregated selection of "pokemon_v2_pokemonmove" */
export type Pokemonmove_Aggregate = {
  __typename?: 'pokemonmove_aggregate';
  aggregate?: Maybe<Pokemonmove_Aggregate_Fields>;
  nodes: Array<Pokemonmove>;
};

export type Pokemonmove_Aggregate_Bool_Exp = {
  count?: InputMaybe<Pokemonmove_Aggregate_Bool_Exp_Count>;
};

export type Pokemonmove_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Pokemonmove_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Pokemonmove_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_pokemonmove" */
export type Pokemonmove_Aggregate_Fields = {
  __typename?: 'pokemonmove_aggregate_fields';
  avg?: Maybe<Pokemonmove_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemonmove_Max_Fields>;
  min?: Maybe<Pokemonmove_Min_Fields>;
  stddev?: Maybe<Pokemonmove_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemonmove_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemonmove_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemonmove_Sum_Fields>;
  var_pop?: Maybe<Pokemonmove_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemonmove_Var_Samp_Fields>;
  variance?: Maybe<Pokemonmove_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemonmove" */
export type Pokemonmove_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemonmove_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_pokemonmove" */
export type Pokemonmove_Aggregate_Order_By = {
  avg?: InputMaybe<Pokemonmove_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Pokemonmove_Max_Order_By>;
  min?: InputMaybe<Pokemonmove_Min_Order_By>;
  stddev?: InputMaybe<Pokemonmove_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Pokemonmove_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Pokemonmove_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Pokemonmove_Sum_Order_By>;
  var_pop?: InputMaybe<Pokemonmove_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Pokemonmove_Var_Samp_Order_By>;
  variance?: InputMaybe<Pokemonmove_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Pokemonmove_Avg_Fields = {
  __typename?: 'pokemonmove_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  level?: Maybe<Scalars['Float']['output']>;
  mastery?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_pokemonmove" */
export type Pokemonmove_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  level?: InputMaybe<Order_By>;
  mastery?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  move_learn_method_id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemonmove". All fields are combined with a logical 'AND'. */
export type Pokemonmove_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemonmove_Bool_Exp>>;
  _not?: InputMaybe<Pokemonmove_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemonmove_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  level?: InputMaybe<Int_Comparison_Exp>;
  mastery?: InputMaybe<Int_Comparison_Exp>;
  move?: InputMaybe<Move_Bool_Exp>;
  move_id?: InputMaybe<Int_Comparison_Exp>;
  move_learn_method_id?: InputMaybe<Int_Comparison_Exp>;
  movelearnmethod?: InputMaybe<Movelearnmethod_Bool_Exp>;
  order?: InputMaybe<Int_Comparison_Exp>;
  pokemon?: InputMaybe<Pokemon_Bool_Exp>;
  pokemon_id?: InputMaybe<Int_Comparison_Exp>;
  version_group_id?: InputMaybe<Int_Comparison_Exp>;
  versiongroup?: InputMaybe<Versiongroup_Bool_Exp>;
};

/** aggregate max on columns */
export type Pokemonmove_Max_Fields = {
  __typename?: 'pokemonmove_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  level?: Maybe<Scalars['Int']['output']>;
  mastery?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
  move_learn_method_id?: Maybe<Scalars['Int']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_pokemonmove" */
export type Pokemonmove_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  level?: InputMaybe<Order_By>;
  mastery?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  move_learn_method_id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Pokemonmove_Min_Fields = {
  __typename?: 'pokemonmove_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  level?: Maybe<Scalars['Int']['output']>;
  mastery?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
  move_learn_method_id?: Maybe<Scalars['Int']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_pokemonmove" */
export type Pokemonmove_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  level?: InputMaybe<Order_By>;
  mastery?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  move_learn_method_id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemonmove". */
export type Pokemonmove_Order_By = {
  id?: InputMaybe<Order_By>;
  level?: InputMaybe<Order_By>;
  mastery?: InputMaybe<Order_By>;
  move?: InputMaybe<Move_Order_By>;
  move_id?: InputMaybe<Order_By>;
  move_learn_method_id?: InputMaybe<Order_By>;
  movelearnmethod?: InputMaybe<Movelearnmethod_Order_By>;
  order?: InputMaybe<Order_By>;
  pokemon?: InputMaybe<Pokemon_Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
  versiongroup?: InputMaybe<Versiongroup_Order_By>;
};

/** select columns of table "pokemon_v2_pokemonmove" */
export enum Pokemonmove_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Level = 'level',
  /** column name */
  Mastery = 'mastery',
  /** column name */
  MoveId = 'move_id',
  /** column name */
  MoveLearnMethodId = 'move_learn_method_id',
  /** column name */
  Order = 'order',
  /** column name */
  PokemonId = 'pokemon_id',
  /** column name */
  VersionGroupId = 'version_group_id'
}

/** aggregate stddev on columns */
export type Pokemonmove_Stddev_Fields = {
  __typename?: 'pokemonmove_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  level?: Maybe<Scalars['Float']['output']>;
  mastery?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_pokemonmove" */
export type Pokemonmove_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  level?: InputMaybe<Order_By>;
  mastery?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  move_learn_method_id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Pokemonmove_Stddev_Pop_Fields = {
  __typename?: 'pokemonmove_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  level?: Maybe<Scalars['Float']['output']>;
  mastery?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_pokemonmove" */
export type Pokemonmove_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  level?: InputMaybe<Order_By>;
  mastery?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  move_learn_method_id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Pokemonmove_Stddev_Samp_Fields = {
  __typename?: 'pokemonmove_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  level?: Maybe<Scalars['Float']['output']>;
  mastery?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_pokemonmove" */
export type Pokemonmove_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  level?: InputMaybe<Order_By>;
  mastery?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  move_learn_method_id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Pokemonmove_Sum_Fields = {
  __typename?: 'pokemonmove_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  level?: Maybe<Scalars['Int']['output']>;
  mastery?: Maybe<Scalars['Int']['output']>;
  move_id?: Maybe<Scalars['Int']['output']>;
  move_learn_method_id?: Maybe<Scalars['Int']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_pokemonmove" */
export type Pokemonmove_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  level?: InputMaybe<Order_By>;
  mastery?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  move_learn_method_id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Pokemonmove_Var_Pop_Fields = {
  __typename?: 'pokemonmove_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  level?: Maybe<Scalars['Float']['output']>;
  mastery?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_pokemonmove" */
export type Pokemonmove_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  level?: InputMaybe<Order_By>;
  mastery?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  move_learn_method_id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Pokemonmove_Var_Samp_Fields = {
  __typename?: 'pokemonmove_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  level?: Maybe<Scalars['Float']['output']>;
  mastery?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_pokemonmove" */
export type Pokemonmove_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  level?: InputMaybe<Order_By>;
  mastery?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  move_learn_method_id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Pokemonmove_Variance_Fields = {
  __typename?: 'pokemonmove_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  level?: Maybe<Scalars['Float']['output']>;
  mastery?: Maybe<Scalars['Float']['output']>;
  move_id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_pokemonmove" */
export type Pokemonmove_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  level?: InputMaybe<Order_By>;
  mastery?: InputMaybe<Order_By>;
  move_id?: InputMaybe<Order_By>;
  move_learn_method_id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_pokemonshape" */
export type Pokemonshape = {
  __typename?: 'pokemonshape';
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  /** An array relationship */
  pokemonshapenames: Array<Pokemonshapename>;
  /** An aggregate relationship */
  pokemonshapenames_aggregate: Pokemonshapename_Aggregate;
  /** An array relationship */
  pokemonspecies: Array<Pokemonspecies>;
  /** An aggregate relationship */
  pokemonspecies_aggregate: Pokemonspecies_Aggregate;
};


/** columns and relationships of "pokemon_v2_pokemonshape" */
export type PokemonshapePokemonshapenamesArgs = {
  distinct_on?: InputMaybe<Array<Pokemonshapename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonshapename_Order_By>>;
  where?: InputMaybe<Pokemonshapename_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemonshape" */
export type PokemonshapePokemonshapenames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonshapename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonshapename_Order_By>>;
  where?: InputMaybe<Pokemonshapename_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemonshape" */
export type PokemonshapePokemonspeciesArgs = {
  distinct_on?: InputMaybe<Array<Pokemonspecies_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonspecies_Order_By>>;
  where?: InputMaybe<Pokemonspecies_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemonshape" */
export type PokemonshapePokemonspecies_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonspecies_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonspecies_Order_By>>;
  where?: InputMaybe<Pokemonspecies_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_pokemonshape" */
export type Pokemonshape_Aggregate = {
  __typename?: 'pokemonshape_aggregate';
  aggregate?: Maybe<Pokemonshape_Aggregate_Fields>;
  nodes: Array<Pokemonshape>;
};

/** aggregate fields of "pokemon_v2_pokemonshape" */
export type Pokemonshape_Aggregate_Fields = {
  __typename?: 'pokemonshape_aggregate_fields';
  avg?: Maybe<Pokemonshape_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemonshape_Max_Fields>;
  min?: Maybe<Pokemonshape_Min_Fields>;
  stddev?: Maybe<Pokemonshape_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemonshape_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemonshape_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemonshape_Sum_Fields>;
  var_pop?: Maybe<Pokemonshape_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemonshape_Var_Samp_Fields>;
  variance?: Maybe<Pokemonshape_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemonshape" */
export type Pokemonshape_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemonshape_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Pokemonshape_Avg_Fields = {
  __typename?: 'pokemonshape_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemonshape". All fields are combined with a logical 'AND'. */
export type Pokemonshape_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemonshape_Bool_Exp>>;
  _not?: InputMaybe<Pokemonshape_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemonshape_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  pokemonshapenames?: InputMaybe<Pokemonshapename_Bool_Exp>;
  pokemonshapenames_aggregate?: InputMaybe<Pokemonshapename_Aggregate_Bool_Exp>;
  pokemonspecies?: InputMaybe<Pokemonspecies_Bool_Exp>;
  pokemonspecies_aggregate?: InputMaybe<Pokemonspecies_Aggregate_Bool_Exp>;
};

/** aggregate max on columns */
export type Pokemonshape_Max_Fields = {
  __typename?: 'pokemonshape_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Pokemonshape_Min_Fields = {
  __typename?: 'pokemonshape_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemonshape". */
export type Pokemonshape_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  pokemonshapenames_aggregate?: InputMaybe<Pokemonshapename_Aggregate_Order_By>;
  pokemonspecies_aggregate?: InputMaybe<Pokemonspecies_Aggregate_Order_By>;
};

/** select columns of table "pokemon_v2_pokemonshape" */
export enum Pokemonshape_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Pokemonshape_Stddev_Fields = {
  __typename?: 'pokemonshape_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Pokemonshape_Stddev_Pop_Fields = {
  __typename?: 'pokemonshape_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Pokemonshape_Stddev_Samp_Fields = {
  __typename?: 'pokemonshape_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate sum on columns */
export type Pokemonshape_Sum_Fields = {
  __typename?: 'pokemonshape_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate var_pop on columns */
export type Pokemonshape_Var_Pop_Fields = {
  __typename?: 'pokemonshape_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Pokemonshape_Var_Samp_Fields = {
  __typename?: 'pokemonshape_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Pokemonshape_Variance_Fields = {
  __typename?: 'pokemonshape_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_pokemonshapename" */
export type Pokemonshapename = {
  __typename?: 'pokemonshapename';
  awesome_name: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
  pokemon_shape_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  pokemonshape?: Maybe<Pokemonshape>;
};

/** aggregated selection of "pokemon_v2_pokemonshapename" */
export type Pokemonshapename_Aggregate = {
  __typename?: 'pokemonshapename_aggregate';
  aggregate?: Maybe<Pokemonshapename_Aggregate_Fields>;
  nodes: Array<Pokemonshapename>;
};

export type Pokemonshapename_Aggregate_Bool_Exp = {
  count?: InputMaybe<Pokemonshapename_Aggregate_Bool_Exp_Count>;
};

export type Pokemonshapename_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Pokemonshapename_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Pokemonshapename_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_pokemonshapename" */
export type Pokemonshapename_Aggregate_Fields = {
  __typename?: 'pokemonshapename_aggregate_fields';
  avg?: Maybe<Pokemonshapename_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemonshapename_Max_Fields>;
  min?: Maybe<Pokemonshapename_Min_Fields>;
  stddev?: Maybe<Pokemonshapename_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemonshapename_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemonshapename_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemonshapename_Sum_Fields>;
  var_pop?: Maybe<Pokemonshapename_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemonshapename_Var_Samp_Fields>;
  variance?: Maybe<Pokemonshapename_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemonshapename" */
export type Pokemonshapename_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemonshapename_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_pokemonshapename" */
export type Pokemonshapename_Aggregate_Order_By = {
  avg?: InputMaybe<Pokemonshapename_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Pokemonshapename_Max_Order_By>;
  min?: InputMaybe<Pokemonshapename_Min_Order_By>;
  stddev?: InputMaybe<Pokemonshapename_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Pokemonshapename_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Pokemonshapename_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Pokemonshapename_Sum_Order_By>;
  var_pop?: InputMaybe<Pokemonshapename_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Pokemonshapename_Var_Samp_Order_By>;
  variance?: InputMaybe<Pokemonshapename_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Pokemonshapename_Avg_Fields = {
  __typename?: 'pokemonshapename_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_shape_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_pokemonshapename" */
export type Pokemonshapename_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_shape_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemonshapename". All fields are combined with a logical 'AND'. */
export type Pokemonshapename_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemonshapename_Bool_Exp>>;
  _not?: InputMaybe<Pokemonshapename_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemonshapename_Bool_Exp>>;
  awesome_name?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  pokemon_shape_id?: InputMaybe<Int_Comparison_Exp>;
  pokemonshape?: InputMaybe<Pokemonshape_Bool_Exp>;
};

/** aggregate max on columns */
export type Pokemonshapename_Max_Fields = {
  __typename?: 'pokemonshapename_max_fields';
  awesome_name?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  pokemon_shape_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_pokemonshapename" */
export type Pokemonshapename_Max_Order_By = {
  awesome_name?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  pokemon_shape_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Pokemonshapename_Min_Fields = {
  __typename?: 'pokemonshapename_min_fields';
  awesome_name?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  pokemon_shape_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_pokemonshapename" */
export type Pokemonshapename_Min_Order_By = {
  awesome_name?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  pokemon_shape_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemonshapename". */
export type Pokemonshapename_Order_By = {
  awesome_name?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  pokemon_shape_id?: InputMaybe<Order_By>;
  pokemonshape?: InputMaybe<Pokemonshape_Order_By>;
};

/** select columns of table "pokemon_v2_pokemonshapename" */
export enum Pokemonshapename_Select_Column {
  /** column name */
  AwesomeName = 'awesome_name',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name',
  /** column name */
  PokemonShapeId = 'pokemon_shape_id'
}

/** aggregate stddev on columns */
export type Pokemonshapename_Stddev_Fields = {
  __typename?: 'pokemonshapename_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_shape_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_pokemonshapename" */
export type Pokemonshapename_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_shape_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Pokemonshapename_Stddev_Pop_Fields = {
  __typename?: 'pokemonshapename_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_shape_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_pokemonshapename" */
export type Pokemonshapename_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_shape_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Pokemonshapename_Stddev_Samp_Fields = {
  __typename?: 'pokemonshapename_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_shape_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_pokemonshapename" */
export type Pokemonshapename_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_shape_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Pokemonshapename_Sum_Fields = {
  __typename?: 'pokemonshapename_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  pokemon_shape_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_pokemonshapename" */
export type Pokemonshapename_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_shape_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Pokemonshapename_Var_Pop_Fields = {
  __typename?: 'pokemonshapename_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_shape_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_pokemonshapename" */
export type Pokemonshapename_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_shape_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Pokemonshapename_Var_Samp_Fields = {
  __typename?: 'pokemonshapename_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_shape_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_pokemonshapename" */
export type Pokemonshapename_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_shape_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Pokemonshapename_Variance_Fields = {
  __typename?: 'pokemonshapename_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_shape_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_pokemonshapename" */
export type Pokemonshapename_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_shape_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_pokemonspecies" */
export type Pokemonspecies = {
  __typename?: 'pokemonspecies';
  /** An array relationship */
  PokemonevolutionsByPartySpeciesId: Array<Pokemonevolution>;
  /** An aggregate relationship */
  PokemonevolutionsByPartySpeciesId_aggregate: Pokemonevolution_Aggregate;
  /** An array relationship */
  PokemonevolutionsByTradeSpeciesId: Array<Pokemonevolution>;
  /** An aggregate relationship */
  PokemonevolutionsByTradeSpeciesId_aggregate: Pokemonevolution_Aggregate;
  base_happiness?: Maybe<Scalars['Int']['output']>;
  capture_rate?: Maybe<Scalars['Int']['output']>;
  evolution_chain_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  evolutionchain?: Maybe<Evolutionchain>;
  evolves_from_species_id?: Maybe<Scalars['Int']['output']>;
  forms_switchable: Scalars['Boolean']['output'];
  gender_rate?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  generation?: Maybe<Generation>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  growth_rate_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  growthrate?: Maybe<Growthrate>;
  has_gender_differences: Scalars['Boolean']['output'];
  hatch_counter?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  is_baby: Scalars['Boolean']['output'];
  is_legendary: Scalars['Boolean']['output'];
  is_mythical: Scalars['Boolean']['output'];
  name: Scalars['String']['output'];
  order?: Maybe<Scalars['Int']['output']>;
  /** An array relationship */
  palparks: Array<Palpark>;
  /** An aggregate relationship */
  palparks_aggregate: Palpark_Aggregate;
  pokemon_color_id?: Maybe<Scalars['Int']['output']>;
  pokemon_habitat_id?: Maybe<Scalars['Int']['output']>;
  pokemon_shape_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  pokemoncolor?: Maybe<Pokemoncolor>;
  /** An array relationship */
  pokemondexnumbers: Array<Pokemondexnumber>;
  /** An aggregate relationship */
  pokemondexnumbers_aggregate: Pokemondexnumber_Aggregate;
  /** An array relationship */
  pokemonegggroups: Array<Pokemonegggroup>;
  /** An aggregate relationship */
  pokemonegggroups_aggregate: Pokemonegggroup_Aggregate;
  /** An array relationship */
  pokemonevolutions: Array<Pokemonevolution>;
  /** An aggregate relationship */
  pokemonevolutions_aggregate: Pokemonevolution_Aggregate;
  /** An object relationship */
  pokemonhabitat?: Maybe<Pokemonhabitat>;
  /** An array relationship */
  pokemons: Array<Pokemon>;
  /** An aggregate relationship */
  pokemons_aggregate: Pokemon_Aggregate;
  /** An object relationship */
  pokemonshape?: Maybe<Pokemonshape>;
  /** An array relationship */
  pokemonspecies: Array<Pokemonspecies>;
  /** An aggregate relationship */
  pokemonspecies_aggregate: Pokemonspecies_Aggregate;
  /** An array relationship */
  pokemonspeciesdescriptions: Array<Pokemonspeciesdescription>;
  /** An aggregate relationship */
  pokemonspeciesdescriptions_aggregate: Pokemonspeciesdescription_Aggregate;
  /** An array relationship */
  pokemonspeciesflavortexts: Array<Pokemonspeciesflavortext>;
  /** An aggregate relationship */
  pokemonspeciesflavortexts_aggregate: Pokemonspeciesflavortext_Aggregate;
  /** An array relationship */
  pokemonspeciesnames: Array<Pokemonspeciesname>;
  /** An aggregate relationship */
  pokemonspeciesnames_aggregate: Pokemonspeciesname_Aggregate;
  /** An object relationship */
  pokemonspecy?: Maybe<Pokemonspecies>;
};


/** columns and relationships of "pokemon_v2_pokemonspecies" */
export type PokemonspeciesPokemonevolutionsByPartySpeciesIdArgs = {
  distinct_on?: InputMaybe<Array<Pokemonevolution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonevolution_Order_By>>;
  where?: InputMaybe<Pokemonevolution_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemonspecies" */
export type PokemonspeciesPokemonevolutionsByPartySpeciesId_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonevolution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonevolution_Order_By>>;
  where?: InputMaybe<Pokemonevolution_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemonspecies" */
export type PokemonspeciesPokemonevolutionsByTradeSpeciesIdArgs = {
  distinct_on?: InputMaybe<Array<Pokemonevolution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonevolution_Order_By>>;
  where?: InputMaybe<Pokemonevolution_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemonspecies" */
export type PokemonspeciesPokemonevolutionsByTradeSpeciesId_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonevolution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonevolution_Order_By>>;
  where?: InputMaybe<Pokemonevolution_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemonspecies" */
export type PokemonspeciesPalparksArgs = {
  distinct_on?: InputMaybe<Array<Palpark_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Palpark_Order_By>>;
  where?: InputMaybe<Palpark_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemonspecies" */
export type PokemonspeciesPalparks_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Palpark_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Palpark_Order_By>>;
  where?: InputMaybe<Palpark_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemonspecies" */
export type PokemonspeciesPokemondexnumbersArgs = {
  distinct_on?: InputMaybe<Array<Pokemondexnumber_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemondexnumber_Order_By>>;
  where?: InputMaybe<Pokemondexnumber_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemonspecies" */
export type PokemonspeciesPokemondexnumbers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemondexnumber_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemondexnumber_Order_By>>;
  where?: InputMaybe<Pokemondexnumber_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemonspecies" */
export type PokemonspeciesPokemonegggroupsArgs = {
  distinct_on?: InputMaybe<Array<Pokemonegggroup_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonegggroup_Order_By>>;
  where?: InputMaybe<Pokemonegggroup_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemonspecies" */
export type PokemonspeciesPokemonegggroups_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonegggroup_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonegggroup_Order_By>>;
  where?: InputMaybe<Pokemonegggroup_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemonspecies" */
export type PokemonspeciesPokemonevolutionsArgs = {
  distinct_on?: InputMaybe<Array<Pokemonevolution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonevolution_Order_By>>;
  where?: InputMaybe<Pokemonevolution_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemonspecies" */
export type PokemonspeciesPokemonevolutions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonevolution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonevolution_Order_By>>;
  where?: InputMaybe<Pokemonevolution_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemonspecies" */
export type PokemonspeciesPokemonsArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_Order_By>>;
  where?: InputMaybe<Pokemon_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemonspecies" */
export type PokemonspeciesPokemons_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_Order_By>>;
  where?: InputMaybe<Pokemon_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemonspecies" */
export type PokemonspeciesPokemonspeciesArgs = {
  distinct_on?: InputMaybe<Array<Pokemonspecies_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonspecies_Order_By>>;
  where?: InputMaybe<Pokemonspecies_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemonspecies" */
export type PokemonspeciesPokemonspecies_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonspecies_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonspecies_Order_By>>;
  where?: InputMaybe<Pokemonspecies_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemonspecies" */
export type PokemonspeciesPokemonspeciesdescriptionsArgs = {
  distinct_on?: InputMaybe<Array<Pokemonspeciesdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonspeciesdescription_Order_By>>;
  where?: InputMaybe<Pokemonspeciesdescription_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemonspecies" */
export type PokemonspeciesPokemonspeciesdescriptions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonspeciesdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonspeciesdescription_Order_By>>;
  where?: InputMaybe<Pokemonspeciesdescription_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemonspecies" */
export type PokemonspeciesPokemonspeciesflavortextsArgs = {
  distinct_on?: InputMaybe<Array<Pokemonspeciesflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonspeciesflavortext_Order_By>>;
  where?: InputMaybe<Pokemonspeciesflavortext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemonspecies" */
export type PokemonspeciesPokemonspeciesflavortexts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonspeciesflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonspeciesflavortext_Order_By>>;
  where?: InputMaybe<Pokemonspeciesflavortext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemonspecies" */
export type PokemonspeciesPokemonspeciesnamesArgs = {
  distinct_on?: InputMaybe<Array<Pokemonspeciesname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonspeciesname_Order_By>>;
  where?: InputMaybe<Pokemonspeciesname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_pokemonspecies" */
export type PokemonspeciesPokemonspeciesnames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonspeciesname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonspeciesname_Order_By>>;
  where?: InputMaybe<Pokemonspeciesname_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_pokemonspecies" */
export type Pokemonspecies_Aggregate = {
  __typename?: 'pokemonspecies_aggregate';
  aggregate?: Maybe<Pokemonspecies_Aggregate_Fields>;
  nodes: Array<Pokemonspecies>;
};

export type Pokemonspecies_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Pokemonspecies_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Pokemonspecies_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Pokemonspecies_Aggregate_Bool_Exp_Count>;
};

export type Pokemonspecies_Aggregate_Bool_Exp_Bool_And = {
  arguments: Pokemonspecies_Select_Column_Pokemonspecies_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Pokemonspecies_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Pokemonspecies_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Pokemonspecies_Select_Column_Pokemonspecies_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Pokemonspecies_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Pokemonspecies_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Pokemonspecies_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Pokemonspecies_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_pokemonspecies" */
export type Pokemonspecies_Aggregate_Fields = {
  __typename?: 'pokemonspecies_aggregate_fields';
  avg?: Maybe<Pokemonspecies_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemonspecies_Max_Fields>;
  min?: Maybe<Pokemonspecies_Min_Fields>;
  stddev?: Maybe<Pokemonspecies_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemonspecies_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemonspecies_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemonspecies_Sum_Fields>;
  var_pop?: Maybe<Pokemonspecies_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemonspecies_Var_Samp_Fields>;
  variance?: Maybe<Pokemonspecies_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemonspecies" */
export type Pokemonspecies_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemonspecies_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_pokemonspecies" */
export type Pokemonspecies_Aggregate_Order_By = {
  avg?: InputMaybe<Pokemonspecies_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Pokemonspecies_Max_Order_By>;
  min?: InputMaybe<Pokemonspecies_Min_Order_By>;
  stddev?: InputMaybe<Pokemonspecies_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Pokemonspecies_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Pokemonspecies_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Pokemonspecies_Sum_Order_By>;
  var_pop?: InputMaybe<Pokemonspecies_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Pokemonspecies_Var_Samp_Order_By>;
  variance?: InputMaybe<Pokemonspecies_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Pokemonspecies_Avg_Fields = {
  __typename?: 'pokemonspecies_avg_fields';
  base_happiness?: Maybe<Scalars['Float']['output']>;
  capture_rate?: Maybe<Scalars['Float']['output']>;
  evolution_chain_id?: Maybe<Scalars['Float']['output']>;
  evolves_from_species_id?: Maybe<Scalars['Float']['output']>;
  gender_rate?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  hatch_counter?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_color_id?: Maybe<Scalars['Float']['output']>;
  pokemon_habitat_id?: Maybe<Scalars['Float']['output']>;
  pokemon_shape_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_pokemonspecies" */
export type Pokemonspecies_Avg_Order_By = {
  base_happiness?: InputMaybe<Order_By>;
  capture_rate?: InputMaybe<Order_By>;
  evolution_chain_id?: InputMaybe<Order_By>;
  evolves_from_species_id?: InputMaybe<Order_By>;
  gender_rate?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  growth_rate_id?: InputMaybe<Order_By>;
  hatch_counter?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  pokemon_color_id?: InputMaybe<Order_By>;
  pokemon_habitat_id?: InputMaybe<Order_By>;
  pokemon_shape_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemonspecies". All fields are combined with a logical 'AND'. */
export type Pokemonspecies_Bool_Exp = {
  PokemonevolutionsByPartySpeciesId?: InputMaybe<Pokemonevolution_Bool_Exp>;
  PokemonevolutionsByPartySpeciesId_aggregate?: InputMaybe<Pokemonevolution_Aggregate_Bool_Exp>;
  PokemonevolutionsByTradeSpeciesId?: InputMaybe<Pokemonevolution_Bool_Exp>;
  PokemonevolutionsByTradeSpeciesId_aggregate?: InputMaybe<Pokemonevolution_Aggregate_Bool_Exp>;
  _and?: InputMaybe<Array<Pokemonspecies_Bool_Exp>>;
  _not?: InputMaybe<Pokemonspecies_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemonspecies_Bool_Exp>>;
  base_happiness?: InputMaybe<Int_Comparison_Exp>;
  capture_rate?: InputMaybe<Int_Comparison_Exp>;
  evolution_chain_id?: InputMaybe<Int_Comparison_Exp>;
  evolutionchain?: InputMaybe<Evolutionchain_Bool_Exp>;
  evolves_from_species_id?: InputMaybe<Int_Comparison_Exp>;
  forms_switchable?: InputMaybe<Boolean_Comparison_Exp>;
  gender_rate?: InputMaybe<Int_Comparison_Exp>;
  generation?: InputMaybe<Generation_Bool_Exp>;
  generation_id?: InputMaybe<Int_Comparison_Exp>;
  growth_rate_id?: InputMaybe<Int_Comparison_Exp>;
  growthrate?: InputMaybe<Growthrate_Bool_Exp>;
  has_gender_differences?: InputMaybe<Boolean_Comparison_Exp>;
  hatch_counter?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  is_baby?: InputMaybe<Boolean_Comparison_Exp>;
  is_legendary?: InputMaybe<Boolean_Comparison_Exp>;
  is_mythical?: InputMaybe<Boolean_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  order?: InputMaybe<Int_Comparison_Exp>;
  palparks?: InputMaybe<Palpark_Bool_Exp>;
  palparks_aggregate?: InputMaybe<Palpark_Aggregate_Bool_Exp>;
  pokemon_color_id?: InputMaybe<Int_Comparison_Exp>;
  pokemon_habitat_id?: InputMaybe<Int_Comparison_Exp>;
  pokemon_shape_id?: InputMaybe<Int_Comparison_Exp>;
  pokemoncolor?: InputMaybe<Pokemoncolor_Bool_Exp>;
  pokemondexnumbers?: InputMaybe<Pokemondexnumber_Bool_Exp>;
  pokemondexnumbers_aggregate?: InputMaybe<Pokemondexnumber_Aggregate_Bool_Exp>;
  pokemonegggroups?: InputMaybe<Pokemonegggroup_Bool_Exp>;
  pokemonegggroups_aggregate?: InputMaybe<Pokemonegggroup_Aggregate_Bool_Exp>;
  pokemonevolutions?: InputMaybe<Pokemonevolution_Bool_Exp>;
  pokemonevolutions_aggregate?: InputMaybe<Pokemonevolution_Aggregate_Bool_Exp>;
  pokemonhabitat?: InputMaybe<Pokemonhabitat_Bool_Exp>;
  pokemons?: InputMaybe<Pokemon_Bool_Exp>;
  pokemons_aggregate?: InputMaybe<Pokemon_Aggregate_Bool_Exp>;
  pokemonshape?: InputMaybe<Pokemonshape_Bool_Exp>;
  pokemonspecies?: InputMaybe<Pokemonspecies_Bool_Exp>;
  pokemonspecies_aggregate?: InputMaybe<Pokemonspecies_Aggregate_Bool_Exp>;
  pokemonspeciesdescriptions?: InputMaybe<Pokemonspeciesdescription_Bool_Exp>;
  pokemonspeciesdescriptions_aggregate?: InputMaybe<Pokemonspeciesdescription_Aggregate_Bool_Exp>;
  pokemonspeciesflavortexts?: InputMaybe<Pokemonspeciesflavortext_Bool_Exp>;
  pokemonspeciesflavortexts_aggregate?: InputMaybe<Pokemonspeciesflavortext_Aggregate_Bool_Exp>;
  pokemonspeciesnames?: InputMaybe<Pokemonspeciesname_Bool_Exp>;
  pokemonspeciesnames_aggregate?: InputMaybe<Pokemonspeciesname_Aggregate_Bool_Exp>;
  pokemonspecy?: InputMaybe<Pokemonspecies_Bool_Exp>;
};

/** aggregate max on columns */
export type Pokemonspecies_Max_Fields = {
  __typename?: 'pokemonspecies_max_fields';
  base_happiness?: Maybe<Scalars['Int']['output']>;
  capture_rate?: Maybe<Scalars['Int']['output']>;
  evolution_chain_id?: Maybe<Scalars['Int']['output']>;
  evolves_from_species_id?: Maybe<Scalars['Int']['output']>;
  gender_rate?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  growth_rate_id?: Maybe<Scalars['Int']['output']>;
  hatch_counter?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
  pokemon_color_id?: Maybe<Scalars['Int']['output']>;
  pokemon_habitat_id?: Maybe<Scalars['Int']['output']>;
  pokemon_shape_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_pokemonspecies" */
export type Pokemonspecies_Max_Order_By = {
  base_happiness?: InputMaybe<Order_By>;
  capture_rate?: InputMaybe<Order_By>;
  evolution_chain_id?: InputMaybe<Order_By>;
  evolves_from_species_id?: InputMaybe<Order_By>;
  gender_rate?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  growth_rate_id?: InputMaybe<Order_By>;
  hatch_counter?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  pokemon_color_id?: InputMaybe<Order_By>;
  pokemon_habitat_id?: InputMaybe<Order_By>;
  pokemon_shape_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Pokemonspecies_Min_Fields = {
  __typename?: 'pokemonspecies_min_fields';
  base_happiness?: Maybe<Scalars['Int']['output']>;
  capture_rate?: Maybe<Scalars['Int']['output']>;
  evolution_chain_id?: Maybe<Scalars['Int']['output']>;
  evolves_from_species_id?: Maybe<Scalars['Int']['output']>;
  gender_rate?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  growth_rate_id?: Maybe<Scalars['Int']['output']>;
  hatch_counter?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
  pokemon_color_id?: Maybe<Scalars['Int']['output']>;
  pokemon_habitat_id?: Maybe<Scalars['Int']['output']>;
  pokemon_shape_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_pokemonspecies" */
export type Pokemonspecies_Min_Order_By = {
  base_happiness?: InputMaybe<Order_By>;
  capture_rate?: InputMaybe<Order_By>;
  evolution_chain_id?: InputMaybe<Order_By>;
  evolves_from_species_id?: InputMaybe<Order_By>;
  gender_rate?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  growth_rate_id?: InputMaybe<Order_By>;
  hatch_counter?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  pokemon_color_id?: InputMaybe<Order_By>;
  pokemon_habitat_id?: InputMaybe<Order_By>;
  pokemon_shape_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemonspecies". */
export type Pokemonspecies_Order_By = {
  PokemonevolutionsByPartySpeciesId_aggregate?: InputMaybe<Pokemonevolution_Aggregate_Order_By>;
  PokemonevolutionsByTradeSpeciesId_aggregate?: InputMaybe<Pokemonevolution_Aggregate_Order_By>;
  base_happiness?: InputMaybe<Order_By>;
  capture_rate?: InputMaybe<Order_By>;
  evolution_chain_id?: InputMaybe<Order_By>;
  evolutionchain?: InputMaybe<Evolutionchain_Order_By>;
  evolves_from_species_id?: InputMaybe<Order_By>;
  forms_switchable?: InputMaybe<Order_By>;
  gender_rate?: InputMaybe<Order_By>;
  generation?: InputMaybe<Generation_Order_By>;
  generation_id?: InputMaybe<Order_By>;
  growth_rate_id?: InputMaybe<Order_By>;
  growthrate?: InputMaybe<Growthrate_Order_By>;
  has_gender_differences?: InputMaybe<Order_By>;
  hatch_counter?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  is_baby?: InputMaybe<Order_By>;
  is_legendary?: InputMaybe<Order_By>;
  is_mythical?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  palparks_aggregate?: InputMaybe<Palpark_Aggregate_Order_By>;
  pokemon_color_id?: InputMaybe<Order_By>;
  pokemon_habitat_id?: InputMaybe<Order_By>;
  pokemon_shape_id?: InputMaybe<Order_By>;
  pokemoncolor?: InputMaybe<Pokemoncolor_Order_By>;
  pokemondexnumbers_aggregate?: InputMaybe<Pokemondexnumber_Aggregate_Order_By>;
  pokemonegggroups_aggregate?: InputMaybe<Pokemonegggroup_Aggregate_Order_By>;
  pokemonevolutions_aggregate?: InputMaybe<Pokemonevolution_Aggregate_Order_By>;
  pokemonhabitat?: InputMaybe<Pokemonhabitat_Order_By>;
  pokemons_aggregate?: InputMaybe<Pokemon_Aggregate_Order_By>;
  pokemonshape?: InputMaybe<Pokemonshape_Order_By>;
  pokemonspecies_aggregate?: InputMaybe<Pokemonspecies_Aggregate_Order_By>;
  pokemonspeciesdescriptions_aggregate?: InputMaybe<Pokemonspeciesdescription_Aggregate_Order_By>;
  pokemonspeciesflavortexts_aggregate?: InputMaybe<Pokemonspeciesflavortext_Aggregate_Order_By>;
  pokemonspeciesnames_aggregate?: InputMaybe<Pokemonspeciesname_Aggregate_Order_By>;
  pokemonspecy?: InputMaybe<Pokemonspecies_Order_By>;
};

/** select columns of table "pokemon_v2_pokemonspecies" */
export enum Pokemonspecies_Select_Column {
  /** column name */
  BaseHappiness = 'base_happiness',
  /** column name */
  CaptureRate = 'capture_rate',
  /** column name */
  EvolutionChainId = 'evolution_chain_id',
  /** column name */
  EvolvesFromSpeciesId = 'evolves_from_species_id',
  /** column name */
  FormsSwitchable = 'forms_switchable',
  /** column name */
  GenderRate = 'gender_rate',
  /** column name */
  GenerationId = 'generation_id',
  /** column name */
  GrowthRateId = 'growth_rate_id',
  /** column name */
  HasGenderDifferences = 'has_gender_differences',
  /** column name */
  HatchCounter = 'hatch_counter',
  /** column name */
  Id = 'id',
  /** column name */
  IsBaby = 'is_baby',
  /** column name */
  IsLegendary = 'is_legendary',
  /** column name */
  IsMythical = 'is_mythical',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  PokemonColorId = 'pokemon_color_id',
  /** column name */
  PokemonHabitatId = 'pokemon_habitat_id',
  /** column name */
  PokemonShapeId = 'pokemon_shape_id'
}

/** select "pokemonspecies_aggregate_bool_exp_bool_and_arguments_columns" columns of table "pokemon_v2_pokemonspecies" */
export enum Pokemonspecies_Select_Column_Pokemonspecies_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  FormsSwitchable = 'forms_switchable',
  /** column name */
  HasGenderDifferences = 'has_gender_differences',
  /** column name */
  IsBaby = 'is_baby',
  /** column name */
  IsLegendary = 'is_legendary',
  /** column name */
  IsMythical = 'is_mythical'
}

/** select "pokemonspecies_aggregate_bool_exp_bool_or_arguments_columns" columns of table "pokemon_v2_pokemonspecies" */
export enum Pokemonspecies_Select_Column_Pokemonspecies_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  FormsSwitchable = 'forms_switchable',
  /** column name */
  HasGenderDifferences = 'has_gender_differences',
  /** column name */
  IsBaby = 'is_baby',
  /** column name */
  IsLegendary = 'is_legendary',
  /** column name */
  IsMythical = 'is_mythical'
}

/** aggregate stddev on columns */
export type Pokemonspecies_Stddev_Fields = {
  __typename?: 'pokemonspecies_stddev_fields';
  base_happiness?: Maybe<Scalars['Float']['output']>;
  capture_rate?: Maybe<Scalars['Float']['output']>;
  evolution_chain_id?: Maybe<Scalars['Float']['output']>;
  evolves_from_species_id?: Maybe<Scalars['Float']['output']>;
  gender_rate?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  hatch_counter?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_color_id?: Maybe<Scalars['Float']['output']>;
  pokemon_habitat_id?: Maybe<Scalars['Float']['output']>;
  pokemon_shape_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_pokemonspecies" */
export type Pokemonspecies_Stddev_Order_By = {
  base_happiness?: InputMaybe<Order_By>;
  capture_rate?: InputMaybe<Order_By>;
  evolution_chain_id?: InputMaybe<Order_By>;
  evolves_from_species_id?: InputMaybe<Order_By>;
  gender_rate?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  growth_rate_id?: InputMaybe<Order_By>;
  hatch_counter?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  pokemon_color_id?: InputMaybe<Order_By>;
  pokemon_habitat_id?: InputMaybe<Order_By>;
  pokemon_shape_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Pokemonspecies_Stddev_Pop_Fields = {
  __typename?: 'pokemonspecies_stddev_pop_fields';
  base_happiness?: Maybe<Scalars['Float']['output']>;
  capture_rate?: Maybe<Scalars['Float']['output']>;
  evolution_chain_id?: Maybe<Scalars['Float']['output']>;
  evolves_from_species_id?: Maybe<Scalars['Float']['output']>;
  gender_rate?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  hatch_counter?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_color_id?: Maybe<Scalars['Float']['output']>;
  pokemon_habitat_id?: Maybe<Scalars['Float']['output']>;
  pokemon_shape_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_pokemonspecies" */
export type Pokemonspecies_Stddev_Pop_Order_By = {
  base_happiness?: InputMaybe<Order_By>;
  capture_rate?: InputMaybe<Order_By>;
  evolution_chain_id?: InputMaybe<Order_By>;
  evolves_from_species_id?: InputMaybe<Order_By>;
  gender_rate?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  growth_rate_id?: InputMaybe<Order_By>;
  hatch_counter?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  pokemon_color_id?: InputMaybe<Order_By>;
  pokemon_habitat_id?: InputMaybe<Order_By>;
  pokemon_shape_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Pokemonspecies_Stddev_Samp_Fields = {
  __typename?: 'pokemonspecies_stddev_samp_fields';
  base_happiness?: Maybe<Scalars['Float']['output']>;
  capture_rate?: Maybe<Scalars['Float']['output']>;
  evolution_chain_id?: Maybe<Scalars['Float']['output']>;
  evolves_from_species_id?: Maybe<Scalars['Float']['output']>;
  gender_rate?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  hatch_counter?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_color_id?: Maybe<Scalars['Float']['output']>;
  pokemon_habitat_id?: Maybe<Scalars['Float']['output']>;
  pokemon_shape_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_pokemonspecies" */
export type Pokemonspecies_Stddev_Samp_Order_By = {
  base_happiness?: InputMaybe<Order_By>;
  capture_rate?: InputMaybe<Order_By>;
  evolution_chain_id?: InputMaybe<Order_By>;
  evolves_from_species_id?: InputMaybe<Order_By>;
  gender_rate?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  growth_rate_id?: InputMaybe<Order_By>;
  hatch_counter?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  pokemon_color_id?: InputMaybe<Order_By>;
  pokemon_habitat_id?: InputMaybe<Order_By>;
  pokemon_shape_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Pokemonspecies_Sum_Fields = {
  __typename?: 'pokemonspecies_sum_fields';
  base_happiness?: Maybe<Scalars['Int']['output']>;
  capture_rate?: Maybe<Scalars['Int']['output']>;
  evolution_chain_id?: Maybe<Scalars['Int']['output']>;
  evolves_from_species_id?: Maybe<Scalars['Int']['output']>;
  gender_rate?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  growth_rate_id?: Maybe<Scalars['Int']['output']>;
  hatch_counter?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
  pokemon_color_id?: Maybe<Scalars['Int']['output']>;
  pokemon_habitat_id?: Maybe<Scalars['Int']['output']>;
  pokemon_shape_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_pokemonspecies" */
export type Pokemonspecies_Sum_Order_By = {
  base_happiness?: InputMaybe<Order_By>;
  capture_rate?: InputMaybe<Order_By>;
  evolution_chain_id?: InputMaybe<Order_By>;
  evolves_from_species_id?: InputMaybe<Order_By>;
  gender_rate?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  growth_rate_id?: InputMaybe<Order_By>;
  hatch_counter?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  pokemon_color_id?: InputMaybe<Order_By>;
  pokemon_habitat_id?: InputMaybe<Order_By>;
  pokemon_shape_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Pokemonspecies_Var_Pop_Fields = {
  __typename?: 'pokemonspecies_var_pop_fields';
  base_happiness?: Maybe<Scalars['Float']['output']>;
  capture_rate?: Maybe<Scalars['Float']['output']>;
  evolution_chain_id?: Maybe<Scalars['Float']['output']>;
  evolves_from_species_id?: Maybe<Scalars['Float']['output']>;
  gender_rate?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  hatch_counter?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_color_id?: Maybe<Scalars['Float']['output']>;
  pokemon_habitat_id?: Maybe<Scalars['Float']['output']>;
  pokemon_shape_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_pokemonspecies" */
export type Pokemonspecies_Var_Pop_Order_By = {
  base_happiness?: InputMaybe<Order_By>;
  capture_rate?: InputMaybe<Order_By>;
  evolution_chain_id?: InputMaybe<Order_By>;
  evolves_from_species_id?: InputMaybe<Order_By>;
  gender_rate?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  growth_rate_id?: InputMaybe<Order_By>;
  hatch_counter?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  pokemon_color_id?: InputMaybe<Order_By>;
  pokemon_habitat_id?: InputMaybe<Order_By>;
  pokemon_shape_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Pokemonspecies_Var_Samp_Fields = {
  __typename?: 'pokemonspecies_var_samp_fields';
  base_happiness?: Maybe<Scalars['Float']['output']>;
  capture_rate?: Maybe<Scalars['Float']['output']>;
  evolution_chain_id?: Maybe<Scalars['Float']['output']>;
  evolves_from_species_id?: Maybe<Scalars['Float']['output']>;
  gender_rate?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  hatch_counter?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_color_id?: Maybe<Scalars['Float']['output']>;
  pokemon_habitat_id?: Maybe<Scalars['Float']['output']>;
  pokemon_shape_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_pokemonspecies" */
export type Pokemonspecies_Var_Samp_Order_By = {
  base_happiness?: InputMaybe<Order_By>;
  capture_rate?: InputMaybe<Order_By>;
  evolution_chain_id?: InputMaybe<Order_By>;
  evolves_from_species_id?: InputMaybe<Order_By>;
  gender_rate?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  growth_rate_id?: InputMaybe<Order_By>;
  hatch_counter?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  pokemon_color_id?: InputMaybe<Order_By>;
  pokemon_habitat_id?: InputMaybe<Order_By>;
  pokemon_shape_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Pokemonspecies_Variance_Fields = {
  __typename?: 'pokemonspecies_variance_fields';
  base_happiness?: Maybe<Scalars['Float']['output']>;
  capture_rate?: Maybe<Scalars['Float']['output']>;
  evolution_chain_id?: Maybe<Scalars['Float']['output']>;
  evolves_from_species_id?: Maybe<Scalars['Float']['output']>;
  gender_rate?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  growth_rate_id?: Maybe<Scalars['Float']['output']>;
  hatch_counter?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  pokemon_color_id?: Maybe<Scalars['Float']['output']>;
  pokemon_habitat_id?: Maybe<Scalars['Float']['output']>;
  pokemon_shape_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_pokemonspecies" */
export type Pokemonspecies_Variance_Order_By = {
  base_happiness?: InputMaybe<Order_By>;
  capture_rate?: InputMaybe<Order_By>;
  evolution_chain_id?: InputMaybe<Order_By>;
  evolves_from_species_id?: InputMaybe<Order_By>;
  gender_rate?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  growth_rate_id?: InputMaybe<Order_By>;
  hatch_counter?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  pokemon_color_id?: InputMaybe<Order_By>;
  pokemon_habitat_id?: InputMaybe<Order_By>;
  pokemon_shape_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_pokemonspeciesdescription" */
export type Pokemonspeciesdescription = {
  __typename?: 'pokemonspeciesdescription';
  description: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  pokemonspecy?: Maybe<Pokemonspecies>;
};

/** aggregated selection of "pokemon_v2_pokemonspeciesdescription" */
export type Pokemonspeciesdescription_Aggregate = {
  __typename?: 'pokemonspeciesdescription_aggregate';
  aggregate?: Maybe<Pokemonspeciesdescription_Aggregate_Fields>;
  nodes: Array<Pokemonspeciesdescription>;
};

export type Pokemonspeciesdescription_Aggregate_Bool_Exp = {
  count?: InputMaybe<Pokemonspeciesdescription_Aggregate_Bool_Exp_Count>;
};

export type Pokemonspeciesdescription_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Pokemonspeciesdescription_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Pokemonspeciesdescription_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_pokemonspeciesdescription" */
export type Pokemonspeciesdescription_Aggregate_Fields = {
  __typename?: 'pokemonspeciesdescription_aggregate_fields';
  avg?: Maybe<Pokemonspeciesdescription_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemonspeciesdescription_Max_Fields>;
  min?: Maybe<Pokemonspeciesdescription_Min_Fields>;
  stddev?: Maybe<Pokemonspeciesdescription_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemonspeciesdescription_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemonspeciesdescription_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemonspeciesdescription_Sum_Fields>;
  var_pop?: Maybe<Pokemonspeciesdescription_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemonspeciesdescription_Var_Samp_Fields>;
  variance?: Maybe<Pokemonspeciesdescription_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemonspeciesdescription" */
export type Pokemonspeciesdescription_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemonspeciesdescription_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_pokemonspeciesdescription" */
export type Pokemonspeciesdescription_Aggregate_Order_By = {
  avg?: InputMaybe<Pokemonspeciesdescription_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Pokemonspeciesdescription_Max_Order_By>;
  min?: InputMaybe<Pokemonspeciesdescription_Min_Order_By>;
  stddev?: InputMaybe<Pokemonspeciesdescription_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Pokemonspeciesdescription_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Pokemonspeciesdescription_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Pokemonspeciesdescription_Sum_Order_By>;
  var_pop?: InputMaybe<Pokemonspeciesdescription_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Pokemonspeciesdescription_Var_Samp_Order_By>;
  variance?: InputMaybe<Pokemonspeciesdescription_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Pokemonspeciesdescription_Avg_Fields = {
  __typename?: 'pokemonspeciesdescription_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_pokemonspeciesdescription" */
export type Pokemonspeciesdescription_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemonspeciesdescription". All fields are combined with a logical 'AND'. */
export type Pokemonspeciesdescription_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemonspeciesdescription_Bool_Exp>>;
  _not?: InputMaybe<Pokemonspeciesdescription_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemonspeciesdescription_Bool_Exp>>;
  description?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  pokemon_species_id?: InputMaybe<Int_Comparison_Exp>;
  pokemonspecy?: InputMaybe<Pokemonspecies_Bool_Exp>;
};

/** aggregate max on columns */
export type Pokemonspeciesdescription_Max_Fields = {
  __typename?: 'pokemonspeciesdescription_max_fields';
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_pokemonspeciesdescription" */
export type Pokemonspeciesdescription_Max_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Pokemonspeciesdescription_Min_Fields = {
  __typename?: 'pokemonspeciesdescription_min_fields';
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_pokemonspeciesdescription" */
export type Pokemonspeciesdescription_Min_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemonspeciesdescription". */
export type Pokemonspeciesdescription_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
  pokemonspecy?: InputMaybe<Pokemonspecies_Order_By>;
};

/** select columns of table "pokemon_v2_pokemonspeciesdescription" */
export enum Pokemonspeciesdescription_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  PokemonSpeciesId = 'pokemon_species_id'
}

/** aggregate stddev on columns */
export type Pokemonspeciesdescription_Stddev_Fields = {
  __typename?: 'pokemonspeciesdescription_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_pokemonspeciesdescription" */
export type Pokemonspeciesdescription_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Pokemonspeciesdescription_Stddev_Pop_Fields = {
  __typename?: 'pokemonspeciesdescription_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_pokemonspeciesdescription" */
export type Pokemonspeciesdescription_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Pokemonspeciesdescription_Stddev_Samp_Fields = {
  __typename?: 'pokemonspeciesdescription_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_pokemonspeciesdescription" */
export type Pokemonspeciesdescription_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Pokemonspeciesdescription_Sum_Fields = {
  __typename?: 'pokemonspeciesdescription_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_pokemonspeciesdescription" */
export type Pokemonspeciesdescription_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Pokemonspeciesdescription_Var_Pop_Fields = {
  __typename?: 'pokemonspeciesdescription_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_pokemonspeciesdescription" */
export type Pokemonspeciesdescription_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Pokemonspeciesdescription_Var_Samp_Fields = {
  __typename?: 'pokemonspeciesdescription_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_pokemonspeciesdescription" */
export type Pokemonspeciesdescription_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Pokemonspeciesdescription_Variance_Fields = {
  __typename?: 'pokemonspeciesdescription_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_pokemonspeciesdescription" */
export type Pokemonspeciesdescription_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_pokemonspeciesflavortext" */
export type Pokemonspeciesflavortext = {
  __typename?: 'pokemonspeciesflavortext';
  flavor_text: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  pokemonspecy?: Maybe<Pokemonspecies>;
  /** An object relationship */
  version?: Maybe<Version>;
  version_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_pokemonspeciesflavortext" */
export type Pokemonspeciesflavortext_Aggregate = {
  __typename?: 'pokemonspeciesflavortext_aggregate';
  aggregate?: Maybe<Pokemonspeciesflavortext_Aggregate_Fields>;
  nodes: Array<Pokemonspeciesflavortext>;
};

export type Pokemonspeciesflavortext_Aggregate_Bool_Exp = {
  count?: InputMaybe<Pokemonspeciesflavortext_Aggregate_Bool_Exp_Count>;
};

export type Pokemonspeciesflavortext_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Pokemonspeciesflavortext_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Pokemonspeciesflavortext_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_pokemonspeciesflavortext" */
export type Pokemonspeciesflavortext_Aggregate_Fields = {
  __typename?: 'pokemonspeciesflavortext_aggregate_fields';
  avg?: Maybe<Pokemonspeciesflavortext_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemonspeciesflavortext_Max_Fields>;
  min?: Maybe<Pokemonspeciesflavortext_Min_Fields>;
  stddev?: Maybe<Pokemonspeciesflavortext_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemonspeciesflavortext_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemonspeciesflavortext_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemonspeciesflavortext_Sum_Fields>;
  var_pop?: Maybe<Pokemonspeciesflavortext_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemonspeciesflavortext_Var_Samp_Fields>;
  variance?: Maybe<Pokemonspeciesflavortext_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemonspeciesflavortext" */
export type Pokemonspeciesflavortext_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemonspeciesflavortext_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_pokemonspeciesflavortext" */
export type Pokemonspeciesflavortext_Aggregate_Order_By = {
  avg?: InputMaybe<Pokemonspeciesflavortext_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Pokemonspeciesflavortext_Max_Order_By>;
  min?: InputMaybe<Pokemonspeciesflavortext_Min_Order_By>;
  stddev?: InputMaybe<Pokemonspeciesflavortext_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Pokemonspeciesflavortext_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Pokemonspeciesflavortext_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Pokemonspeciesflavortext_Sum_Order_By>;
  var_pop?: InputMaybe<Pokemonspeciesflavortext_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Pokemonspeciesflavortext_Var_Samp_Order_By>;
  variance?: InputMaybe<Pokemonspeciesflavortext_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Pokemonspeciesflavortext_Avg_Fields = {
  __typename?: 'pokemonspeciesflavortext_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_pokemonspeciesflavortext" */
export type Pokemonspeciesflavortext_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemonspeciesflavortext". All fields are combined with a logical 'AND'. */
export type Pokemonspeciesflavortext_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemonspeciesflavortext_Bool_Exp>>;
  _not?: InputMaybe<Pokemonspeciesflavortext_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemonspeciesflavortext_Bool_Exp>>;
  flavor_text?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  pokemon_species_id?: InputMaybe<Int_Comparison_Exp>;
  pokemonspecy?: InputMaybe<Pokemonspecies_Bool_Exp>;
  version?: InputMaybe<Version_Bool_Exp>;
  version_id?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Pokemonspeciesflavortext_Max_Fields = {
  __typename?: 'pokemonspeciesflavortext_max_fields';
  flavor_text?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
  version_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_pokemonspeciesflavortext" */
export type Pokemonspeciesflavortext_Max_Order_By = {
  flavor_text?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Pokemonspeciesflavortext_Min_Fields = {
  __typename?: 'pokemonspeciesflavortext_min_fields';
  flavor_text?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
  version_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_pokemonspeciesflavortext" */
export type Pokemonspeciesflavortext_Min_Order_By = {
  flavor_text?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemonspeciesflavortext". */
export type Pokemonspeciesflavortext_Order_By = {
  flavor_text?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
  pokemonspecy?: InputMaybe<Pokemonspecies_Order_By>;
  version?: InputMaybe<Version_Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_pokemonspeciesflavortext" */
export enum Pokemonspeciesflavortext_Select_Column {
  /** column name */
  FlavorText = 'flavor_text',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  PokemonSpeciesId = 'pokemon_species_id',
  /** column name */
  VersionId = 'version_id'
}

/** aggregate stddev on columns */
export type Pokemonspeciesflavortext_Stddev_Fields = {
  __typename?: 'pokemonspeciesflavortext_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_pokemonspeciesflavortext" */
export type Pokemonspeciesflavortext_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Pokemonspeciesflavortext_Stddev_Pop_Fields = {
  __typename?: 'pokemonspeciesflavortext_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_pokemonspeciesflavortext" */
export type Pokemonspeciesflavortext_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Pokemonspeciesflavortext_Stddev_Samp_Fields = {
  __typename?: 'pokemonspeciesflavortext_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_pokemonspeciesflavortext" */
export type Pokemonspeciesflavortext_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Pokemonspeciesflavortext_Sum_Fields = {
  __typename?: 'pokemonspeciesflavortext_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
  version_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_pokemonspeciesflavortext" */
export type Pokemonspeciesflavortext_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Pokemonspeciesflavortext_Var_Pop_Fields = {
  __typename?: 'pokemonspeciesflavortext_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_pokemonspeciesflavortext" */
export type Pokemonspeciesflavortext_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Pokemonspeciesflavortext_Var_Samp_Fields = {
  __typename?: 'pokemonspeciesflavortext_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_pokemonspeciesflavortext" */
export type Pokemonspeciesflavortext_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Pokemonspeciesflavortext_Variance_Fields = {
  __typename?: 'pokemonspeciesflavortext_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_pokemonspeciesflavortext" */
export type Pokemonspeciesflavortext_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_pokemonspeciesname" */
export type Pokemonspeciesname = {
  __typename?: 'pokemonspeciesname';
  genus: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  pokemonspecy?: Maybe<Pokemonspecies>;
};

/** aggregated selection of "pokemon_v2_pokemonspeciesname" */
export type Pokemonspeciesname_Aggregate = {
  __typename?: 'pokemonspeciesname_aggregate';
  aggregate?: Maybe<Pokemonspeciesname_Aggregate_Fields>;
  nodes: Array<Pokemonspeciesname>;
};

export type Pokemonspeciesname_Aggregate_Bool_Exp = {
  count?: InputMaybe<Pokemonspeciesname_Aggregate_Bool_Exp_Count>;
};

export type Pokemonspeciesname_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Pokemonspeciesname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Pokemonspeciesname_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_pokemonspeciesname" */
export type Pokemonspeciesname_Aggregate_Fields = {
  __typename?: 'pokemonspeciesname_aggregate_fields';
  avg?: Maybe<Pokemonspeciesname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemonspeciesname_Max_Fields>;
  min?: Maybe<Pokemonspeciesname_Min_Fields>;
  stddev?: Maybe<Pokemonspeciesname_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemonspeciesname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemonspeciesname_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemonspeciesname_Sum_Fields>;
  var_pop?: Maybe<Pokemonspeciesname_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemonspeciesname_Var_Samp_Fields>;
  variance?: Maybe<Pokemonspeciesname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemonspeciesname" */
export type Pokemonspeciesname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemonspeciesname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_pokemonspeciesname" */
export type Pokemonspeciesname_Aggregate_Order_By = {
  avg?: InputMaybe<Pokemonspeciesname_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Pokemonspeciesname_Max_Order_By>;
  min?: InputMaybe<Pokemonspeciesname_Min_Order_By>;
  stddev?: InputMaybe<Pokemonspeciesname_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Pokemonspeciesname_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Pokemonspeciesname_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Pokemonspeciesname_Sum_Order_By>;
  var_pop?: InputMaybe<Pokemonspeciesname_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Pokemonspeciesname_Var_Samp_Order_By>;
  variance?: InputMaybe<Pokemonspeciesname_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Pokemonspeciesname_Avg_Fields = {
  __typename?: 'pokemonspeciesname_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_pokemonspeciesname" */
export type Pokemonspeciesname_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemonspeciesname". All fields are combined with a logical 'AND'. */
export type Pokemonspeciesname_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemonspeciesname_Bool_Exp>>;
  _not?: InputMaybe<Pokemonspeciesname_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemonspeciesname_Bool_Exp>>;
  genus?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  pokemon_species_id?: InputMaybe<Int_Comparison_Exp>;
  pokemonspecy?: InputMaybe<Pokemonspecies_Bool_Exp>;
};

/** aggregate max on columns */
export type Pokemonspeciesname_Max_Fields = {
  __typename?: 'pokemonspeciesname_max_fields';
  genus?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_pokemonspeciesname" */
export type Pokemonspeciesname_Max_Order_By = {
  genus?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Pokemonspeciesname_Min_Fields = {
  __typename?: 'pokemonspeciesname_min_fields';
  genus?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_pokemonspeciesname" */
export type Pokemonspeciesname_Min_Order_By = {
  genus?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemonspeciesname". */
export type Pokemonspeciesname_Order_By = {
  genus?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
  pokemonspecy?: InputMaybe<Pokemonspecies_Order_By>;
};

/** select columns of table "pokemon_v2_pokemonspeciesname" */
export enum Pokemonspeciesname_Select_Column {
  /** column name */
  Genus = 'genus',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name',
  /** column name */
  PokemonSpeciesId = 'pokemon_species_id'
}

/** aggregate stddev on columns */
export type Pokemonspeciesname_Stddev_Fields = {
  __typename?: 'pokemonspeciesname_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_pokemonspeciesname" */
export type Pokemonspeciesname_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Pokemonspeciesname_Stddev_Pop_Fields = {
  __typename?: 'pokemonspeciesname_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_pokemonspeciesname" */
export type Pokemonspeciesname_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Pokemonspeciesname_Stddev_Samp_Fields = {
  __typename?: 'pokemonspeciesname_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_pokemonspeciesname" */
export type Pokemonspeciesname_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Pokemonspeciesname_Sum_Fields = {
  __typename?: 'pokemonspeciesname_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  pokemon_species_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_pokemonspeciesname" */
export type Pokemonspeciesname_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Pokemonspeciesname_Var_Pop_Fields = {
  __typename?: 'pokemonspeciesname_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_pokemonspeciesname" */
export type Pokemonspeciesname_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Pokemonspeciesname_Var_Samp_Fields = {
  __typename?: 'pokemonspeciesname_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_pokemonspeciesname" */
export type Pokemonspeciesname_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Pokemonspeciesname_Variance_Fields = {
  __typename?: 'pokemonspeciesname_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  pokemon_species_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_pokemonspeciesname" */
export type Pokemonspeciesname_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  pokemon_species_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_pokemonsprites" */
export type Pokemonsprites = {
  __typename?: 'pokemonsprites';
  id: Scalars['Int']['output'];
  /** An object relationship */
  pokemon?: Maybe<Pokemon>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  sprites: Scalars['jsonb']['output'];
};


/** columns and relationships of "pokemon_v2_pokemonsprites" */
export type PokemonspritesSpritesArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "pokemon_v2_pokemonsprites" */
export type Pokemonsprites_Aggregate = {
  __typename?: 'pokemonsprites_aggregate';
  aggregate?: Maybe<Pokemonsprites_Aggregate_Fields>;
  nodes: Array<Pokemonsprites>;
};

export type Pokemonsprites_Aggregate_Bool_Exp = {
  count?: InputMaybe<Pokemonsprites_Aggregate_Bool_Exp_Count>;
};

export type Pokemonsprites_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Pokemonsprites_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Pokemonsprites_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_pokemonsprites" */
export type Pokemonsprites_Aggregate_Fields = {
  __typename?: 'pokemonsprites_aggregate_fields';
  avg?: Maybe<Pokemonsprites_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemonsprites_Max_Fields>;
  min?: Maybe<Pokemonsprites_Min_Fields>;
  stddev?: Maybe<Pokemonsprites_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemonsprites_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemonsprites_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemonsprites_Sum_Fields>;
  var_pop?: Maybe<Pokemonsprites_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemonsprites_Var_Samp_Fields>;
  variance?: Maybe<Pokemonsprites_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemonsprites" */
export type Pokemonsprites_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemonsprites_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_pokemonsprites" */
export type Pokemonsprites_Aggregate_Order_By = {
  avg?: InputMaybe<Pokemonsprites_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Pokemonsprites_Max_Order_By>;
  min?: InputMaybe<Pokemonsprites_Min_Order_By>;
  stddev?: InputMaybe<Pokemonsprites_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Pokemonsprites_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Pokemonsprites_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Pokemonsprites_Sum_Order_By>;
  var_pop?: InputMaybe<Pokemonsprites_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Pokemonsprites_Var_Samp_Order_By>;
  variance?: InputMaybe<Pokemonsprites_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Pokemonsprites_Avg_Fields = {
  __typename?: 'pokemonsprites_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_pokemonsprites" */
export type Pokemonsprites_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemonsprites". All fields are combined with a logical 'AND'. */
export type Pokemonsprites_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemonsprites_Bool_Exp>>;
  _not?: InputMaybe<Pokemonsprites_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemonsprites_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  pokemon?: InputMaybe<Pokemon_Bool_Exp>;
  pokemon_id?: InputMaybe<Int_Comparison_Exp>;
  sprites?: InputMaybe<Jsonb_Comparison_Exp>;
};

/** aggregate max on columns */
export type Pokemonsprites_Max_Fields = {
  __typename?: 'pokemonsprites_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_pokemonsprites" */
export type Pokemonsprites_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Pokemonsprites_Min_Fields = {
  __typename?: 'pokemonsprites_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_pokemonsprites" */
export type Pokemonsprites_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemonsprites". */
export type Pokemonsprites_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon?: InputMaybe<Pokemon_Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  sprites?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_pokemonsprites" */
export enum Pokemonsprites_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  PokemonId = 'pokemon_id',
  /** column name */
  Sprites = 'sprites'
}

/** aggregate stddev on columns */
export type Pokemonsprites_Stddev_Fields = {
  __typename?: 'pokemonsprites_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_pokemonsprites" */
export type Pokemonsprites_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Pokemonsprites_Stddev_Pop_Fields = {
  __typename?: 'pokemonsprites_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_pokemonsprites" */
export type Pokemonsprites_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Pokemonsprites_Stddev_Samp_Fields = {
  __typename?: 'pokemonsprites_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_pokemonsprites" */
export type Pokemonsprites_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Pokemonsprites_Sum_Fields = {
  __typename?: 'pokemonsprites_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_pokemonsprites" */
export type Pokemonsprites_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Pokemonsprites_Var_Pop_Fields = {
  __typename?: 'pokemonsprites_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_pokemonsprites" */
export type Pokemonsprites_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Pokemonsprites_Var_Samp_Fields = {
  __typename?: 'pokemonsprites_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_pokemonsprites" */
export type Pokemonsprites_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Pokemonsprites_Variance_Fields = {
  __typename?: 'pokemonsprites_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_pokemonsprites" */
export type Pokemonsprites_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_pokemonstat" */
export type Pokemonstat = {
  __typename?: 'pokemonstat';
  base_stat: Scalars['Int']['output'];
  effort: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  /** An object relationship */
  pokemon?: Maybe<Pokemon>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  stat?: Maybe<Stat>;
  stat_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_pokemonstat" */
export type Pokemonstat_Aggregate = {
  __typename?: 'pokemonstat_aggregate';
  aggregate?: Maybe<Pokemonstat_Aggregate_Fields>;
  nodes: Array<Pokemonstat>;
};

export type Pokemonstat_Aggregate_Bool_Exp = {
  count?: InputMaybe<Pokemonstat_Aggregate_Bool_Exp_Count>;
};

export type Pokemonstat_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Pokemonstat_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Pokemonstat_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_pokemonstat" */
export type Pokemonstat_Aggregate_Fields = {
  __typename?: 'pokemonstat_aggregate_fields';
  avg?: Maybe<Pokemonstat_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemonstat_Max_Fields>;
  min?: Maybe<Pokemonstat_Min_Fields>;
  stddev?: Maybe<Pokemonstat_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemonstat_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemonstat_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemonstat_Sum_Fields>;
  var_pop?: Maybe<Pokemonstat_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemonstat_Var_Samp_Fields>;
  variance?: Maybe<Pokemonstat_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemonstat" */
export type Pokemonstat_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemonstat_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_pokemonstat" */
export type Pokemonstat_Aggregate_Order_By = {
  avg?: InputMaybe<Pokemonstat_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Pokemonstat_Max_Order_By>;
  min?: InputMaybe<Pokemonstat_Min_Order_By>;
  stddev?: InputMaybe<Pokemonstat_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Pokemonstat_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Pokemonstat_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Pokemonstat_Sum_Order_By>;
  var_pop?: InputMaybe<Pokemonstat_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Pokemonstat_Var_Samp_Order_By>;
  variance?: InputMaybe<Pokemonstat_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Pokemonstat_Avg_Fields = {
  __typename?: 'pokemonstat_avg_fields';
  base_stat?: Maybe<Scalars['Float']['output']>;
  effort?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_pokemonstat" */
export type Pokemonstat_Avg_Order_By = {
  base_stat?: InputMaybe<Order_By>;
  effort?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  stat_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemonstat". All fields are combined with a logical 'AND'. */
export type Pokemonstat_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemonstat_Bool_Exp>>;
  _not?: InputMaybe<Pokemonstat_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemonstat_Bool_Exp>>;
  base_stat?: InputMaybe<Int_Comparison_Exp>;
  effort?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  pokemon?: InputMaybe<Pokemon_Bool_Exp>;
  pokemon_id?: InputMaybe<Int_Comparison_Exp>;
  stat?: InputMaybe<Stat_Bool_Exp>;
  stat_id?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Pokemonstat_Max_Fields = {
  __typename?: 'pokemonstat_max_fields';
  base_stat?: Maybe<Scalars['Int']['output']>;
  effort?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  stat_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_pokemonstat" */
export type Pokemonstat_Max_Order_By = {
  base_stat?: InputMaybe<Order_By>;
  effort?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  stat_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Pokemonstat_Min_Fields = {
  __typename?: 'pokemonstat_min_fields';
  base_stat?: Maybe<Scalars['Int']['output']>;
  effort?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  stat_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_pokemonstat" */
export type Pokemonstat_Min_Order_By = {
  base_stat?: InputMaybe<Order_By>;
  effort?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  stat_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemonstat". */
export type Pokemonstat_Order_By = {
  base_stat?: InputMaybe<Order_By>;
  effort?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon?: InputMaybe<Pokemon_Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  stat?: InputMaybe<Stat_Order_By>;
  stat_id?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_pokemonstat" */
export enum Pokemonstat_Select_Column {
  /** column name */
  BaseStat = 'base_stat',
  /** column name */
  Effort = 'effort',
  /** column name */
  Id = 'id',
  /** column name */
  PokemonId = 'pokemon_id',
  /** column name */
  StatId = 'stat_id'
}

/** aggregate stddev on columns */
export type Pokemonstat_Stddev_Fields = {
  __typename?: 'pokemonstat_stddev_fields';
  base_stat?: Maybe<Scalars['Float']['output']>;
  effort?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_pokemonstat" */
export type Pokemonstat_Stddev_Order_By = {
  base_stat?: InputMaybe<Order_By>;
  effort?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  stat_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Pokemonstat_Stddev_Pop_Fields = {
  __typename?: 'pokemonstat_stddev_pop_fields';
  base_stat?: Maybe<Scalars['Float']['output']>;
  effort?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_pokemonstat" */
export type Pokemonstat_Stddev_Pop_Order_By = {
  base_stat?: InputMaybe<Order_By>;
  effort?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  stat_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Pokemonstat_Stddev_Samp_Fields = {
  __typename?: 'pokemonstat_stddev_samp_fields';
  base_stat?: Maybe<Scalars['Float']['output']>;
  effort?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_pokemonstat" */
export type Pokemonstat_Stddev_Samp_Order_By = {
  base_stat?: InputMaybe<Order_By>;
  effort?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  stat_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Pokemonstat_Sum_Fields = {
  __typename?: 'pokemonstat_sum_fields';
  base_stat?: Maybe<Scalars['Int']['output']>;
  effort?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  stat_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_pokemonstat" */
export type Pokemonstat_Sum_Order_By = {
  base_stat?: InputMaybe<Order_By>;
  effort?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  stat_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Pokemonstat_Var_Pop_Fields = {
  __typename?: 'pokemonstat_var_pop_fields';
  base_stat?: Maybe<Scalars['Float']['output']>;
  effort?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_pokemonstat" */
export type Pokemonstat_Var_Pop_Order_By = {
  base_stat?: InputMaybe<Order_By>;
  effort?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  stat_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Pokemonstat_Var_Samp_Fields = {
  __typename?: 'pokemonstat_var_samp_fields';
  base_stat?: Maybe<Scalars['Float']['output']>;
  effort?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_pokemonstat" */
export type Pokemonstat_Var_Samp_Order_By = {
  base_stat?: InputMaybe<Order_By>;
  effort?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  stat_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Pokemonstat_Variance_Fields = {
  __typename?: 'pokemonstat_variance_fields';
  base_stat?: Maybe<Scalars['Float']['output']>;
  effort?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_pokemonstat" */
export type Pokemonstat_Variance_Order_By = {
  base_stat?: InputMaybe<Order_By>;
  effort?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  stat_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_pokemontype" */
export type Pokemontype = {
  __typename?: 'pokemontype';
  id: Scalars['Int']['output'];
  /** An object relationship */
  pokemon?: Maybe<Pokemon>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  slot: Scalars['Int']['output'];
  /** An object relationship */
  type?: Maybe<Type>;
  type_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_pokemontype" */
export type Pokemontype_Aggregate = {
  __typename?: 'pokemontype_aggregate';
  aggregate?: Maybe<Pokemontype_Aggregate_Fields>;
  nodes: Array<Pokemontype>;
};

export type Pokemontype_Aggregate_Bool_Exp = {
  count?: InputMaybe<Pokemontype_Aggregate_Bool_Exp_Count>;
};

export type Pokemontype_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Pokemontype_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Pokemontype_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_pokemontype" */
export type Pokemontype_Aggregate_Fields = {
  __typename?: 'pokemontype_aggregate_fields';
  avg?: Maybe<Pokemontype_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemontype_Max_Fields>;
  min?: Maybe<Pokemontype_Min_Fields>;
  stddev?: Maybe<Pokemontype_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemontype_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemontype_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemontype_Sum_Fields>;
  var_pop?: Maybe<Pokemontype_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemontype_Var_Samp_Fields>;
  variance?: Maybe<Pokemontype_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemontype" */
export type Pokemontype_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemontype_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_pokemontype" */
export type Pokemontype_Aggregate_Order_By = {
  avg?: InputMaybe<Pokemontype_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Pokemontype_Max_Order_By>;
  min?: InputMaybe<Pokemontype_Min_Order_By>;
  stddev?: InputMaybe<Pokemontype_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Pokemontype_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Pokemontype_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Pokemontype_Sum_Order_By>;
  var_pop?: InputMaybe<Pokemontype_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Pokemontype_Var_Samp_Order_By>;
  variance?: InputMaybe<Pokemontype_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Pokemontype_Avg_Fields = {
  __typename?: 'pokemontype_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_pokemontype" */
export type Pokemontype_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemontype". All fields are combined with a logical 'AND'. */
export type Pokemontype_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemontype_Bool_Exp>>;
  _not?: InputMaybe<Pokemontype_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemontype_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  pokemon?: InputMaybe<Pokemon_Bool_Exp>;
  pokemon_id?: InputMaybe<Int_Comparison_Exp>;
  slot?: InputMaybe<Int_Comparison_Exp>;
  type?: InputMaybe<Type_Bool_Exp>;
  type_id?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Pokemontype_Max_Fields = {
  __typename?: 'pokemontype_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  slot?: Maybe<Scalars['Int']['output']>;
  type_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_pokemontype" */
export type Pokemontype_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Pokemontype_Min_Fields = {
  __typename?: 'pokemontype_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  slot?: Maybe<Scalars['Int']['output']>;
  type_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_pokemontype" */
export type Pokemontype_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemontype". */
export type Pokemontype_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon?: InputMaybe<Pokemon_Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
  type?: InputMaybe<Type_Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_pokemontype" */
export enum Pokemontype_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  PokemonId = 'pokemon_id',
  /** column name */
  Slot = 'slot',
  /** column name */
  TypeId = 'type_id'
}

/** aggregate stddev on columns */
export type Pokemontype_Stddev_Fields = {
  __typename?: 'pokemontype_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_pokemontype" */
export type Pokemontype_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Pokemontype_Stddev_Pop_Fields = {
  __typename?: 'pokemontype_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_pokemontype" */
export type Pokemontype_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Pokemontype_Stddev_Samp_Fields = {
  __typename?: 'pokemontype_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_pokemontype" */
export type Pokemontype_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Pokemontype_Sum_Fields = {
  __typename?: 'pokemontype_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  slot?: Maybe<Scalars['Int']['output']>;
  type_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_pokemontype" */
export type Pokemontype_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Pokemontype_Var_Pop_Fields = {
  __typename?: 'pokemontype_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_pokemontype" */
export type Pokemontype_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Pokemontype_Var_Samp_Fields = {
  __typename?: 'pokemontype_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_pokemontype" */
export type Pokemontype_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Pokemontype_Variance_Fields = {
  __typename?: 'pokemontype_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_pokemontype" */
export type Pokemontype_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_pokemontypepast" */
export type Pokemontypepast = {
  __typename?: 'pokemontypepast';
  /** An object relationship */
  generation?: Maybe<Generation>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  /** An object relationship */
  pokemon?: Maybe<Pokemon>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  slot: Scalars['Int']['output'];
  /** An object relationship */
  type?: Maybe<Type>;
  type_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_pokemontypepast" */
export type Pokemontypepast_Aggregate = {
  __typename?: 'pokemontypepast_aggregate';
  aggregate?: Maybe<Pokemontypepast_Aggregate_Fields>;
  nodes: Array<Pokemontypepast>;
};

export type Pokemontypepast_Aggregate_Bool_Exp = {
  count?: InputMaybe<Pokemontypepast_Aggregate_Bool_Exp_Count>;
};

export type Pokemontypepast_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Pokemontypepast_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Pokemontypepast_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_pokemontypepast" */
export type Pokemontypepast_Aggregate_Fields = {
  __typename?: 'pokemontypepast_aggregate_fields';
  avg?: Maybe<Pokemontypepast_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Pokemontypepast_Max_Fields>;
  min?: Maybe<Pokemontypepast_Min_Fields>;
  stddev?: Maybe<Pokemontypepast_Stddev_Fields>;
  stddev_pop?: Maybe<Pokemontypepast_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pokemontypepast_Stddev_Samp_Fields>;
  sum?: Maybe<Pokemontypepast_Sum_Fields>;
  var_pop?: Maybe<Pokemontypepast_Var_Pop_Fields>;
  var_samp?: Maybe<Pokemontypepast_Var_Samp_Fields>;
  variance?: Maybe<Pokemontypepast_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_pokemontypepast" */
export type Pokemontypepast_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Pokemontypepast_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_pokemontypepast" */
export type Pokemontypepast_Aggregate_Order_By = {
  avg?: InputMaybe<Pokemontypepast_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Pokemontypepast_Max_Order_By>;
  min?: InputMaybe<Pokemontypepast_Min_Order_By>;
  stddev?: InputMaybe<Pokemontypepast_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Pokemontypepast_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Pokemontypepast_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Pokemontypepast_Sum_Order_By>;
  var_pop?: InputMaybe<Pokemontypepast_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Pokemontypepast_Var_Samp_Order_By>;
  variance?: InputMaybe<Pokemontypepast_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Pokemontypepast_Avg_Fields = {
  __typename?: 'pokemontypepast_avg_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_pokemontypepast" */
export type Pokemontypepast_Avg_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_pokemontypepast". All fields are combined with a logical 'AND'. */
export type Pokemontypepast_Bool_Exp = {
  _and?: InputMaybe<Array<Pokemontypepast_Bool_Exp>>;
  _not?: InputMaybe<Pokemontypepast_Bool_Exp>;
  _or?: InputMaybe<Array<Pokemontypepast_Bool_Exp>>;
  generation?: InputMaybe<Generation_Bool_Exp>;
  generation_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  pokemon?: InputMaybe<Pokemon_Bool_Exp>;
  pokemon_id?: InputMaybe<Int_Comparison_Exp>;
  slot?: InputMaybe<Int_Comparison_Exp>;
  type?: InputMaybe<Type_Bool_Exp>;
  type_id?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Pokemontypepast_Max_Fields = {
  __typename?: 'pokemontypepast_max_fields';
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  slot?: Maybe<Scalars['Int']['output']>;
  type_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_pokemontypepast" */
export type Pokemontypepast_Max_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Pokemontypepast_Min_Fields = {
  __typename?: 'pokemontypepast_min_fields';
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  slot?: Maybe<Scalars['Int']['output']>;
  type_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_pokemontypepast" */
export type Pokemontypepast_Min_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_pokemontypepast". */
export type Pokemontypepast_Order_By = {
  generation?: InputMaybe<Generation_Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon?: InputMaybe<Pokemon_Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
  type?: InputMaybe<Type_Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_pokemontypepast" */
export enum Pokemontypepast_Select_Column {
  /** column name */
  GenerationId = 'generation_id',
  /** column name */
  Id = 'id',
  /** column name */
  PokemonId = 'pokemon_id',
  /** column name */
  Slot = 'slot',
  /** column name */
  TypeId = 'type_id'
}

/** aggregate stddev on columns */
export type Pokemontypepast_Stddev_Fields = {
  __typename?: 'pokemontypepast_stddev_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_pokemontypepast" */
export type Pokemontypepast_Stddev_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Pokemontypepast_Stddev_Pop_Fields = {
  __typename?: 'pokemontypepast_stddev_pop_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_pokemontypepast" */
export type Pokemontypepast_Stddev_Pop_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Pokemontypepast_Stddev_Samp_Fields = {
  __typename?: 'pokemontypepast_stddev_samp_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_pokemontypepast" */
export type Pokemontypepast_Stddev_Samp_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Pokemontypepast_Sum_Fields = {
  __typename?: 'pokemontypepast_sum_fields';
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  pokemon_id?: Maybe<Scalars['Int']['output']>;
  slot?: Maybe<Scalars['Int']['output']>;
  type_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_pokemontypepast" */
export type Pokemontypepast_Sum_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Pokemontypepast_Var_Pop_Fields = {
  __typename?: 'pokemontypepast_var_pop_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_pokemontypepast" */
export type Pokemontypepast_Var_Pop_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Pokemontypepast_Var_Samp_Fields = {
  __typename?: 'pokemontypepast_var_samp_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_pokemontypepast" */
export type Pokemontypepast_Var_Samp_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Pokemontypepast_Variance_Fields = {
  __typename?: 'pokemontypepast_variance_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pokemon_id?: Maybe<Scalars['Float']['output']>;
  slot?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_pokemontypepast" */
export type Pokemontypepast_Variance_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pokemon_id?: InputMaybe<Order_By>;
  slot?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

export type Query_Root = {
  __typename?: 'query_root';
  /** fetch data from the table: "pokemon_v2_ability" */
  ability: Array<Ability>;
  /** fetch aggregated fields from the table: "pokemon_v2_ability" */
  ability_aggregate: Ability_Aggregate;
  /** fetch data from the table: "pokemon_v2_abilitychange" */
  abilitychange: Array<Abilitychange>;
  /** fetch aggregated fields from the table: "pokemon_v2_abilitychange" */
  abilitychange_aggregate: Abilitychange_Aggregate;
  /** fetch data from the table: "pokemon_v2_abilitychangeeffecttext" */
  abilitychangeeffecttext: Array<Abilitychangeeffecttext>;
  /** fetch aggregated fields from the table: "pokemon_v2_abilitychangeeffecttext" */
  abilitychangeeffecttext_aggregate: Abilitychangeeffecttext_Aggregate;
  /** fetch data from the table: "pokemon_v2_abilityeffecttext" */
  abilityeffecttext: Array<Abilityeffecttext>;
  /** fetch aggregated fields from the table: "pokemon_v2_abilityeffecttext" */
  abilityeffecttext_aggregate: Abilityeffecttext_Aggregate;
  /** fetch data from the table: "pokemon_v2_abilityflavortext" */
  abilityflavortext: Array<Abilityflavortext>;
  /** fetch aggregated fields from the table: "pokemon_v2_abilityflavortext" */
  abilityflavortext_aggregate: Abilityflavortext_Aggregate;
  /** fetch data from the table: "pokemon_v2_abilityname" */
  abilityname: Array<Abilityname>;
  /** fetch aggregated fields from the table: "pokemon_v2_abilityname" */
  abilityname_aggregate: Abilityname_Aggregate;
  /** fetch data from the table: "pokemon_v2_berry" */
  berry: Array<Berry>;
  /** fetch aggregated fields from the table: "pokemon_v2_berry" */
  berry_aggregate: Berry_Aggregate;
  /** fetch data from the table: "pokemon_v2_berryfirmness" */
  berryfirmness: Array<Berryfirmness>;
  /** fetch aggregated fields from the table: "pokemon_v2_berryfirmness" */
  berryfirmness_aggregate: Berryfirmness_Aggregate;
  /** fetch data from the table: "pokemon_v2_berryfirmnessname" */
  berryfirmnessname: Array<Berryfirmnessname>;
  /** fetch aggregated fields from the table: "pokemon_v2_berryfirmnessname" */
  berryfirmnessname_aggregate: Berryfirmnessname_Aggregate;
  /** fetch data from the table: "pokemon_v2_berryflavor" */
  berryflavor: Array<Berryflavor>;
  /** fetch aggregated fields from the table: "pokemon_v2_berryflavor" */
  berryflavor_aggregate: Berryflavor_Aggregate;
  /** fetch data from the table: "pokemon_v2_berryflavormap" */
  berryflavormap: Array<Berryflavormap>;
  /** fetch aggregated fields from the table: "pokemon_v2_berryflavormap" */
  berryflavormap_aggregate: Berryflavormap_Aggregate;
  /** fetch data from the table: "pokemon_v2_berryflavorname" */
  berryflavorname: Array<Berryflavorname>;
  /** fetch aggregated fields from the table: "pokemon_v2_berryflavorname" */
  berryflavorname_aggregate: Berryflavorname_Aggregate;
  /** fetch data from the table: "pokemon_v2_characteristic" */
  characteristic: Array<Characteristic>;
  /** fetch aggregated fields from the table: "pokemon_v2_characteristic" */
  characteristic_aggregate: Characteristic_Aggregate;
  /** fetch data from the table: "pokemon_v2_characteristicdescription" */
  characteristicdescription: Array<Characteristicdescription>;
  /** fetch aggregated fields from the table: "pokemon_v2_characteristicdescription" */
  characteristicdescription_aggregate: Characteristicdescription_Aggregate;
  /** fetch data from the table: "pokemon_v2_contestcombo" */
  contestcombo: Array<Contestcombo>;
  /** fetch aggregated fields from the table: "pokemon_v2_contestcombo" */
  contestcombo_aggregate: Contestcombo_Aggregate;
  /** fetch data from the table: "pokemon_v2_contesteffect" */
  contesteffect: Array<Contesteffect>;
  /** fetch aggregated fields from the table: "pokemon_v2_contesteffect" */
  contesteffect_aggregate: Contesteffect_Aggregate;
  /** fetch data from the table: "pokemon_v2_contesteffecteffecttext" */
  contesteffecteffecttext: Array<Contesteffecteffecttext>;
  /** fetch aggregated fields from the table: "pokemon_v2_contesteffecteffecttext" */
  contesteffecteffecttext_aggregate: Contesteffecteffecttext_Aggregate;
  /** fetch data from the table: "pokemon_v2_contesteffectflavortext" */
  contesteffectflavortext: Array<Contesteffectflavortext>;
  /** fetch aggregated fields from the table: "pokemon_v2_contesteffectflavortext" */
  contesteffectflavortext_aggregate: Contesteffectflavortext_Aggregate;
  /** fetch data from the table: "pokemon_v2_contesttype" */
  contesttype: Array<Contesttype>;
  /** fetch aggregated fields from the table: "pokemon_v2_contesttype" */
  contesttype_aggregate: Contesttype_Aggregate;
  /** fetch data from the table: "pokemon_v2_contesttypename" */
  contesttypename: Array<Contesttypename>;
  /** fetch aggregated fields from the table: "pokemon_v2_contesttypename" */
  contesttypename_aggregate: Contesttypename_Aggregate;
  /** fetch data from the table: "pokemon_v2_egggroup" */
  egggroup: Array<Egggroup>;
  /** fetch aggregated fields from the table: "pokemon_v2_egggroup" */
  egggroup_aggregate: Egggroup_Aggregate;
  /** fetch data from the table: "pokemon_v2_egggroupname" */
  egggroupname: Array<Egggroupname>;
  /** fetch aggregated fields from the table: "pokemon_v2_egggroupname" */
  egggroupname_aggregate: Egggroupname_Aggregate;
  /** fetch data from the table: "pokemon_v2_encounter" */
  encounter: Array<Encounter>;
  /** fetch aggregated fields from the table: "pokemon_v2_encounter" */
  encounter_aggregate: Encounter_Aggregate;
  /** fetch data from the table: "pokemon_v2_encountercondition" */
  encountercondition: Array<Encountercondition>;
  /** fetch aggregated fields from the table: "pokemon_v2_encountercondition" */
  encountercondition_aggregate: Encountercondition_Aggregate;
  /** fetch data from the table: "pokemon_v2_encounterconditionname" */
  encounterconditionname: Array<Encounterconditionname>;
  /** fetch aggregated fields from the table: "pokemon_v2_encounterconditionname" */
  encounterconditionname_aggregate: Encounterconditionname_Aggregate;
  /** fetch data from the table: "pokemon_v2_encounterconditionvalue" */
  encounterconditionvalue: Array<Encounterconditionvalue>;
  /** fetch aggregated fields from the table: "pokemon_v2_encounterconditionvalue" */
  encounterconditionvalue_aggregate: Encounterconditionvalue_Aggregate;
  /** fetch data from the table: "pokemon_v2_encounterconditionvaluemap" */
  encounterconditionvaluemap: Array<Encounterconditionvaluemap>;
  /** fetch aggregated fields from the table: "pokemon_v2_encounterconditionvaluemap" */
  encounterconditionvaluemap_aggregate: Encounterconditionvaluemap_Aggregate;
  /** fetch data from the table: "pokemon_v2_encounterconditionvaluename" */
  encounterconditionvaluename: Array<Encounterconditionvaluename>;
  /** fetch aggregated fields from the table: "pokemon_v2_encounterconditionvaluename" */
  encounterconditionvaluename_aggregate: Encounterconditionvaluename_Aggregate;
  /** fetch data from the table: "pokemon_v2_encountermethod" */
  encountermethod: Array<Encountermethod>;
  /** fetch aggregated fields from the table: "pokemon_v2_encountermethod" */
  encountermethod_aggregate: Encountermethod_Aggregate;
  /** fetch data from the table: "pokemon_v2_encountermethodname" */
  encountermethodname: Array<Encountermethodname>;
  /** fetch aggregated fields from the table: "pokemon_v2_encountermethodname" */
  encountermethodname_aggregate: Encountermethodname_Aggregate;
  /** fetch data from the table: "pokemon_v2_encounterslot" */
  encounterslot: Array<Encounterslot>;
  /** fetch aggregated fields from the table: "pokemon_v2_encounterslot" */
  encounterslot_aggregate: Encounterslot_Aggregate;
  /** fetch data from the table: "pokemon_v2_evolutionchain" */
  evolutionchain: Array<Evolutionchain>;
  /** fetch aggregated fields from the table: "pokemon_v2_evolutionchain" */
  evolutionchain_aggregate: Evolutionchain_Aggregate;
  /** fetch data from the table: "pokemon_v2_evolutiontrigger" */
  evolutiontrigger: Array<Evolutiontrigger>;
  /** fetch aggregated fields from the table: "pokemon_v2_evolutiontrigger" */
  evolutiontrigger_aggregate: Evolutiontrigger_Aggregate;
  /** fetch data from the table: "pokemon_v2_evolutiontriggername" */
  evolutiontriggername: Array<Evolutiontriggername>;
  /** fetch aggregated fields from the table: "pokemon_v2_evolutiontriggername" */
  evolutiontriggername_aggregate: Evolutiontriggername_Aggregate;
  /** fetch data from the table: "pokemon_v2_experience" */
  experience: Array<Experience>;
  /** fetch aggregated fields from the table: "pokemon_v2_experience" */
  experience_aggregate: Experience_Aggregate;
  /** fetch data from the table: "pokemon_v2_gender" */
  gender: Array<Gender>;
  /** fetch aggregated fields from the table: "pokemon_v2_gender" */
  gender_aggregate: Gender_Aggregate;
  /** fetch data from the table: "pokemon_v2_generation" */
  generation: Array<Generation>;
  /** fetch aggregated fields from the table: "pokemon_v2_generation" */
  generation_aggregate: Generation_Aggregate;
  /** fetch data from the table: "pokemon_v2_generationname" */
  generationname: Array<Generationname>;
  /** fetch aggregated fields from the table: "pokemon_v2_generationname" */
  generationname_aggregate: Generationname_Aggregate;
  /** fetch data from the table: "pokemon_v2_growthrate" */
  growthrate: Array<Growthrate>;
  /** fetch aggregated fields from the table: "pokemon_v2_growthrate" */
  growthrate_aggregate: Growthrate_Aggregate;
  /** fetch data from the table: "pokemon_v2_growthratedescription" */
  growthratedescription: Array<Growthratedescription>;
  /** fetch aggregated fields from the table: "pokemon_v2_growthratedescription" */
  growthratedescription_aggregate: Growthratedescription_Aggregate;
  /** fetch data from the table: "pokemon_v2_item" */
  item: Array<Item>;
  /** fetch aggregated fields from the table: "pokemon_v2_item" */
  item_aggregate: Item_Aggregate;
  /** fetch data from the table: "pokemon_v2_itemattribute" */
  itemattribute: Array<Itemattribute>;
  /** fetch aggregated fields from the table: "pokemon_v2_itemattribute" */
  itemattribute_aggregate: Itemattribute_Aggregate;
  /** fetch data from the table: "pokemon_v2_itemattributedescription" */
  itemattributedescription: Array<Itemattributedescription>;
  /** fetch aggregated fields from the table: "pokemon_v2_itemattributedescription" */
  itemattributedescription_aggregate: Itemattributedescription_Aggregate;
  /** fetch data from the table: "pokemon_v2_itemattributemap" */
  itemattributemap: Array<Itemattributemap>;
  /** fetch aggregated fields from the table: "pokemon_v2_itemattributemap" */
  itemattributemap_aggregate: Itemattributemap_Aggregate;
  /** fetch data from the table: "pokemon_v2_itemattributename" */
  itemattributename: Array<Itemattributename>;
  /** fetch aggregated fields from the table: "pokemon_v2_itemattributename" */
  itemattributename_aggregate: Itemattributename_Aggregate;
  /** fetch data from the table: "pokemon_v2_itemcategory" */
  itemcategory: Array<Itemcategory>;
  /** fetch aggregated fields from the table: "pokemon_v2_itemcategory" */
  itemcategory_aggregate: Itemcategory_Aggregate;
  /** fetch data from the table: "pokemon_v2_itemcategoryname" */
  itemcategoryname: Array<Itemcategoryname>;
  /** fetch aggregated fields from the table: "pokemon_v2_itemcategoryname" */
  itemcategoryname_aggregate: Itemcategoryname_Aggregate;
  /** fetch data from the table: "pokemon_v2_itemeffecttext" */
  itemeffecttext: Array<Itemeffecttext>;
  /** fetch aggregated fields from the table: "pokemon_v2_itemeffecttext" */
  itemeffecttext_aggregate: Itemeffecttext_Aggregate;
  /** fetch data from the table: "pokemon_v2_itemflavortext" */
  itemflavortext: Array<Itemflavortext>;
  /** fetch aggregated fields from the table: "pokemon_v2_itemflavortext" */
  itemflavortext_aggregate: Itemflavortext_Aggregate;
  /** fetch data from the table: "pokemon_v2_itemflingeffect" */
  itemflingeffect: Array<Itemflingeffect>;
  /** fetch aggregated fields from the table: "pokemon_v2_itemflingeffect" */
  itemflingeffect_aggregate: Itemflingeffect_Aggregate;
  /** fetch data from the table: "pokemon_v2_itemflingeffecteffecttext" */
  itemflingeffecteffecttext: Array<Itemflingeffecteffecttext>;
  /** fetch aggregated fields from the table: "pokemon_v2_itemflingeffecteffecttext" */
  itemflingeffecteffecttext_aggregate: Itemflingeffecteffecttext_Aggregate;
  /** fetch data from the table: "pokemon_v2_itemgameindex" */
  itemgameindex: Array<Itemgameindex>;
  /** fetch aggregated fields from the table: "pokemon_v2_itemgameindex" */
  itemgameindex_aggregate: Itemgameindex_Aggregate;
  /** fetch data from the table: "pokemon_v2_itemname" */
  itemname: Array<Itemname>;
  /** fetch aggregated fields from the table: "pokemon_v2_itemname" */
  itemname_aggregate: Itemname_Aggregate;
  /** fetch data from the table: "pokemon_v2_itempocket" */
  itempocket: Array<Itempocket>;
  /** fetch aggregated fields from the table: "pokemon_v2_itempocket" */
  itempocket_aggregate: Itempocket_Aggregate;
  /** fetch data from the table: "pokemon_v2_itempocketname" */
  itempocketname: Array<Itempocketname>;
  /** fetch aggregated fields from the table: "pokemon_v2_itempocketname" */
  itempocketname_aggregate: Itempocketname_Aggregate;
  /** An array relationship */
  itemsprites: Array<Itemsprites>;
  /** An aggregate relationship */
  itemsprites_aggregate: Itemsprites_Aggregate;
  /** fetch data from the table: "pokemon_v2_language" */
  language: Array<Language>;
  /** fetch aggregated fields from the table: "pokemon_v2_language" */
  language_aggregate: Language_Aggregate;
  /** fetch data from the table: "pokemon_v2_languagename" */
  languagename: Array<Languagename>;
  /** fetch aggregated fields from the table: "pokemon_v2_languagename" */
  languagename_aggregate: Languagename_Aggregate;
  /** fetch data from the table: "pokemon_v2_location" */
  location: Array<Location>;
  /** fetch aggregated fields from the table: "pokemon_v2_location" */
  location_aggregate: Location_Aggregate;
  /** fetch data from the table: "pokemon_v2_locationarea" */
  locationarea: Array<Locationarea>;
  /** fetch aggregated fields from the table: "pokemon_v2_locationarea" */
  locationarea_aggregate: Locationarea_Aggregate;
  /** fetch data from the table: "pokemon_v2_locationareaencounterrate" */
  locationareaencounterrate: Array<Locationareaencounterrate>;
  /** fetch aggregated fields from the table: "pokemon_v2_locationareaencounterrate" */
  locationareaencounterrate_aggregate: Locationareaencounterrate_Aggregate;
  /** fetch data from the table: "pokemon_v2_locationareaname" */
  locationareaname: Array<Locationareaname>;
  /** fetch aggregated fields from the table: "pokemon_v2_locationareaname" */
  locationareaname_aggregate: Locationareaname_Aggregate;
  /** fetch data from the table: "pokemon_v2_locationgameindex" */
  locationgameindex: Array<Locationgameindex>;
  /** fetch aggregated fields from the table: "pokemon_v2_locationgameindex" */
  locationgameindex_aggregate: Locationgameindex_Aggregate;
  /** fetch data from the table: "pokemon_v2_locationname" */
  locationname: Array<Locationname>;
  /** fetch aggregated fields from the table: "pokemon_v2_locationname" */
  locationname_aggregate: Locationname_Aggregate;
  /** fetch data from the table: "pokemon_v2_machine" */
  machine: Array<Machine>;
  /** fetch aggregated fields from the table: "pokemon_v2_machine" */
  machine_aggregate: Machine_Aggregate;
  /** fetch data from the table: "pokemon_v2_move" */
  move: Array<Move>;
  /** fetch aggregated fields from the table: "pokemon_v2_move" */
  move_aggregate: Move_Aggregate;
  /** fetch data from the table: "pokemon_v2_moveattribute" */
  moveattribute: Array<Moveattribute>;
  /** fetch aggregated fields from the table: "pokemon_v2_moveattribute" */
  moveattribute_aggregate: Moveattribute_Aggregate;
  /** fetch data from the table: "pokemon_v2_moveattributedescription" */
  moveattributedescription: Array<Moveattributedescription>;
  /** fetch aggregated fields from the table: "pokemon_v2_moveattributedescription" */
  moveattributedescription_aggregate: Moveattributedescription_Aggregate;
  /** fetch data from the table: "pokemon_v2_moveattributemap" */
  moveattributemap: Array<Moveattributemap>;
  /** fetch aggregated fields from the table: "pokemon_v2_moveattributemap" */
  moveattributemap_aggregate: Moveattributemap_Aggregate;
  /** fetch data from the table: "pokemon_v2_moveattributename" */
  moveattributename: Array<Moveattributename>;
  /** fetch aggregated fields from the table: "pokemon_v2_moveattributename" */
  moveattributename_aggregate: Moveattributename_Aggregate;
  /** fetch data from the table: "pokemon_v2_movebattlestyle" */
  movebattlestyle: Array<Movebattlestyle>;
  /** fetch aggregated fields from the table: "pokemon_v2_movebattlestyle" */
  movebattlestyle_aggregate: Movebattlestyle_Aggregate;
  /** fetch data from the table: "pokemon_v2_movebattlestylename" */
  movebattlestylename: Array<Movebattlestylename>;
  /** fetch aggregated fields from the table: "pokemon_v2_movebattlestylename" */
  movebattlestylename_aggregate: Movebattlestylename_Aggregate;
  /** fetch data from the table: "pokemon_v2_movechange" */
  movechange: Array<Movechange>;
  /** fetch aggregated fields from the table: "pokemon_v2_movechange" */
  movechange_aggregate: Movechange_Aggregate;
  /** fetch data from the table: "pokemon_v2_movedamageclass" */
  movedamageclass: Array<Movedamageclass>;
  /** fetch aggregated fields from the table: "pokemon_v2_movedamageclass" */
  movedamageclass_aggregate: Movedamageclass_Aggregate;
  /** fetch data from the table: "pokemon_v2_movedamageclassdescription" */
  movedamageclassdescription: Array<Movedamageclassdescription>;
  /** fetch aggregated fields from the table: "pokemon_v2_movedamageclassdescription" */
  movedamageclassdescription_aggregate: Movedamageclassdescription_Aggregate;
  /** fetch data from the table: "pokemon_v2_movedamageclassname" */
  movedamageclassname: Array<Movedamageclassname>;
  /** fetch aggregated fields from the table: "pokemon_v2_movedamageclassname" */
  movedamageclassname_aggregate: Movedamageclassname_Aggregate;
  /** fetch data from the table: "pokemon_v2_moveeffect" */
  moveeffect: Array<Moveeffect>;
  /** fetch aggregated fields from the table: "pokemon_v2_moveeffect" */
  moveeffect_aggregate: Moveeffect_Aggregate;
  /** fetch data from the table: "pokemon_v2_moveeffectchange" */
  moveeffectchange: Array<Moveeffectchange>;
  /** fetch aggregated fields from the table: "pokemon_v2_moveeffectchange" */
  moveeffectchange_aggregate: Moveeffectchange_Aggregate;
  /** fetch data from the table: "pokemon_v2_moveeffectchangeeffecttext" */
  moveeffectchangeeffecttext: Array<Moveeffectchangeeffecttext>;
  /** fetch aggregated fields from the table: "pokemon_v2_moveeffectchangeeffecttext" */
  moveeffectchangeeffecttext_aggregate: Moveeffectchangeeffecttext_Aggregate;
  /** fetch data from the table: "pokemon_v2_moveeffecteffecttext" */
  moveeffecteffecttext: Array<Moveeffecteffecttext>;
  /** fetch aggregated fields from the table: "pokemon_v2_moveeffecteffecttext" */
  moveeffecteffecttext_aggregate: Moveeffecteffecttext_Aggregate;
  /** fetch data from the table: "pokemon_v2_moveflavortext" */
  moveflavortext: Array<Moveflavortext>;
  /** fetch aggregated fields from the table: "pokemon_v2_moveflavortext" */
  moveflavortext_aggregate: Moveflavortext_Aggregate;
  /** fetch data from the table: "pokemon_v2_movelearnmethod" */
  movelearnmethod: Array<Movelearnmethod>;
  /** fetch aggregated fields from the table: "pokemon_v2_movelearnmethod" */
  movelearnmethod_aggregate: Movelearnmethod_Aggregate;
  /** fetch data from the table: "pokemon_v2_movelearnmethoddescription" */
  movelearnmethoddescription: Array<Movelearnmethoddescription>;
  /** fetch aggregated fields from the table: "pokemon_v2_movelearnmethoddescription" */
  movelearnmethoddescription_aggregate: Movelearnmethoddescription_Aggregate;
  /** fetch data from the table: "pokemon_v2_movelearnmethodname" */
  movelearnmethodname: Array<Movelearnmethodname>;
  /** fetch aggregated fields from the table: "pokemon_v2_movelearnmethodname" */
  movelearnmethodname_aggregate: Movelearnmethodname_Aggregate;
  /** An array relationship */
  movemeta: Array<Movemeta>;
  /** An aggregate relationship */
  movemeta_aggregate: Movemeta_Aggregate;
  /** fetch data from the table: "pokemon_v2_movemetaailment" */
  movemetaailment: Array<Movemetaailment>;
  /** fetch aggregated fields from the table: "pokemon_v2_movemetaailment" */
  movemetaailment_aggregate: Movemetaailment_Aggregate;
  /** fetch data from the table: "pokemon_v2_movemetaailmentname" */
  movemetaailmentname: Array<Movemetaailmentname>;
  /** fetch aggregated fields from the table: "pokemon_v2_movemetaailmentname" */
  movemetaailmentname_aggregate: Movemetaailmentname_Aggregate;
  /** fetch data from the table: "pokemon_v2_movemetacategory" */
  movemetacategory: Array<Movemetacategory>;
  /** fetch aggregated fields from the table: "pokemon_v2_movemetacategory" */
  movemetacategory_aggregate: Movemetacategory_Aggregate;
  /** fetch data from the table: "pokemon_v2_movemetacategorydescription" */
  movemetacategorydescription: Array<Movemetacategorydescription>;
  /** fetch aggregated fields from the table: "pokemon_v2_movemetacategorydescription" */
  movemetacategorydescription_aggregate: Movemetacategorydescription_Aggregate;
  /** fetch data from the table: "pokemon_v2_movemetastatchange" */
  movemetastatchange: Array<Movemetastatchange>;
  /** fetch aggregated fields from the table: "pokemon_v2_movemetastatchange" */
  movemetastatchange_aggregate: Movemetastatchange_Aggregate;
  /** fetch data from the table: "pokemon_v2_movename" */
  movename: Array<Movename>;
  /** fetch aggregated fields from the table: "pokemon_v2_movename" */
  movename_aggregate: Movename_Aggregate;
  /** fetch data from the table: "pokemon_v2_movetarget" */
  movetarget: Array<Movetarget>;
  /** fetch aggregated fields from the table: "pokemon_v2_movetarget" */
  movetarget_aggregate: Movetarget_Aggregate;
  /** fetch data from the table: "pokemon_v2_movetargetdescription" */
  movetargetdescription: Array<Movetargetdescription>;
  /** fetch aggregated fields from the table: "pokemon_v2_movetargetdescription" */
  movetargetdescription_aggregate: Movetargetdescription_Aggregate;
  /** fetch data from the table: "pokemon_v2_movetargetname" */
  movetargetname: Array<Movetargetname>;
  /** fetch aggregated fields from the table: "pokemon_v2_movetargetname" */
  movetargetname_aggregate: Movetargetname_Aggregate;
  /** fetch data from the table: "pokemon_v2_nature" */
  nature: Array<Nature>;
  /** fetch aggregated fields from the table: "pokemon_v2_nature" */
  nature_aggregate: Nature_Aggregate;
  /** fetch data from the table: "pokemon_v2_naturebattlestylepreference" */
  naturebattlestylepreference: Array<Naturebattlestylepreference>;
  /** fetch aggregated fields from the table: "pokemon_v2_naturebattlestylepreference" */
  naturebattlestylepreference_aggregate: Naturebattlestylepreference_Aggregate;
  /** fetch data from the table: "pokemon_v2_naturename" */
  naturename: Array<Naturename>;
  /** fetch aggregated fields from the table: "pokemon_v2_naturename" */
  naturename_aggregate: Naturename_Aggregate;
  /** fetch data from the table: "pokemon_v2_naturepokeathlonstat" */
  naturepokeathlonstat: Array<Naturepokeathlonstat>;
  /** fetch aggregated fields from the table: "pokemon_v2_naturepokeathlonstat" */
  naturepokeathlonstat_aggregate: Naturepokeathlonstat_Aggregate;
  /** fetch data from the table: "pokemon_v2_palpark" */
  palpark: Array<Palpark>;
  /** fetch aggregated fields from the table: "pokemon_v2_palpark" */
  palpark_aggregate: Palpark_Aggregate;
  /** fetch data from the table: "pokemon_v2_palparkarea" */
  palparkarea: Array<Palparkarea>;
  /** fetch aggregated fields from the table: "pokemon_v2_palparkarea" */
  palparkarea_aggregate: Palparkarea_Aggregate;
  /** fetch data from the table: "pokemon_v2_palparkareaname" */
  palparkareaname: Array<Palparkareaname>;
  /** fetch aggregated fields from the table: "pokemon_v2_palparkareaname" */
  palparkareaname_aggregate: Palparkareaname_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokeathlonstat" */
  pokeathlonstat: Array<Pokeathlonstat>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokeathlonstat" */
  pokeathlonstat_aggregate: Pokeathlonstat_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokeathlonstatname" */
  pokeathlonstatname: Array<Pokeathlonstatname>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokeathlonstatname" */
  pokeathlonstatname_aggregate: Pokeathlonstatname_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokedex" */
  pokedex: Array<Pokedex>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokedex" */
  pokedex_aggregate: Pokedex_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokedexdescription" */
  pokedexdescription: Array<Pokedexdescription>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokedexdescription" */
  pokedexdescription_aggregate: Pokedexdescription_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokedexname" */
  pokedexname: Array<Pokedexname>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokedexname" */
  pokedexname_aggregate: Pokedexname_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokedexversiongroup" */
  pokedexversiongroup: Array<Pokedexversiongroup>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokedexversiongroup" */
  pokedexversiongroup_aggregate: Pokedexversiongroup_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemon" */
  pokemon: Array<Pokemon>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemon" */
  pokemon_aggregate: Pokemon_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonability" */
  pokemonability: Array<Pokemonability>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonability" */
  pokemonability_aggregate: Pokemonability_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonabilitypast" */
  pokemonabilitypast: Array<Pokemonabilitypast>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonabilitypast" */
  pokemonabilitypast_aggregate: Pokemonabilitypast_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemoncolor" */
  pokemoncolor: Array<Pokemoncolor>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemoncolor" */
  pokemoncolor_aggregate: Pokemoncolor_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemoncolorname" */
  pokemoncolorname: Array<Pokemoncolorname>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemoncolorname" */
  pokemoncolorname_aggregate: Pokemoncolorname_Aggregate;
  /** An array relationship */
  pokemoncries: Array<Pokemoncries>;
  /** An aggregate relationship */
  pokemoncries_aggregate: Pokemoncries_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemondexnumber" */
  pokemondexnumber: Array<Pokemondexnumber>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemondexnumber" */
  pokemondexnumber_aggregate: Pokemondexnumber_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonegggroup" */
  pokemonegggroup: Array<Pokemonegggroup>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonegggroup" */
  pokemonegggroup_aggregate: Pokemonegggroup_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonevolution" */
  pokemonevolution: Array<Pokemonevolution>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonevolution" */
  pokemonevolution_aggregate: Pokemonevolution_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonform" */
  pokemonform: Array<Pokemonform>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonform" */
  pokemonform_aggregate: Pokemonform_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonformgeneration" */
  pokemonformgeneration: Array<Pokemonformgeneration>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonformgeneration" */
  pokemonformgeneration_aggregate: Pokemonformgeneration_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonformname" */
  pokemonformname: Array<Pokemonformname>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonformname" */
  pokemonformname_aggregate: Pokemonformname_Aggregate;
  /** An array relationship */
  pokemonformsprites: Array<Pokemonformsprites>;
  /** An aggregate relationship */
  pokemonformsprites_aggregate: Pokemonformsprites_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonformtype" */
  pokemonformtype: Array<Pokemonformtype>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonformtype" */
  pokemonformtype_aggregate: Pokemonformtype_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemongameindex" */
  pokemongameindex: Array<Pokemongameindex>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemongameindex" */
  pokemongameindex_aggregate: Pokemongameindex_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonhabitat" */
  pokemonhabitat: Array<Pokemonhabitat>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonhabitat" */
  pokemonhabitat_aggregate: Pokemonhabitat_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonhabitatname" */
  pokemonhabitatname: Array<Pokemonhabitatname>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonhabitatname" */
  pokemonhabitatname_aggregate: Pokemonhabitatname_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonitem" */
  pokemonitem: Array<Pokemonitem>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonitem" */
  pokemonitem_aggregate: Pokemonitem_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonmove" */
  pokemonmove: Array<Pokemonmove>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonmove" */
  pokemonmove_aggregate: Pokemonmove_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonshape" */
  pokemonshape: Array<Pokemonshape>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonshape" */
  pokemonshape_aggregate: Pokemonshape_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonshapename" */
  pokemonshapename: Array<Pokemonshapename>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonshapename" */
  pokemonshapename_aggregate: Pokemonshapename_Aggregate;
  /** An array relationship */
  pokemonspecies: Array<Pokemonspecies>;
  /** An aggregate relationship */
  pokemonspecies_aggregate: Pokemonspecies_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonspeciesdescription" */
  pokemonspeciesdescription: Array<Pokemonspeciesdescription>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonspeciesdescription" */
  pokemonspeciesdescription_aggregate: Pokemonspeciesdescription_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonspeciesflavortext" */
  pokemonspeciesflavortext: Array<Pokemonspeciesflavortext>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonspeciesflavortext" */
  pokemonspeciesflavortext_aggregate: Pokemonspeciesflavortext_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonspeciesname" */
  pokemonspeciesname: Array<Pokemonspeciesname>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonspeciesname" */
  pokemonspeciesname_aggregate: Pokemonspeciesname_Aggregate;
  /** An array relationship */
  pokemonsprites: Array<Pokemonsprites>;
  /** An aggregate relationship */
  pokemonsprites_aggregate: Pokemonsprites_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemonstat" */
  pokemonstat: Array<Pokemonstat>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemonstat" */
  pokemonstat_aggregate: Pokemonstat_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemontype" */
  pokemontype: Array<Pokemontype>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemontype" */
  pokemontype_aggregate: Pokemontype_Aggregate;
  /** fetch data from the table: "pokemon_v2_pokemontypepast" */
  pokemontypepast: Array<Pokemontypepast>;
  /** fetch aggregated fields from the table: "pokemon_v2_pokemontypepast" */
  pokemontypepast_aggregate: Pokemontypepast_Aggregate;
  /** fetch data from the table: "pokemon_v2_region" */
  region: Array<Region>;
  /** fetch aggregated fields from the table: "pokemon_v2_region" */
  region_aggregate: Region_Aggregate;
  /** fetch data from the table: "pokemon_v2_regionname" */
  regionname: Array<Regionname>;
  /** fetch aggregated fields from the table: "pokemon_v2_regionname" */
  regionname_aggregate: Regionname_Aggregate;
  /** fetch data from the table: "pokemon_v2_stat" */
  stat: Array<Stat>;
  /** fetch aggregated fields from the table: "pokemon_v2_stat" */
  stat_aggregate: Stat_Aggregate;
  /** fetch data from the table: "pokemon_v2_statname" */
  statname: Array<Statname>;
  /** fetch aggregated fields from the table: "pokemon_v2_statname" */
  statname_aggregate: Statname_Aggregate;
  /** fetch data from the table: "pokemon_v2_supercontestcombo" */
  supercontestcombo: Array<Supercontestcombo>;
  /** fetch aggregated fields from the table: "pokemon_v2_supercontestcombo" */
  supercontestcombo_aggregate: Supercontestcombo_Aggregate;
  /** fetch data from the table: "pokemon_v2_supercontesteffect" */
  supercontesteffect: Array<Supercontesteffect>;
  /** fetch aggregated fields from the table: "pokemon_v2_supercontesteffect" */
  supercontesteffect_aggregate: Supercontesteffect_Aggregate;
  /** fetch data from the table: "pokemon_v2_supercontesteffectflavortext" */
  supercontesteffectflavortext: Array<Supercontesteffectflavortext>;
  /** fetch aggregated fields from the table: "pokemon_v2_supercontesteffectflavortext" */
  supercontesteffectflavortext_aggregate: Supercontesteffectflavortext_Aggregate;
  /** fetch data from the table: "pokemon_v2_type" */
  type: Array<Type>;
  /** fetch aggregated fields from the table: "pokemon_v2_type" */
  type_aggregate: Type_Aggregate;
  /** fetch data from the table: "pokemon_v2_typeefficacy" */
  typeefficacy: Array<Typeefficacy>;
  /** fetch aggregated fields from the table: "pokemon_v2_typeefficacy" */
  typeefficacy_aggregate: Typeefficacy_Aggregate;
  /** fetch data from the table: "pokemon_v2_typeefficacypast" */
  typeefficacypast: Array<Typeefficacypast>;
  /** fetch aggregated fields from the table: "pokemon_v2_typeefficacypast" */
  typeefficacypast_aggregate: Typeefficacypast_Aggregate;
  /** fetch data from the table: "pokemon_v2_typegameindex" */
  typegameindex: Array<Typegameindex>;
  /** fetch aggregated fields from the table: "pokemon_v2_typegameindex" */
  typegameindex_aggregate: Typegameindex_Aggregate;
  /** fetch data from the table: "pokemon_v2_typename" */
  typename: Array<Typename>;
  /** fetch aggregated fields from the table: "pokemon_v2_typename" */
  typename_aggregate: Typename_Aggregate;
  /** fetch data from the table: "pokemon_v2_version" */
  version: Array<Version>;
  /** fetch aggregated fields from the table: "pokemon_v2_version" */
  version_aggregate: Version_Aggregate;
  /** fetch data from the table: "pokemon_v2_versiongroup" */
  versiongroup: Array<Versiongroup>;
  /** fetch aggregated fields from the table: "pokemon_v2_versiongroup" */
  versiongroup_aggregate: Versiongroup_Aggregate;
  /** fetch data from the table: "pokemon_v2_versiongroupmovelearnmethod" */
  versiongroupmovelearnmethod: Array<Versiongroupmovelearnmethod>;
  /** fetch aggregated fields from the table: "pokemon_v2_versiongroupmovelearnmethod" */
  versiongroupmovelearnmethod_aggregate: Versiongroupmovelearnmethod_Aggregate;
  /** fetch data from the table: "pokemon_v2_versiongroupregion" */
  versiongroupregion: Array<Versiongroupregion>;
  /** fetch aggregated fields from the table: "pokemon_v2_versiongroupregion" */
  versiongroupregion_aggregate: Versiongroupregion_Aggregate;
  /** fetch data from the table: "pokemon_v2_versionname" */
  versionname: Array<Versionname>;
  /** fetch aggregated fields from the table: "pokemon_v2_versionname" */
  versionname_aggregate: Versionname_Aggregate;
};


export type Query_RootAbilityArgs = {
  distinct_on?: InputMaybe<Array<Ability_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Ability_Order_By>>;
  where?: InputMaybe<Ability_Bool_Exp>;
};


export type Query_RootAbility_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Ability_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Ability_Order_By>>;
  where?: InputMaybe<Ability_Bool_Exp>;
};


export type Query_RootAbilitychangeArgs = {
  distinct_on?: InputMaybe<Array<Abilitychange_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Abilitychange_Order_By>>;
  where?: InputMaybe<Abilitychange_Bool_Exp>;
};


export type Query_RootAbilitychange_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Abilitychange_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Abilitychange_Order_By>>;
  where?: InputMaybe<Abilitychange_Bool_Exp>;
};


export type Query_RootAbilitychangeeffecttextArgs = {
  distinct_on?: InputMaybe<Array<Abilitychangeeffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Abilitychangeeffecttext_Order_By>>;
  where?: InputMaybe<Abilitychangeeffecttext_Bool_Exp>;
};


export type Query_RootAbilitychangeeffecttext_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Abilitychangeeffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Abilitychangeeffecttext_Order_By>>;
  where?: InputMaybe<Abilitychangeeffecttext_Bool_Exp>;
};


export type Query_RootAbilityeffecttextArgs = {
  distinct_on?: InputMaybe<Array<Abilityeffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Abilityeffecttext_Order_By>>;
  where?: InputMaybe<Abilityeffecttext_Bool_Exp>;
};


export type Query_RootAbilityeffecttext_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Abilityeffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Abilityeffecttext_Order_By>>;
  where?: InputMaybe<Abilityeffecttext_Bool_Exp>;
};


export type Query_RootAbilityflavortextArgs = {
  distinct_on?: InputMaybe<Array<Abilityflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Abilityflavortext_Order_By>>;
  where?: InputMaybe<Abilityflavortext_Bool_Exp>;
};


export type Query_RootAbilityflavortext_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Abilityflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Abilityflavortext_Order_By>>;
  where?: InputMaybe<Abilityflavortext_Bool_Exp>;
};


export type Query_RootAbilitynameArgs = {
  distinct_on?: InputMaybe<Array<Abilityname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Abilityname_Order_By>>;
  where?: InputMaybe<Abilityname_Bool_Exp>;
};


export type Query_RootAbilityname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Abilityname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Abilityname_Order_By>>;
  where?: InputMaybe<Abilityname_Bool_Exp>;
};


export type Query_RootBerryArgs = {
  distinct_on?: InputMaybe<Array<Berry_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Berry_Order_By>>;
  where?: InputMaybe<Berry_Bool_Exp>;
};


export type Query_RootBerry_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Berry_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Berry_Order_By>>;
  where?: InputMaybe<Berry_Bool_Exp>;
};


export type Query_RootBerryfirmnessArgs = {
  distinct_on?: InputMaybe<Array<Berryfirmness_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Berryfirmness_Order_By>>;
  where?: InputMaybe<Berryfirmness_Bool_Exp>;
};


export type Query_RootBerryfirmness_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Berryfirmness_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Berryfirmness_Order_By>>;
  where?: InputMaybe<Berryfirmness_Bool_Exp>;
};


export type Query_RootBerryfirmnessnameArgs = {
  distinct_on?: InputMaybe<Array<Berryfirmnessname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Berryfirmnessname_Order_By>>;
  where?: InputMaybe<Berryfirmnessname_Bool_Exp>;
};


export type Query_RootBerryfirmnessname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Berryfirmnessname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Berryfirmnessname_Order_By>>;
  where?: InputMaybe<Berryfirmnessname_Bool_Exp>;
};


export type Query_RootBerryflavorArgs = {
  distinct_on?: InputMaybe<Array<Berryflavor_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Berryflavor_Order_By>>;
  where?: InputMaybe<Berryflavor_Bool_Exp>;
};


export type Query_RootBerryflavor_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Berryflavor_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Berryflavor_Order_By>>;
  where?: InputMaybe<Berryflavor_Bool_Exp>;
};


export type Query_RootBerryflavormapArgs = {
  distinct_on?: InputMaybe<Array<Berryflavormap_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Berryflavormap_Order_By>>;
  where?: InputMaybe<Berryflavormap_Bool_Exp>;
};


export type Query_RootBerryflavormap_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Berryflavormap_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Berryflavormap_Order_By>>;
  where?: InputMaybe<Berryflavormap_Bool_Exp>;
};


export type Query_RootBerryflavornameArgs = {
  distinct_on?: InputMaybe<Array<Berryflavorname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Berryflavorname_Order_By>>;
  where?: InputMaybe<Berryflavorname_Bool_Exp>;
};


export type Query_RootBerryflavorname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Berryflavorname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Berryflavorname_Order_By>>;
  where?: InputMaybe<Berryflavorname_Bool_Exp>;
};


export type Query_RootCharacteristicArgs = {
  distinct_on?: InputMaybe<Array<Characteristic_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Characteristic_Order_By>>;
  where?: InputMaybe<Characteristic_Bool_Exp>;
};


export type Query_RootCharacteristic_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Characteristic_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Characteristic_Order_By>>;
  where?: InputMaybe<Characteristic_Bool_Exp>;
};


export type Query_RootCharacteristicdescriptionArgs = {
  distinct_on?: InputMaybe<Array<Characteristicdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Characteristicdescription_Order_By>>;
  where?: InputMaybe<Characteristicdescription_Bool_Exp>;
};


export type Query_RootCharacteristicdescription_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Characteristicdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Characteristicdescription_Order_By>>;
  where?: InputMaybe<Characteristicdescription_Bool_Exp>;
};


export type Query_RootContestcomboArgs = {
  distinct_on?: InputMaybe<Array<Contestcombo_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Contestcombo_Order_By>>;
  where?: InputMaybe<Contestcombo_Bool_Exp>;
};


export type Query_RootContestcombo_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Contestcombo_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Contestcombo_Order_By>>;
  where?: InputMaybe<Contestcombo_Bool_Exp>;
};


export type Query_RootContesteffectArgs = {
  distinct_on?: InputMaybe<Array<Contesteffect_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Contesteffect_Order_By>>;
  where?: InputMaybe<Contesteffect_Bool_Exp>;
};


export type Query_RootContesteffect_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Contesteffect_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Contesteffect_Order_By>>;
  where?: InputMaybe<Contesteffect_Bool_Exp>;
};


export type Query_RootContesteffecteffecttextArgs = {
  distinct_on?: InputMaybe<Array<Contesteffecteffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Contesteffecteffecttext_Order_By>>;
  where?: InputMaybe<Contesteffecteffecttext_Bool_Exp>;
};


export type Query_RootContesteffecteffecttext_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Contesteffecteffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Contesteffecteffecttext_Order_By>>;
  where?: InputMaybe<Contesteffecteffecttext_Bool_Exp>;
};


export type Query_RootContesteffectflavortextArgs = {
  distinct_on?: InputMaybe<Array<Contesteffectflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Contesteffectflavortext_Order_By>>;
  where?: InputMaybe<Contesteffectflavortext_Bool_Exp>;
};


export type Query_RootContesteffectflavortext_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Contesteffectflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Contesteffectflavortext_Order_By>>;
  where?: InputMaybe<Contesteffectflavortext_Bool_Exp>;
};


export type Query_RootContesttypeArgs = {
  distinct_on?: InputMaybe<Array<Contesttype_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Contesttype_Order_By>>;
  where?: InputMaybe<Contesttype_Bool_Exp>;
};


export type Query_RootContesttype_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Contesttype_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Contesttype_Order_By>>;
  where?: InputMaybe<Contesttype_Bool_Exp>;
};


export type Query_RootContesttypenameArgs = {
  distinct_on?: InputMaybe<Array<Contesttypename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Contesttypename_Order_By>>;
  where?: InputMaybe<Contesttypename_Bool_Exp>;
};


export type Query_RootContesttypename_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Contesttypename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Contesttypename_Order_By>>;
  where?: InputMaybe<Contesttypename_Bool_Exp>;
};


export type Query_RootEgggroupArgs = {
  distinct_on?: InputMaybe<Array<Egggroup_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Egggroup_Order_By>>;
  where?: InputMaybe<Egggroup_Bool_Exp>;
};


export type Query_RootEgggroup_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Egggroup_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Egggroup_Order_By>>;
  where?: InputMaybe<Egggroup_Bool_Exp>;
};


export type Query_RootEgggroupnameArgs = {
  distinct_on?: InputMaybe<Array<Egggroupname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Egggroupname_Order_By>>;
  where?: InputMaybe<Egggroupname_Bool_Exp>;
};


export type Query_RootEgggroupname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Egggroupname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Egggroupname_Order_By>>;
  where?: InputMaybe<Egggroupname_Bool_Exp>;
};


export type Query_RootEncounterArgs = {
  distinct_on?: InputMaybe<Array<Encounter_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Encounter_Order_By>>;
  where?: InputMaybe<Encounter_Bool_Exp>;
};


export type Query_RootEncounter_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Encounter_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Encounter_Order_By>>;
  where?: InputMaybe<Encounter_Bool_Exp>;
};


export type Query_RootEncounterconditionArgs = {
  distinct_on?: InputMaybe<Array<Encountercondition_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Encountercondition_Order_By>>;
  where?: InputMaybe<Encountercondition_Bool_Exp>;
};


export type Query_RootEncountercondition_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Encountercondition_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Encountercondition_Order_By>>;
  where?: InputMaybe<Encountercondition_Bool_Exp>;
};


export type Query_RootEncounterconditionnameArgs = {
  distinct_on?: InputMaybe<Array<Encounterconditionname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Encounterconditionname_Order_By>>;
  where?: InputMaybe<Encounterconditionname_Bool_Exp>;
};


export type Query_RootEncounterconditionname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Encounterconditionname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Encounterconditionname_Order_By>>;
  where?: InputMaybe<Encounterconditionname_Bool_Exp>;
};


export type Query_RootEncounterconditionvalueArgs = {
  distinct_on?: InputMaybe<Array<Encounterconditionvalue_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Encounterconditionvalue_Order_By>>;
  where?: InputMaybe<Encounterconditionvalue_Bool_Exp>;
};


export type Query_RootEncounterconditionvalue_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Encounterconditionvalue_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Encounterconditionvalue_Order_By>>;
  where?: InputMaybe<Encounterconditionvalue_Bool_Exp>;
};


export type Query_RootEncounterconditionvaluemapArgs = {
  distinct_on?: InputMaybe<Array<Encounterconditionvaluemap_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Encounterconditionvaluemap_Order_By>>;
  where?: InputMaybe<Encounterconditionvaluemap_Bool_Exp>;
};


export type Query_RootEncounterconditionvaluemap_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Encounterconditionvaluemap_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Encounterconditionvaluemap_Order_By>>;
  where?: InputMaybe<Encounterconditionvaluemap_Bool_Exp>;
};


export type Query_RootEncounterconditionvaluenameArgs = {
  distinct_on?: InputMaybe<Array<Encounterconditionvaluename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Encounterconditionvaluename_Order_By>>;
  where?: InputMaybe<Encounterconditionvaluename_Bool_Exp>;
};


export type Query_RootEncounterconditionvaluename_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Encounterconditionvaluename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Encounterconditionvaluename_Order_By>>;
  where?: InputMaybe<Encounterconditionvaluename_Bool_Exp>;
};


export type Query_RootEncountermethodArgs = {
  distinct_on?: InputMaybe<Array<Encountermethod_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Encountermethod_Order_By>>;
  where?: InputMaybe<Encountermethod_Bool_Exp>;
};


export type Query_RootEncountermethod_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Encountermethod_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Encountermethod_Order_By>>;
  where?: InputMaybe<Encountermethod_Bool_Exp>;
};


export type Query_RootEncountermethodnameArgs = {
  distinct_on?: InputMaybe<Array<Encountermethodname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Encountermethodname_Order_By>>;
  where?: InputMaybe<Encountermethodname_Bool_Exp>;
};


export type Query_RootEncountermethodname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Encountermethodname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Encountermethodname_Order_By>>;
  where?: InputMaybe<Encountermethodname_Bool_Exp>;
};


export type Query_RootEncounterslotArgs = {
  distinct_on?: InputMaybe<Array<Encounterslot_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Encounterslot_Order_By>>;
  where?: InputMaybe<Encounterslot_Bool_Exp>;
};


export type Query_RootEncounterslot_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Encounterslot_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Encounterslot_Order_By>>;
  where?: InputMaybe<Encounterslot_Bool_Exp>;
};


export type Query_RootEvolutionchainArgs = {
  distinct_on?: InputMaybe<Array<Evolutionchain_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Evolutionchain_Order_By>>;
  where?: InputMaybe<Evolutionchain_Bool_Exp>;
};


export type Query_RootEvolutionchain_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Evolutionchain_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Evolutionchain_Order_By>>;
  where?: InputMaybe<Evolutionchain_Bool_Exp>;
};


export type Query_RootEvolutiontriggerArgs = {
  distinct_on?: InputMaybe<Array<Evolutiontrigger_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Evolutiontrigger_Order_By>>;
  where?: InputMaybe<Evolutiontrigger_Bool_Exp>;
};


export type Query_RootEvolutiontrigger_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Evolutiontrigger_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Evolutiontrigger_Order_By>>;
  where?: InputMaybe<Evolutiontrigger_Bool_Exp>;
};


export type Query_RootEvolutiontriggernameArgs = {
  distinct_on?: InputMaybe<Array<Evolutiontriggername_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Evolutiontriggername_Order_By>>;
  where?: InputMaybe<Evolutiontriggername_Bool_Exp>;
};


export type Query_RootEvolutiontriggername_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Evolutiontriggername_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Evolutiontriggername_Order_By>>;
  where?: InputMaybe<Evolutiontriggername_Bool_Exp>;
};


export type Query_RootExperienceArgs = {
  distinct_on?: InputMaybe<Array<Experience_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Experience_Order_By>>;
  where?: InputMaybe<Experience_Bool_Exp>;
};


export type Query_RootExperience_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Experience_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Experience_Order_By>>;
  where?: InputMaybe<Experience_Bool_Exp>;
};


export type Query_RootGenderArgs = {
  distinct_on?: InputMaybe<Array<Gender_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Gender_Order_By>>;
  where?: InputMaybe<Gender_Bool_Exp>;
};


export type Query_RootGender_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Gender_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Gender_Order_By>>;
  where?: InputMaybe<Gender_Bool_Exp>;
};


export type Query_RootGenerationArgs = {
  distinct_on?: InputMaybe<Array<Generation_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Generation_Order_By>>;
  where?: InputMaybe<Generation_Bool_Exp>;
};


export type Query_RootGeneration_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Generation_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Generation_Order_By>>;
  where?: InputMaybe<Generation_Bool_Exp>;
};


export type Query_RootGenerationnameArgs = {
  distinct_on?: InputMaybe<Array<Generationname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Generationname_Order_By>>;
  where?: InputMaybe<Generationname_Bool_Exp>;
};


export type Query_RootGenerationname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Generationname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Generationname_Order_By>>;
  where?: InputMaybe<Generationname_Bool_Exp>;
};


export type Query_RootGrowthrateArgs = {
  distinct_on?: InputMaybe<Array<Growthrate_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Growthrate_Order_By>>;
  where?: InputMaybe<Growthrate_Bool_Exp>;
};


export type Query_RootGrowthrate_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Growthrate_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Growthrate_Order_By>>;
  where?: InputMaybe<Growthrate_Bool_Exp>;
};


export type Query_RootGrowthratedescriptionArgs = {
  distinct_on?: InputMaybe<Array<Growthratedescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Growthratedescription_Order_By>>;
  where?: InputMaybe<Growthratedescription_Bool_Exp>;
};


export type Query_RootGrowthratedescription_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Growthratedescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Growthratedescription_Order_By>>;
  where?: InputMaybe<Growthratedescription_Bool_Exp>;
};


export type Query_RootItemArgs = {
  distinct_on?: InputMaybe<Array<Item_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Item_Order_By>>;
  where?: InputMaybe<Item_Bool_Exp>;
};


export type Query_RootItem_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Item_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Item_Order_By>>;
  where?: InputMaybe<Item_Bool_Exp>;
};


export type Query_RootItemattributeArgs = {
  distinct_on?: InputMaybe<Array<Itemattribute_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemattribute_Order_By>>;
  where?: InputMaybe<Itemattribute_Bool_Exp>;
};


export type Query_RootItemattribute_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Itemattribute_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemattribute_Order_By>>;
  where?: InputMaybe<Itemattribute_Bool_Exp>;
};


export type Query_RootItemattributedescriptionArgs = {
  distinct_on?: InputMaybe<Array<Itemattributedescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemattributedescription_Order_By>>;
  where?: InputMaybe<Itemattributedescription_Bool_Exp>;
};


export type Query_RootItemattributedescription_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Itemattributedescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemattributedescription_Order_By>>;
  where?: InputMaybe<Itemattributedescription_Bool_Exp>;
};


export type Query_RootItemattributemapArgs = {
  distinct_on?: InputMaybe<Array<Itemattributemap_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemattributemap_Order_By>>;
  where?: InputMaybe<Itemattributemap_Bool_Exp>;
};


export type Query_RootItemattributemap_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Itemattributemap_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemattributemap_Order_By>>;
  where?: InputMaybe<Itemattributemap_Bool_Exp>;
};


export type Query_RootItemattributenameArgs = {
  distinct_on?: InputMaybe<Array<Itemattributename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemattributename_Order_By>>;
  where?: InputMaybe<Itemattributename_Bool_Exp>;
};


export type Query_RootItemattributename_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Itemattributename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemattributename_Order_By>>;
  where?: InputMaybe<Itemattributename_Bool_Exp>;
};


export type Query_RootItemcategoryArgs = {
  distinct_on?: InputMaybe<Array<Itemcategory_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemcategory_Order_By>>;
  where?: InputMaybe<Itemcategory_Bool_Exp>;
};


export type Query_RootItemcategory_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Itemcategory_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemcategory_Order_By>>;
  where?: InputMaybe<Itemcategory_Bool_Exp>;
};


export type Query_RootItemcategorynameArgs = {
  distinct_on?: InputMaybe<Array<Itemcategoryname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemcategoryname_Order_By>>;
  where?: InputMaybe<Itemcategoryname_Bool_Exp>;
};


export type Query_RootItemcategoryname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Itemcategoryname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemcategoryname_Order_By>>;
  where?: InputMaybe<Itemcategoryname_Bool_Exp>;
};


export type Query_RootItemeffecttextArgs = {
  distinct_on?: InputMaybe<Array<Itemeffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemeffecttext_Order_By>>;
  where?: InputMaybe<Itemeffecttext_Bool_Exp>;
};


export type Query_RootItemeffecttext_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Itemeffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemeffecttext_Order_By>>;
  where?: InputMaybe<Itemeffecttext_Bool_Exp>;
};


export type Query_RootItemflavortextArgs = {
  distinct_on?: InputMaybe<Array<Itemflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemflavortext_Order_By>>;
  where?: InputMaybe<Itemflavortext_Bool_Exp>;
};


export type Query_RootItemflavortext_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Itemflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemflavortext_Order_By>>;
  where?: InputMaybe<Itemflavortext_Bool_Exp>;
};


export type Query_RootItemflingeffectArgs = {
  distinct_on?: InputMaybe<Array<Itemflingeffect_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemflingeffect_Order_By>>;
  where?: InputMaybe<Itemflingeffect_Bool_Exp>;
};


export type Query_RootItemflingeffect_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Itemflingeffect_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemflingeffect_Order_By>>;
  where?: InputMaybe<Itemflingeffect_Bool_Exp>;
};


export type Query_RootItemflingeffecteffecttextArgs = {
  distinct_on?: InputMaybe<Array<Itemflingeffecteffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemflingeffecteffecttext_Order_By>>;
  where?: InputMaybe<Itemflingeffecteffecttext_Bool_Exp>;
};


export type Query_RootItemflingeffecteffecttext_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Itemflingeffecteffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemflingeffecteffecttext_Order_By>>;
  where?: InputMaybe<Itemflingeffecteffecttext_Bool_Exp>;
};


export type Query_RootItemgameindexArgs = {
  distinct_on?: InputMaybe<Array<Itemgameindex_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemgameindex_Order_By>>;
  where?: InputMaybe<Itemgameindex_Bool_Exp>;
};


export type Query_RootItemgameindex_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Itemgameindex_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemgameindex_Order_By>>;
  where?: InputMaybe<Itemgameindex_Bool_Exp>;
};


export type Query_RootItemnameArgs = {
  distinct_on?: InputMaybe<Array<Itemname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemname_Order_By>>;
  where?: InputMaybe<Itemname_Bool_Exp>;
};


export type Query_RootItemname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Itemname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemname_Order_By>>;
  where?: InputMaybe<Itemname_Bool_Exp>;
};


export type Query_RootItempocketArgs = {
  distinct_on?: InputMaybe<Array<Itempocket_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itempocket_Order_By>>;
  where?: InputMaybe<Itempocket_Bool_Exp>;
};


export type Query_RootItempocket_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Itempocket_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itempocket_Order_By>>;
  where?: InputMaybe<Itempocket_Bool_Exp>;
};


export type Query_RootItempocketnameArgs = {
  distinct_on?: InputMaybe<Array<Itempocketname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itempocketname_Order_By>>;
  where?: InputMaybe<Itempocketname_Bool_Exp>;
};


export type Query_RootItempocketname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Itempocketname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itempocketname_Order_By>>;
  where?: InputMaybe<Itempocketname_Bool_Exp>;
};


export type Query_RootItemspritesArgs = {
  distinct_on?: InputMaybe<Array<Itemsprites_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemsprites_Order_By>>;
  where?: InputMaybe<Itemsprites_Bool_Exp>;
};


export type Query_RootItemsprites_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Itemsprites_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemsprites_Order_By>>;
  where?: InputMaybe<Itemsprites_Bool_Exp>;
};


export type Query_RootLanguageArgs = {
  distinct_on?: InputMaybe<Array<Language_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Language_Order_By>>;
  where?: InputMaybe<Language_Bool_Exp>;
};


export type Query_RootLanguage_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Language_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Language_Order_By>>;
  where?: InputMaybe<Language_Bool_Exp>;
};


export type Query_RootLanguagenameArgs = {
  distinct_on?: InputMaybe<Array<Languagename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Languagename_Order_By>>;
  where?: InputMaybe<Languagename_Bool_Exp>;
};


export type Query_RootLanguagename_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Languagename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Languagename_Order_By>>;
  where?: InputMaybe<Languagename_Bool_Exp>;
};


export type Query_RootLocationArgs = {
  distinct_on?: InputMaybe<Array<Location_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Location_Order_By>>;
  where?: InputMaybe<Location_Bool_Exp>;
};


export type Query_RootLocation_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Location_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Location_Order_By>>;
  where?: InputMaybe<Location_Bool_Exp>;
};


export type Query_RootLocationareaArgs = {
  distinct_on?: InputMaybe<Array<Locationarea_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Locationarea_Order_By>>;
  where?: InputMaybe<Locationarea_Bool_Exp>;
};


export type Query_RootLocationarea_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Locationarea_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Locationarea_Order_By>>;
  where?: InputMaybe<Locationarea_Bool_Exp>;
};


export type Query_RootLocationareaencounterrateArgs = {
  distinct_on?: InputMaybe<Array<Locationareaencounterrate_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Locationareaencounterrate_Order_By>>;
  where?: InputMaybe<Locationareaencounterrate_Bool_Exp>;
};


export type Query_RootLocationareaencounterrate_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Locationareaencounterrate_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Locationareaencounterrate_Order_By>>;
  where?: InputMaybe<Locationareaencounterrate_Bool_Exp>;
};


export type Query_RootLocationareanameArgs = {
  distinct_on?: InputMaybe<Array<Locationareaname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Locationareaname_Order_By>>;
  where?: InputMaybe<Locationareaname_Bool_Exp>;
};


export type Query_RootLocationareaname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Locationareaname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Locationareaname_Order_By>>;
  where?: InputMaybe<Locationareaname_Bool_Exp>;
};


export type Query_RootLocationgameindexArgs = {
  distinct_on?: InputMaybe<Array<Locationgameindex_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Locationgameindex_Order_By>>;
  where?: InputMaybe<Locationgameindex_Bool_Exp>;
};


export type Query_RootLocationgameindex_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Locationgameindex_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Locationgameindex_Order_By>>;
  where?: InputMaybe<Locationgameindex_Bool_Exp>;
};


export type Query_RootLocationnameArgs = {
  distinct_on?: InputMaybe<Array<Locationname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Locationname_Order_By>>;
  where?: InputMaybe<Locationname_Bool_Exp>;
};


export type Query_RootLocationname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Locationname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Locationname_Order_By>>;
  where?: InputMaybe<Locationname_Bool_Exp>;
};


export type Query_RootMachineArgs = {
  distinct_on?: InputMaybe<Array<Machine_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Machine_Order_By>>;
  where?: InputMaybe<Machine_Bool_Exp>;
};


export type Query_RootMachine_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Machine_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Machine_Order_By>>;
  where?: InputMaybe<Machine_Bool_Exp>;
};


export type Query_RootMoveArgs = {
  distinct_on?: InputMaybe<Array<Move_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Move_Order_By>>;
  where?: InputMaybe<Move_Bool_Exp>;
};


export type Query_RootMove_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Move_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Move_Order_By>>;
  where?: InputMaybe<Move_Bool_Exp>;
};


export type Query_RootMoveattributeArgs = {
  distinct_on?: InputMaybe<Array<Moveattribute_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Moveattribute_Order_By>>;
  where?: InputMaybe<Moveattribute_Bool_Exp>;
};


export type Query_RootMoveattribute_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Moveattribute_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Moveattribute_Order_By>>;
  where?: InputMaybe<Moveattribute_Bool_Exp>;
};


export type Query_RootMoveattributedescriptionArgs = {
  distinct_on?: InputMaybe<Array<Moveattributedescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Moveattributedescription_Order_By>>;
  where?: InputMaybe<Moveattributedescription_Bool_Exp>;
};


export type Query_RootMoveattributedescription_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Moveattributedescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Moveattributedescription_Order_By>>;
  where?: InputMaybe<Moveattributedescription_Bool_Exp>;
};


export type Query_RootMoveattributemapArgs = {
  distinct_on?: InputMaybe<Array<Moveattributemap_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Moveattributemap_Order_By>>;
  where?: InputMaybe<Moveattributemap_Bool_Exp>;
};


export type Query_RootMoveattributemap_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Moveattributemap_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Moveattributemap_Order_By>>;
  where?: InputMaybe<Moveattributemap_Bool_Exp>;
};


export type Query_RootMoveattributenameArgs = {
  distinct_on?: InputMaybe<Array<Moveattributename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Moveattributename_Order_By>>;
  where?: InputMaybe<Moveattributename_Bool_Exp>;
};


export type Query_RootMoveattributename_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Moveattributename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Moveattributename_Order_By>>;
  where?: InputMaybe<Moveattributename_Bool_Exp>;
};


export type Query_RootMovebattlestyleArgs = {
  distinct_on?: InputMaybe<Array<Movebattlestyle_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movebattlestyle_Order_By>>;
  where?: InputMaybe<Movebattlestyle_Bool_Exp>;
};


export type Query_RootMovebattlestyle_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Movebattlestyle_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movebattlestyle_Order_By>>;
  where?: InputMaybe<Movebattlestyle_Bool_Exp>;
};


export type Query_RootMovebattlestylenameArgs = {
  distinct_on?: InputMaybe<Array<Movebattlestylename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movebattlestylename_Order_By>>;
  where?: InputMaybe<Movebattlestylename_Bool_Exp>;
};


export type Query_RootMovebattlestylename_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Movebattlestylename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movebattlestylename_Order_By>>;
  where?: InputMaybe<Movebattlestylename_Bool_Exp>;
};


export type Query_RootMovechangeArgs = {
  distinct_on?: InputMaybe<Array<Movechange_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movechange_Order_By>>;
  where?: InputMaybe<Movechange_Bool_Exp>;
};


export type Query_RootMovechange_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Movechange_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movechange_Order_By>>;
  where?: InputMaybe<Movechange_Bool_Exp>;
};


export type Query_RootMovedamageclassArgs = {
  distinct_on?: InputMaybe<Array<Movedamageclass_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movedamageclass_Order_By>>;
  where?: InputMaybe<Movedamageclass_Bool_Exp>;
};


export type Query_RootMovedamageclass_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Movedamageclass_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movedamageclass_Order_By>>;
  where?: InputMaybe<Movedamageclass_Bool_Exp>;
};


export type Query_RootMovedamageclassdescriptionArgs = {
  distinct_on?: InputMaybe<Array<Movedamageclassdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movedamageclassdescription_Order_By>>;
  where?: InputMaybe<Movedamageclassdescription_Bool_Exp>;
};


export type Query_RootMovedamageclassdescription_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Movedamageclassdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movedamageclassdescription_Order_By>>;
  where?: InputMaybe<Movedamageclassdescription_Bool_Exp>;
};


export type Query_RootMovedamageclassnameArgs = {
  distinct_on?: InputMaybe<Array<Movedamageclassname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movedamageclassname_Order_By>>;
  where?: InputMaybe<Movedamageclassname_Bool_Exp>;
};


export type Query_RootMovedamageclassname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Movedamageclassname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movedamageclassname_Order_By>>;
  where?: InputMaybe<Movedamageclassname_Bool_Exp>;
};


export type Query_RootMoveeffectArgs = {
  distinct_on?: InputMaybe<Array<Moveeffect_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Moveeffect_Order_By>>;
  where?: InputMaybe<Moveeffect_Bool_Exp>;
};


export type Query_RootMoveeffect_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Moveeffect_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Moveeffect_Order_By>>;
  where?: InputMaybe<Moveeffect_Bool_Exp>;
};


export type Query_RootMoveeffectchangeArgs = {
  distinct_on?: InputMaybe<Array<Moveeffectchange_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Moveeffectchange_Order_By>>;
  where?: InputMaybe<Moveeffectchange_Bool_Exp>;
};


export type Query_RootMoveeffectchange_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Moveeffectchange_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Moveeffectchange_Order_By>>;
  where?: InputMaybe<Moveeffectchange_Bool_Exp>;
};


export type Query_RootMoveeffectchangeeffecttextArgs = {
  distinct_on?: InputMaybe<Array<Moveeffectchangeeffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Moveeffectchangeeffecttext_Order_By>>;
  where?: InputMaybe<Moveeffectchangeeffecttext_Bool_Exp>;
};


export type Query_RootMoveeffectchangeeffecttext_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Moveeffectchangeeffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Moveeffectchangeeffecttext_Order_By>>;
  where?: InputMaybe<Moveeffectchangeeffecttext_Bool_Exp>;
};


export type Query_RootMoveeffecteffecttextArgs = {
  distinct_on?: InputMaybe<Array<Moveeffecteffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Moveeffecteffecttext_Order_By>>;
  where?: InputMaybe<Moveeffecteffecttext_Bool_Exp>;
};


export type Query_RootMoveeffecteffecttext_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Moveeffecteffecttext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Moveeffecteffecttext_Order_By>>;
  where?: InputMaybe<Moveeffecteffecttext_Bool_Exp>;
};


export type Query_RootMoveflavortextArgs = {
  distinct_on?: InputMaybe<Array<Moveflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Moveflavortext_Order_By>>;
  where?: InputMaybe<Moveflavortext_Bool_Exp>;
};


export type Query_RootMoveflavortext_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Moveflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Moveflavortext_Order_By>>;
  where?: InputMaybe<Moveflavortext_Bool_Exp>;
};


export type Query_RootMovelearnmethodArgs = {
  distinct_on?: InputMaybe<Array<Movelearnmethod_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movelearnmethod_Order_By>>;
  where?: InputMaybe<Movelearnmethod_Bool_Exp>;
};


export type Query_RootMovelearnmethod_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Movelearnmethod_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movelearnmethod_Order_By>>;
  where?: InputMaybe<Movelearnmethod_Bool_Exp>;
};


export type Query_RootMovelearnmethoddescriptionArgs = {
  distinct_on?: InputMaybe<Array<Movelearnmethoddescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movelearnmethoddescription_Order_By>>;
  where?: InputMaybe<Movelearnmethoddescription_Bool_Exp>;
};


export type Query_RootMovelearnmethoddescription_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Movelearnmethoddescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movelearnmethoddescription_Order_By>>;
  where?: InputMaybe<Movelearnmethoddescription_Bool_Exp>;
};


export type Query_RootMovelearnmethodnameArgs = {
  distinct_on?: InputMaybe<Array<Movelearnmethodname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movelearnmethodname_Order_By>>;
  where?: InputMaybe<Movelearnmethodname_Bool_Exp>;
};


export type Query_RootMovelearnmethodname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Movelearnmethodname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movelearnmethodname_Order_By>>;
  where?: InputMaybe<Movelearnmethodname_Bool_Exp>;
};


export type Query_RootMovemetaArgs = {
  distinct_on?: InputMaybe<Array<Movemeta_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movemeta_Order_By>>;
  where?: InputMaybe<Movemeta_Bool_Exp>;
};


export type Query_RootMovemeta_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Movemeta_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movemeta_Order_By>>;
  where?: InputMaybe<Movemeta_Bool_Exp>;
};


export type Query_RootMovemetaailmentArgs = {
  distinct_on?: InputMaybe<Array<Movemetaailment_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movemetaailment_Order_By>>;
  where?: InputMaybe<Movemetaailment_Bool_Exp>;
};


export type Query_RootMovemetaailment_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Movemetaailment_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movemetaailment_Order_By>>;
  where?: InputMaybe<Movemetaailment_Bool_Exp>;
};


export type Query_RootMovemetaailmentnameArgs = {
  distinct_on?: InputMaybe<Array<Movemetaailmentname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movemetaailmentname_Order_By>>;
  where?: InputMaybe<Movemetaailmentname_Bool_Exp>;
};


export type Query_RootMovemetaailmentname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Movemetaailmentname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movemetaailmentname_Order_By>>;
  where?: InputMaybe<Movemetaailmentname_Bool_Exp>;
};


export type Query_RootMovemetacategoryArgs = {
  distinct_on?: InputMaybe<Array<Movemetacategory_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movemetacategory_Order_By>>;
  where?: InputMaybe<Movemetacategory_Bool_Exp>;
};


export type Query_RootMovemetacategory_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Movemetacategory_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movemetacategory_Order_By>>;
  where?: InputMaybe<Movemetacategory_Bool_Exp>;
};


export type Query_RootMovemetacategorydescriptionArgs = {
  distinct_on?: InputMaybe<Array<Movemetacategorydescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movemetacategorydescription_Order_By>>;
  where?: InputMaybe<Movemetacategorydescription_Bool_Exp>;
};


export type Query_RootMovemetacategorydescription_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Movemetacategorydescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movemetacategorydescription_Order_By>>;
  where?: InputMaybe<Movemetacategorydescription_Bool_Exp>;
};


export type Query_RootMovemetastatchangeArgs = {
  distinct_on?: InputMaybe<Array<Movemetastatchange_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movemetastatchange_Order_By>>;
  where?: InputMaybe<Movemetastatchange_Bool_Exp>;
};


export type Query_RootMovemetastatchange_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Movemetastatchange_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movemetastatchange_Order_By>>;
  where?: InputMaybe<Movemetastatchange_Bool_Exp>;
};


export type Query_RootMovenameArgs = {
  distinct_on?: InputMaybe<Array<Movename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movename_Order_By>>;
  where?: InputMaybe<Movename_Bool_Exp>;
};


export type Query_RootMovename_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Movename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movename_Order_By>>;
  where?: InputMaybe<Movename_Bool_Exp>;
};


export type Query_RootMovetargetArgs = {
  distinct_on?: InputMaybe<Array<Movetarget_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movetarget_Order_By>>;
  where?: InputMaybe<Movetarget_Bool_Exp>;
};


export type Query_RootMovetarget_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Movetarget_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movetarget_Order_By>>;
  where?: InputMaybe<Movetarget_Bool_Exp>;
};


export type Query_RootMovetargetdescriptionArgs = {
  distinct_on?: InputMaybe<Array<Movetargetdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movetargetdescription_Order_By>>;
  where?: InputMaybe<Movetargetdescription_Bool_Exp>;
};


export type Query_RootMovetargetdescription_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Movetargetdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movetargetdescription_Order_By>>;
  where?: InputMaybe<Movetargetdescription_Bool_Exp>;
};


export type Query_RootMovetargetnameArgs = {
  distinct_on?: InputMaybe<Array<Movetargetname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movetargetname_Order_By>>;
  where?: InputMaybe<Movetargetname_Bool_Exp>;
};


export type Query_RootMovetargetname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Movetargetname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movetargetname_Order_By>>;
  where?: InputMaybe<Movetargetname_Bool_Exp>;
};


export type Query_RootNatureArgs = {
  distinct_on?: InputMaybe<Array<Nature_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Nature_Order_By>>;
  where?: InputMaybe<Nature_Bool_Exp>;
};


export type Query_RootNature_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Nature_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Nature_Order_By>>;
  where?: InputMaybe<Nature_Bool_Exp>;
};


export type Query_RootNaturebattlestylepreferenceArgs = {
  distinct_on?: InputMaybe<Array<Naturebattlestylepreference_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Naturebattlestylepreference_Order_By>>;
  where?: InputMaybe<Naturebattlestylepreference_Bool_Exp>;
};


export type Query_RootNaturebattlestylepreference_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Naturebattlestylepreference_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Naturebattlestylepreference_Order_By>>;
  where?: InputMaybe<Naturebattlestylepreference_Bool_Exp>;
};


export type Query_RootNaturenameArgs = {
  distinct_on?: InputMaybe<Array<Naturename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Naturename_Order_By>>;
  where?: InputMaybe<Naturename_Bool_Exp>;
};


export type Query_RootNaturename_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Naturename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Naturename_Order_By>>;
  where?: InputMaybe<Naturename_Bool_Exp>;
};


export type Query_RootNaturepokeathlonstatArgs = {
  distinct_on?: InputMaybe<Array<Naturepokeathlonstat_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Naturepokeathlonstat_Order_By>>;
  where?: InputMaybe<Naturepokeathlonstat_Bool_Exp>;
};


export type Query_RootNaturepokeathlonstat_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Naturepokeathlonstat_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Naturepokeathlonstat_Order_By>>;
  where?: InputMaybe<Naturepokeathlonstat_Bool_Exp>;
};


export type Query_RootPalparkArgs = {
  distinct_on?: InputMaybe<Array<Palpark_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Palpark_Order_By>>;
  where?: InputMaybe<Palpark_Bool_Exp>;
};


export type Query_RootPalpark_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Palpark_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Palpark_Order_By>>;
  where?: InputMaybe<Palpark_Bool_Exp>;
};


export type Query_RootPalparkareaArgs = {
  distinct_on?: InputMaybe<Array<Palparkarea_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Palparkarea_Order_By>>;
  where?: InputMaybe<Palparkarea_Bool_Exp>;
};


export type Query_RootPalparkarea_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Palparkarea_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Palparkarea_Order_By>>;
  where?: InputMaybe<Palparkarea_Bool_Exp>;
};


export type Query_RootPalparkareanameArgs = {
  distinct_on?: InputMaybe<Array<Palparkareaname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Palparkareaname_Order_By>>;
  where?: InputMaybe<Palparkareaname_Bool_Exp>;
};


export type Query_RootPalparkareaname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Palparkareaname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Palparkareaname_Order_By>>;
  where?: InputMaybe<Palparkareaname_Bool_Exp>;
};


export type Query_RootPokeathlonstatArgs = {
  distinct_on?: InputMaybe<Array<Pokeathlonstat_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokeathlonstat_Order_By>>;
  where?: InputMaybe<Pokeathlonstat_Bool_Exp>;
};


export type Query_RootPokeathlonstat_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokeathlonstat_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokeathlonstat_Order_By>>;
  where?: InputMaybe<Pokeathlonstat_Bool_Exp>;
};


export type Query_RootPokeathlonstatnameArgs = {
  distinct_on?: InputMaybe<Array<Pokeathlonstatname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokeathlonstatname_Order_By>>;
  where?: InputMaybe<Pokeathlonstatname_Bool_Exp>;
};


export type Query_RootPokeathlonstatname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokeathlonstatname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokeathlonstatname_Order_By>>;
  where?: InputMaybe<Pokeathlonstatname_Bool_Exp>;
};


export type Query_RootPokedexArgs = {
  distinct_on?: InputMaybe<Array<Pokedex_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokedex_Order_By>>;
  where?: InputMaybe<Pokedex_Bool_Exp>;
};


export type Query_RootPokedex_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokedex_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokedex_Order_By>>;
  where?: InputMaybe<Pokedex_Bool_Exp>;
};


export type Query_RootPokedexdescriptionArgs = {
  distinct_on?: InputMaybe<Array<Pokedexdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokedexdescription_Order_By>>;
  where?: InputMaybe<Pokedexdescription_Bool_Exp>;
};


export type Query_RootPokedexdescription_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokedexdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokedexdescription_Order_By>>;
  where?: InputMaybe<Pokedexdescription_Bool_Exp>;
};


export type Query_RootPokedexnameArgs = {
  distinct_on?: InputMaybe<Array<Pokedexname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokedexname_Order_By>>;
  where?: InputMaybe<Pokedexname_Bool_Exp>;
};


export type Query_RootPokedexname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokedexname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokedexname_Order_By>>;
  where?: InputMaybe<Pokedexname_Bool_Exp>;
};


export type Query_RootPokedexversiongroupArgs = {
  distinct_on?: InputMaybe<Array<Pokedexversiongroup_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokedexversiongroup_Order_By>>;
  where?: InputMaybe<Pokedexversiongroup_Bool_Exp>;
};


export type Query_RootPokedexversiongroup_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokedexversiongroup_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokedexversiongroup_Order_By>>;
  where?: InputMaybe<Pokedexversiongroup_Bool_Exp>;
};


export type Query_RootPokemonArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_Order_By>>;
  where?: InputMaybe<Pokemon_Bool_Exp>;
};


export type Query_RootPokemon_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemon_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemon_Order_By>>;
  where?: InputMaybe<Pokemon_Bool_Exp>;
};


export type Query_RootPokemonabilityArgs = {
  distinct_on?: InputMaybe<Array<Pokemonability_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonability_Order_By>>;
  where?: InputMaybe<Pokemonability_Bool_Exp>;
};


export type Query_RootPokemonability_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonability_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonability_Order_By>>;
  where?: InputMaybe<Pokemonability_Bool_Exp>;
};


export type Query_RootPokemonabilitypastArgs = {
  distinct_on?: InputMaybe<Array<Pokemonabilitypast_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonabilitypast_Order_By>>;
  where?: InputMaybe<Pokemonabilitypast_Bool_Exp>;
};


export type Query_RootPokemonabilitypast_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonabilitypast_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonabilitypast_Order_By>>;
  where?: InputMaybe<Pokemonabilitypast_Bool_Exp>;
};


export type Query_RootPokemoncolorArgs = {
  distinct_on?: InputMaybe<Array<Pokemoncolor_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemoncolor_Order_By>>;
  where?: InputMaybe<Pokemoncolor_Bool_Exp>;
};


export type Query_RootPokemoncolor_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemoncolor_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemoncolor_Order_By>>;
  where?: InputMaybe<Pokemoncolor_Bool_Exp>;
};


export type Query_RootPokemoncolornameArgs = {
  distinct_on?: InputMaybe<Array<Pokemoncolorname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemoncolorname_Order_By>>;
  where?: InputMaybe<Pokemoncolorname_Bool_Exp>;
};


export type Query_RootPokemoncolorname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemoncolorname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemoncolorname_Order_By>>;
  where?: InputMaybe<Pokemoncolorname_Bool_Exp>;
};


export type Query_RootPokemoncriesArgs = {
  distinct_on?: InputMaybe<Array<Pokemoncries_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemoncries_Order_By>>;
  where?: InputMaybe<Pokemoncries_Bool_Exp>;
};


export type Query_RootPokemoncries_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemoncries_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemoncries_Order_By>>;
  where?: InputMaybe<Pokemoncries_Bool_Exp>;
};


export type Query_RootPokemondexnumberArgs = {
  distinct_on?: InputMaybe<Array<Pokemondexnumber_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemondexnumber_Order_By>>;
  where?: InputMaybe<Pokemondexnumber_Bool_Exp>;
};


export type Query_RootPokemondexnumber_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemondexnumber_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemondexnumber_Order_By>>;
  where?: InputMaybe<Pokemondexnumber_Bool_Exp>;
};


export type Query_RootPokemonegggroupArgs = {
  distinct_on?: InputMaybe<Array<Pokemonegggroup_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonegggroup_Order_By>>;
  where?: InputMaybe<Pokemonegggroup_Bool_Exp>;
};


export type Query_RootPokemonegggroup_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonegggroup_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonegggroup_Order_By>>;
  where?: InputMaybe<Pokemonegggroup_Bool_Exp>;
};


export type Query_RootPokemonevolutionArgs = {
  distinct_on?: InputMaybe<Array<Pokemonevolution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonevolution_Order_By>>;
  where?: InputMaybe<Pokemonevolution_Bool_Exp>;
};


export type Query_RootPokemonevolution_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonevolution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonevolution_Order_By>>;
  where?: InputMaybe<Pokemonevolution_Bool_Exp>;
};


export type Query_RootPokemonformArgs = {
  distinct_on?: InputMaybe<Array<Pokemonform_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonform_Order_By>>;
  where?: InputMaybe<Pokemonform_Bool_Exp>;
};


export type Query_RootPokemonform_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonform_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonform_Order_By>>;
  where?: InputMaybe<Pokemonform_Bool_Exp>;
};


export type Query_RootPokemonformgenerationArgs = {
  distinct_on?: InputMaybe<Array<Pokemonformgeneration_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonformgeneration_Order_By>>;
  where?: InputMaybe<Pokemonformgeneration_Bool_Exp>;
};


export type Query_RootPokemonformgeneration_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonformgeneration_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonformgeneration_Order_By>>;
  where?: InputMaybe<Pokemonformgeneration_Bool_Exp>;
};


export type Query_RootPokemonformnameArgs = {
  distinct_on?: InputMaybe<Array<Pokemonformname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonformname_Order_By>>;
  where?: InputMaybe<Pokemonformname_Bool_Exp>;
};


export type Query_RootPokemonformname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonformname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonformname_Order_By>>;
  where?: InputMaybe<Pokemonformname_Bool_Exp>;
};


export type Query_RootPokemonformspritesArgs = {
  distinct_on?: InputMaybe<Array<Pokemonformsprites_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonformsprites_Order_By>>;
  where?: InputMaybe<Pokemonformsprites_Bool_Exp>;
};


export type Query_RootPokemonformsprites_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonformsprites_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonformsprites_Order_By>>;
  where?: InputMaybe<Pokemonformsprites_Bool_Exp>;
};


export type Query_RootPokemonformtypeArgs = {
  distinct_on?: InputMaybe<Array<Pokemonformtype_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonformtype_Order_By>>;
  where?: InputMaybe<Pokemonformtype_Bool_Exp>;
};


export type Query_RootPokemonformtype_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonformtype_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonformtype_Order_By>>;
  where?: InputMaybe<Pokemonformtype_Bool_Exp>;
};


export type Query_RootPokemongameindexArgs = {
  distinct_on?: InputMaybe<Array<Pokemongameindex_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemongameindex_Order_By>>;
  where?: InputMaybe<Pokemongameindex_Bool_Exp>;
};


export type Query_RootPokemongameindex_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemongameindex_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemongameindex_Order_By>>;
  where?: InputMaybe<Pokemongameindex_Bool_Exp>;
};


export type Query_RootPokemonhabitatArgs = {
  distinct_on?: InputMaybe<Array<Pokemonhabitat_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonhabitat_Order_By>>;
  where?: InputMaybe<Pokemonhabitat_Bool_Exp>;
};


export type Query_RootPokemonhabitat_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonhabitat_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonhabitat_Order_By>>;
  where?: InputMaybe<Pokemonhabitat_Bool_Exp>;
};


export type Query_RootPokemonhabitatnameArgs = {
  distinct_on?: InputMaybe<Array<Pokemonhabitatname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonhabitatname_Order_By>>;
  where?: InputMaybe<Pokemonhabitatname_Bool_Exp>;
};


export type Query_RootPokemonhabitatname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonhabitatname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonhabitatname_Order_By>>;
  where?: InputMaybe<Pokemonhabitatname_Bool_Exp>;
};


export type Query_RootPokemonitemArgs = {
  distinct_on?: InputMaybe<Array<Pokemonitem_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonitem_Order_By>>;
  where?: InputMaybe<Pokemonitem_Bool_Exp>;
};


export type Query_RootPokemonitem_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonitem_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonitem_Order_By>>;
  where?: InputMaybe<Pokemonitem_Bool_Exp>;
};


export type Query_RootPokemonmoveArgs = {
  distinct_on?: InputMaybe<Array<Pokemonmove_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonmove_Order_By>>;
  where?: InputMaybe<Pokemonmove_Bool_Exp>;
};


export type Query_RootPokemonmove_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonmove_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonmove_Order_By>>;
  where?: InputMaybe<Pokemonmove_Bool_Exp>;
};


export type Query_RootPokemonshapeArgs = {
  distinct_on?: InputMaybe<Array<Pokemonshape_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonshape_Order_By>>;
  where?: InputMaybe<Pokemonshape_Bool_Exp>;
};


export type Query_RootPokemonshape_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonshape_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonshape_Order_By>>;
  where?: InputMaybe<Pokemonshape_Bool_Exp>;
};


export type Query_RootPokemonshapenameArgs = {
  distinct_on?: InputMaybe<Array<Pokemonshapename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonshapename_Order_By>>;
  where?: InputMaybe<Pokemonshapename_Bool_Exp>;
};


export type Query_RootPokemonshapename_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonshapename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonshapename_Order_By>>;
  where?: InputMaybe<Pokemonshapename_Bool_Exp>;
};


export type Query_RootPokemonspeciesArgs = {
  distinct_on?: InputMaybe<Array<Pokemonspecies_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonspecies_Order_By>>;
  where?: InputMaybe<Pokemonspecies_Bool_Exp>;
};


export type Query_RootPokemonspecies_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonspecies_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonspecies_Order_By>>;
  where?: InputMaybe<Pokemonspecies_Bool_Exp>;
};


export type Query_RootPokemonspeciesdescriptionArgs = {
  distinct_on?: InputMaybe<Array<Pokemonspeciesdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonspeciesdescription_Order_By>>;
  where?: InputMaybe<Pokemonspeciesdescription_Bool_Exp>;
};


export type Query_RootPokemonspeciesdescription_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonspeciesdescription_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonspeciesdescription_Order_By>>;
  where?: InputMaybe<Pokemonspeciesdescription_Bool_Exp>;
};


export type Query_RootPokemonspeciesflavortextArgs = {
  distinct_on?: InputMaybe<Array<Pokemonspeciesflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonspeciesflavortext_Order_By>>;
  where?: InputMaybe<Pokemonspeciesflavortext_Bool_Exp>;
};


export type Query_RootPokemonspeciesflavortext_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonspeciesflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonspeciesflavortext_Order_By>>;
  where?: InputMaybe<Pokemonspeciesflavortext_Bool_Exp>;
};


export type Query_RootPokemonspeciesnameArgs = {
  distinct_on?: InputMaybe<Array<Pokemonspeciesname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonspeciesname_Order_By>>;
  where?: InputMaybe<Pokemonspeciesname_Bool_Exp>;
};


export type Query_RootPokemonspeciesname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonspeciesname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonspeciesname_Order_By>>;
  where?: InputMaybe<Pokemonspeciesname_Bool_Exp>;
};


export type Query_RootPokemonspritesArgs = {
  distinct_on?: InputMaybe<Array<Pokemonsprites_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonsprites_Order_By>>;
  where?: InputMaybe<Pokemonsprites_Bool_Exp>;
};


export type Query_RootPokemonsprites_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonsprites_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonsprites_Order_By>>;
  where?: InputMaybe<Pokemonsprites_Bool_Exp>;
};


export type Query_RootPokemonstatArgs = {
  distinct_on?: InputMaybe<Array<Pokemonstat_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonstat_Order_By>>;
  where?: InputMaybe<Pokemonstat_Bool_Exp>;
};


export type Query_RootPokemonstat_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonstat_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonstat_Order_By>>;
  where?: InputMaybe<Pokemonstat_Bool_Exp>;
};


export type Query_RootPokemontypeArgs = {
  distinct_on?: InputMaybe<Array<Pokemontype_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemontype_Order_By>>;
  where?: InputMaybe<Pokemontype_Bool_Exp>;
};


export type Query_RootPokemontype_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemontype_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemontype_Order_By>>;
  where?: InputMaybe<Pokemontype_Bool_Exp>;
};


export type Query_RootPokemontypepastArgs = {
  distinct_on?: InputMaybe<Array<Pokemontypepast_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemontypepast_Order_By>>;
  where?: InputMaybe<Pokemontypepast_Bool_Exp>;
};


export type Query_RootPokemontypepast_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemontypepast_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemontypepast_Order_By>>;
  where?: InputMaybe<Pokemontypepast_Bool_Exp>;
};


export type Query_RootRegionArgs = {
  distinct_on?: InputMaybe<Array<Region_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Region_Order_By>>;
  where?: InputMaybe<Region_Bool_Exp>;
};


export type Query_RootRegion_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Region_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Region_Order_By>>;
  where?: InputMaybe<Region_Bool_Exp>;
};


export type Query_RootRegionnameArgs = {
  distinct_on?: InputMaybe<Array<Regionname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Regionname_Order_By>>;
  where?: InputMaybe<Regionname_Bool_Exp>;
};


export type Query_RootRegionname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Regionname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Regionname_Order_By>>;
  where?: InputMaybe<Regionname_Bool_Exp>;
};


export type Query_RootStatArgs = {
  distinct_on?: InputMaybe<Array<Stat_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Stat_Order_By>>;
  where?: InputMaybe<Stat_Bool_Exp>;
};


export type Query_RootStat_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Stat_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Stat_Order_By>>;
  where?: InputMaybe<Stat_Bool_Exp>;
};


export type Query_RootStatnameArgs = {
  distinct_on?: InputMaybe<Array<Statname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Statname_Order_By>>;
  where?: InputMaybe<Statname_Bool_Exp>;
};


export type Query_RootStatname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Statname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Statname_Order_By>>;
  where?: InputMaybe<Statname_Bool_Exp>;
};


export type Query_RootSupercontestcomboArgs = {
  distinct_on?: InputMaybe<Array<Supercontestcombo_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Supercontestcombo_Order_By>>;
  where?: InputMaybe<Supercontestcombo_Bool_Exp>;
};


export type Query_RootSupercontestcombo_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Supercontestcombo_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Supercontestcombo_Order_By>>;
  where?: InputMaybe<Supercontestcombo_Bool_Exp>;
};


export type Query_RootSupercontesteffectArgs = {
  distinct_on?: InputMaybe<Array<Supercontesteffect_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Supercontesteffect_Order_By>>;
  where?: InputMaybe<Supercontesteffect_Bool_Exp>;
};


export type Query_RootSupercontesteffect_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Supercontesteffect_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Supercontesteffect_Order_By>>;
  where?: InputMaybe<Supercontesteffect_Bool_Exp>;
};


export type Query_RootSupercontesteffectflavortextArgs = {
  distinct_on?: InputMaybe<Array<Supercontesteffectflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Supercontesteffectflavortext_Order_By>>;
  where?: InputMaybe<Supercontesteffectflavortext_Bool_Exp>;
};


export type Query_RootSupercontesteffectflavortext_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Supercontesteffectflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Supercontesteffectflavortext_Order_By>>;
  where?: InputMaybe<Supercontesteffectflavortext_Bool_Exp>;
};


export type Query_RootTypeArgs = {
  distinct_on?: InputMaybe<Array<Type_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Type_Order_By>>;
  where?: InputMaybe<Type_Bool_Exp>;
};


export type Query_RootType_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Type_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Type_Order_By>>;
  where?: InputMaybe<Type_Bool_Exp>;
};


export type Query_RootTypeefficacyArgs = {
  distinct_on?: InputMaybe<Array<Typeefficacy_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Typeefficacy_Order_By>>;
  where?: InputMaybe<Typeefficacy_Bool_Exp>;
};


export type Query_RootTypeefficacy_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Typeefficacy_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Typeefficacy_Order_By>>;
  where?: InputMaybe<Typeefficacy_Bool_Exp>;
};


export type Query_RootTypeefficacypastArgs = {
  distinct_on?: InputMaybe<Array<Typeefficacypast_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Typeefficacypast_Order_By>>;
  where?: InputMaybe<Typeefficacypast_Bool_Exp>;
};


export type Query_RootTypeefficacypast_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Typeefficacypast_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Typeefficacypast_Order_By>>;
  where?: InputMaybe<Typeefficacypast_Bool_Exp>;
};


export type Query_RootTypegameindexArgs = {
  distinct_on?: InputMaybe<Array<Typegameindex_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Typegameindex_Order_By>>;
  where?: InputMaybe<Typegameindex_Bool_Exp>;
};


export type Query_RootTypegameindex_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Typegameindex_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Typegameindex_Order_By>>;
  where?: InputMaybe<Typegameindex_Bool_Exp>;
};


export type Query_RootTypenameArgs = {
  distinct_on?: InputMaybe<Array<Typename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Typename_Order_By>>;
  where?: InputMaybe<Typename_Bool_Exp>;
};


export type Query_RootTypename_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Typename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Typename_Order_By>>;
  where?: InputMaybe<Typename_Bool_Exp>;
};


export type Query_RootVersionArgs = {
  distinct_on?: InputMaybe<Array<Version_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Version_Order_By>>;
  where?: InputMaybe<Version_Bool_Exp>;
};


export type Query_RootVersion_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Version_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Version_Order_By>>;
  where?: InputMaybe<Version_Bool_Exp>;
};


export type Query_RootVersiongroupArgs = {
  distinct_on?: InputMaybe<Array<Versiongroup_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Versiongroup_Order_By>>;
  where?: InputMaybe<Versiongroup_Bool_Exp>;
};


export type Query_RootVersiongroup_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Versiongroup_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Versiongroup_Order_By>>;
  where?: InputMaybe<Versiongroup_Bool_Exp>;
};


export type Query_RootVersiongroupmovelearnmethodArgs = {
  distinct_on?: InputMaybe<Array<Versiongroupmovelearnmethod_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Versiongroupmovelearnmethod_Order_By>>;
  where?: InputMaybe<Versiongroupmovelearnmethod_Bool_Exp>;
};


export type Query_RootVersiongroupmovelearnmethod_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Versiongroupmovelearnmethod_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Versiongroupmovelearnmethod_Order_By>>;
  where?: InputMaybe<Versiongroupmovelearnmethod_Bool_Exp>;
};


export type Query_RootVersiongroupregionArgs = {
  distinct_on?: InputMaybe<Array<Versiongroupregion_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Versiongroupregion_Order_By>>;
  where?: InputMaybe<Versiongroupregion_Bool_Exp>;
};


export type Query_RootVersiongroupregion_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Versiongroupregion_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Versiongroupregion_Order_By>>;
  where?: InputMaybe<Versiongroupregion_Bool_Exp>;
};


export type Query_RootVersionnameArgs = {
  distinct_on?: InputMaybe<Array<Versionname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Versionname_Order_By>>;
  where?: InputMaybe<Versionname_Bool_Exp>;
};


export type Query_RootVersionname_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Versionname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Versionname_Order_By>>;
  where?: InputMaybe<Versionname_Bool_Exp>;
};

/** columns and relationships of "pokemon_v2_region" */
export type Region = {
  __typename?: 'region';
  /** An object relationship */
  generation?: Maybe<Generation>;
  /** An array relationship */
  generations: Array<Generation>;
  /** An aggregate relationship */
  generations_aggregate: Generation_Aggregate;
  id: Scalars['Int']['output'];
  /** An array relationship */
  locations: Array<Location>;
  /** An aggregate relationship */
  locations_aggregate: Location_Aggregate;
  name: Scalars['String']['output'];
  /** An array relationship */
  pokedexes: Array<Pokedex>;
  /** An aggregate relationship */
  pokedexes_aggregate: Pokedex_Aggregate;
  /** An array relationship */
  regionnames: Array<Regionname>;
  /** An aggregate relationship */
  regionnames_aggregate: Regionname_Aggregate;
  /** An array relationship */
  versiongroupregions: Array<Versiongroupregion>;
  /** An aggregate relationship */
  versiongroupregions_aggregate: Versiongroupregion_Aggregate;
};


/** columns and relationships of "pokemon_v2_region" */
export type RegionGenerationsArgs = {
  distinct_on?: InputMaybe<Array<Generation_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Generation_Order_By>>;
  where?: InputMaybe<Generation_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_region" */
export type RegionGenerations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Generation_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Generation_Order_By>>;
  where?: InputMaybe<Generation_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_region" */
export type RegionLocationsArgs = {
  distinct_on?: InputMaybe<Array<Location_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Location_Order_By>>;
  where?: InputMaybe<Location_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_region" */
export type RegionLocations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Location_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Location_Order_By>>;
  where?: InputMaybe<Location_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_region" */
export type RegionPokedexesArgs = {
  distinct_on?: InputMaybe<Array<Pokedex_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokedex_Order_By>>;
  where?: InputMaybe<Pokedex_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_region" */
export type RegionPokedexes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokedex_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokedex_Order_By>>;
  where?: InputMaybe<Pokedex_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_region" */
export type RegionRegionnamesArgs = {
  distinct_on?: InputMaybe<Array<Regionname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Regionname_Order_By>>;
  where?: InputMaybe<Regionname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_region" */
export type RegionRegionnames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Regionname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Regionname_Order_By>>;
  where?: InputMaybe<Regionname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_region" */
export type RegionVersiongroupregionsArgs = {
  distinct_on?: InputMaybe<Array<Versiongroupregion_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Versiongroupregion_Order_By>>;
  where?: InputMaybe<Versiongroupregion_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_region" */
export type RegionVersiongroupregions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Versiongroupregion_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Versiongroupregion_Order_By>>;
  where?: InputMaybe<Versiongroupregion_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_region" */
export type Region_Aggregate = {
  __typename?: 'region_aggregate';
  aggregate?: Maybe<Region_Aggregate_Fields>;
  nodes: Array<Region>;
};

/** aggregate fields of "pokemon_v2_region" */
export type Region_Aggregate_Fields = {
  __typename?: 'region_aggregate_fields';
  avg?: Maybe<Region_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Region_Max_Fields>;
  min?: Maybe<Region_Min_Fields>;
  stddev?: Maybe<Region_Stddev_Fields>;
  stddev_pop?: Maybe<Region_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Region_Stddev_Samp_Fields>;
  sum?: Maybe<Region_Sum_Fields>;
  var_pop?: Maybe<Region_Var_Pop_Fields>;
  var_samp?: Maybe<Region_Var_Samp_Fields>;
  variance?: Maybe<Region_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_region" */
export type Region_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Region_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Region_Avg_Fields = {
  __typename?: 'region_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_region". All fields are combined with a logical 'AND'. */
export type Region_Bool_Exp = {
  _and?: InputMaybe<Array<Region_Bool_Exp>>;
  _not?: InputMaybe<Region_Bool_Exp>;
  _or?: InputMaybe<Array<Region_Bool_Exp>>;
  generation?: InputMaybe<Generation_Bool_Exp>;
  generations?: InputMaybe<Generation_Bool_Exp>;
  generations_aggregate?: InputMaybe<Generation_Aggregate_Bool_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  locations?: InputMaybe<Location_Bool_Exp>;
  locations_aggregate?: InputMaybe<Location_Aggregate_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  pokedexes?: InputMaybe<Pokedex_Bool_Exp>;
  pokedexes_aggregate?: InputMaybe<Pokedex_Aggregate_Bool_Exp>;
  regionnames?: InputMaybe<Regionname_Bool_Exp>;
  regionnames_aggregate?: InputMaybe<Regionname_Aggregate_Bool_Exp>;
  versiongroupregions?: InputMaybe<Versiongroupregion_Bool_Exp>;
  versiongroupregions_aggregate?: InputMaybe<Versiongroupregion_Aggregate_Bool_Exp>;
};

/** aggregate max on columns */
export type Region_Max_Fields = {
  __typename?: 'region_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Region_Min_Fields = {
  __typename?: 'region_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** Ordering options when selecting data from "pokemon_v2_region". */
export type Region_Order_By = {
  generation?: InputMaybe<Generation_Order_By>;
  generations_aggregate?: InputMaybe<Generation_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  locations_aggregate?: InputMaybe<Location_Aggregate_Order_By>;
  name?: InputMaybe<Order_By>;
  pokedexes_aggregate?: InputMaybe<Pokedex_Aggregate_Order_By>;
  regionnames_aggregate?: InputMaybe<Regionname_Aggregate_Order_By>;
  versiongroupregions_aggregate?: InputMaybe<Versiongroupregion_Aggregate_Order_By>;
};

/** select columns of table "pokemon_v2_region" */
export enum Region_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Region_Stddev_Fields = {
  __typename?: 'region_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Region_Stddev_Pop_Fields = {
  __typename?: 'region_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Region_Stddev_Samp_Fields = {
  __typename?: 'region_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate sum on columns */
export type Region_Sum_Fields = {
  __typename?: 'region_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate var_pop on columns */
export type Region_Var_Pop_Fields = {
  __typename?: 'region_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Region_Var_Samp_Fields = {
  __typename?: 'region_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Region_Variance_Fields = {
  __typename?: 'region_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_regionname" */
export type Regionname = {
  __typename?: 'regionname';
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
  /** An object relationship */
  region?: Maybe<Region>;
  region_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_regionname" */
export type Regionname_Aggregate = {
  __typename?: 'regionname_aggregate';
  aggregate?: Maybe<Regionname_Aggregate_Fields>;
  nodes: Array<Regionname>;
};

export type Regionname_Aggregate_Bool_Exp = {
  count?: InputMaybe<Regionname_Aggregate_Bool_Exp_Count>;
};

export type Regionname_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Regionname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Regionname_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_regionname" */
export type Regionname_Aggregate_Fields = {
  __typename?: 'regionname_aggregate_fields';
  avg?: Maybe<Regionname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Regionname_Max_Fields>;
  min?: Maybe<Regionname_Min_Fields>;
  stddev?: Maybe<Regionname_Stddev_Fields>;
  stddev_pop?: Maybe<Regionname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Regionname_Stddev_Samp_Fields>;
  sum?: Maybe<Regionname_Sum_Fields>;
  var_pop?: Maybe<Regionname_Var_Pop_Fields>;
  var_samp?: Maybe<Regionname_Var_Samp_Fields>;
  variance?: Maybe<Regionname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_regionname" */
export type Regionname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Regionname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_regionname" */
export type Regionname_Aggregate_Order_By = {
  avg?: InputMaybe<Regionname_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Regionname_Max_Order_By>;
  min?: InputMaybe<Regionname_Min_Order_By>;
  stddev?: InputMaybe<Regionname_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Regionname_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Regionname_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Regionname_Sum_Order_By>;
  var_pop?: InputMaybe<Regionname_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Regionname_Var_Samp_Order_By>;
  variance?: InputMaybe<Regionname_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Regionname_Avg_Fields = {
  __typename?: 'regionname_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_regionname" */
export type Regionname_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_regionname". All fields are combined with a logical 'AND'. */
export type Regionname_Bool_Exp = {
  _and?: InputMaybe<Array<Regionname_Bool_Exp>>;
  _not?: InputMaybe<Regionname_Bool_Exp>;
  _or?: InputMaybe<Array<Regionname_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  region?: InputMaybe<Region_Bool_Exp>;
  region_id?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Regionname_Max_Fields = {
  __typename?: 'regionname_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  region_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_regionname" */
export type Regionname_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Regionname_Min_Fields = {
  __typename?: 'regionname_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  region_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_regionname" */
export type Regionname_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_regionname". */
export type Regionname_Order_By = {
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  region?: InputMaybe<Region_Order_By>;
  region_id?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_regionname" */
export enum Regionname_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name',
  /** column name */
  RegionId = 'region_id'
}

/** aggregate stddev on columns */
export type Regionname_Stddev_Fields = {
  __typename?: 'regionname_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_regionname" */
export type Regionname_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Regionname_Stddev_Pop_Fields = {
  __typename?: 'regionname_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_regionname" */
export type Regionname_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Regionname_Stddev_Samp_Fields = {
  __typename?: 'regionname_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_regionname" */
export type Regionname_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Regionname_Sum_Fields = {
  __typename?: 'regionname_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  region_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_regionname" */
export type Regionname_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Regionname_Var_Pop_Fields = {
  __typename?: 'regionname_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_regionname" */
export type Regionname_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Regionname_Var_Samp_Fields = {
  __typename?: 'regionname_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_regionname" */
export type Regionname_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Regionname_Variance_Fields = {
  __typename?: 'regionname_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_regionname" */
export type Regionname_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_stat" */
export type Stat = {
  __typename?: 'stat';
  /** An array relationship */
  NaturesByIncreasedStatId: Array<Nature>;
  /** An aggregate relationship */
  NaturesByIncreasedStatId_aggregate: Nature_Aggregate;
  /** An array relationship */
  characteristics: Array<Characteristic>;
  /** An aggregate relationship */
  characteristics_aggregate: Characteristic_Aggregate;
  game_index: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  is_battle_only: Scalars['Boolean']['output'];
  move_damage_class_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  movedamageclass?: Maybe<Movedamageclass>;
  /** An array relationship */
  movemetastatchanges: Array<Movemetastatchange>;
  /** An aggregate relationship */
  movemetastatchanges_aggregate: Movemetastatchange_Aggregate;
  name: Scalars['String']['output'];
  /** An array relationship */
  natures: Array<Nature>;
  /** An aggregate relationship */
  natures_aggregate: Nature_Aggregate;
  /** An array relationship */
  pokemonstats: Array<Pokemonstat>;
  /** An aggregate relationship */
  pokemonstats_aggregate: Pokemonstat_Aggregate;
  /** An array relationship */
  statnames: Array<Statname>;
  /** An aggregate relationship */
  statnames_aggregate: Statname_Aggregate;
};


/** columns and relationships of "pokemon_v2_stat" */
export type StatNaturesByIncreasedStatIdArgs = {
  distinct_on?: InputMaybe<Array<Nature_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Nature_Order_By>>;
  where?: InputMaybe<Nature_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_stat" */
export type StatNaturesByIncreasedStatId_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Nature_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Nature_Order_By>>;
  where?: InputMaybe<Nature_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_stat" */
export type StatCharacteristicsArgs = {
  distinct_on?: InputMaybe<Array<Characteristic_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Characteristic_Order_By>>;
  where?: InputMaybe<Characteristic_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_stat" */
export type StatCharacteristics_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Characteristic_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Characteristic_Order_By>>;
  where?: InputMaybe<Characteristic_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_stat" */
export type StatMovemetastatchangesArgs = {
  distinct_on?: InputMaybe<Array<Movemetastatchange_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movemetastatchange_Order_By>>;
  where?: InputMaybe<Movemetastatchange_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_stat" */
export type StatMovemetastatchanges_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Movemetastatchange_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movemetastatchange_Order_By>>;
  where?: InputMaybe<Movemetastatchange_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_stat" */
export type StatNaturesArgs = {
  distinct_on?: InputMaybe<Array<Nature_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Nature_Order_By>>;
  where?: InputMaybe<Nature_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_stat" */
export type StatNatures_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Nature_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Nature_Order_By>>;
  where?: InputMaybe<Nature_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_stat" */
export type StatPokemonstatsArgs = {
  distinct_on?: InputMaybe<Array<Pokemonstat_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonstat_Order_By>>;
  where?: InputMaybe<Pokemonstat_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_stat" */
export type StatPokemonstats_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonstat_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonstat_Order_By>>;
  where?: InputMaybe<Pokemonstat_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_stat" */
export type StatStatnamesArgs = {
  distinct_on?: InputMaybe<Array<Statname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Statname_Order_By>>;
  where?: InputMaybe<Statname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_stat" */
export type StatStatnames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Statname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Statname_Order_By>>;
  where?: InputMaybe<Statname_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_stat" */
export type Stat_Aggregate = {
  __typename?: 'stat_aggregate';
  aggregate?: Maybe<Stat_Aggregate_Fields>;
  nodes: Array<Stat>;
};

export type Stat_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Stat_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Stat_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Stat_Aggregate_Bool_Exp_Count>;
};

export type Stat_Aggregate_Bool_Exp_Bool_And = {
  arguments: Stat_Select_Column_Stat_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Stat_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Stat_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Stat_Select_Column_Stat_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Stat_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Stat_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Stat_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Stat_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_stat" */
export type Stat_Aggregate_Fields = {
  __typename?: 'stat_aggregate_fields';
  avg?: Maybe<Stat_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Stat_Max_Fields>;
  min?: Maybe<Stat_Min_Fields>;
  stddev?: Maybe<Stat_Stddev_Fields>;
  stddev_pop?: Maybe<Stat_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Stat_Stddev_Samp_Fields>;
  sum?: Maybe<Stat_Sum_Fields>;
  var_pop?: Maybe<Stat_Var_Pop_Fields>;
  var_samp?: Maybe<Stat_Var_Samp_Fields>;
  variance?: Maybe<Stat_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_stat" */
export type Stat_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Stat_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_stat" */
export type Stat_Aggregate_Order_By = {
  avg?: InputMaybe<Stat_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Stat_Max_Order_By>;
  min?: InputMaybe<Stat_Min_Order_By>;
  stddev?: InputMaybe<Stat_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Stat_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Stat_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Stat_Sum_Order_By>;
  var_pop?: InputMaybe<Stat_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Stat_Var_Samp_Order_By>;
  variance?: InputMaybe<Stat_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Stat_Avg_Fields = {
  __typename?: 'stat_avg_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_stat" */
export type Stat_Avg_Order_By = {
  game_index?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_stat". All fields are combined with a logical 'AND'. */
export type Stat_Bool_Exp = {
  NaturesByIncreasedStatId?: InputMaybe<Nature_Bool_Exp>;
  NaturesByIncreasedStatId_aggregate?: InputMaybe<Nature_Aggregate_Bool_Exp>;
  _and?: InputMaybe<Array<Stat_Bool_Exp>>;
  _not?: InputMaybe<Stat_Bool_Exp>;
  _or?: InputMaybe<Array<Stat_Bool_Exp>>;
  characteristics?: InputMaybe<Characteristic_Bool_Exp>;
  characteristics_aggregate?: InputMaybe<Characteristic_Aggregate_Bool_Exp>;
  game_index?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  is_battle_only?: InputMaybe<Boolean_Comparison_Exp>;
  move_damage_class_id?: InputMaybe<Int_Comparison_Exp>;
  movedamageclass?: InputMaybe<Movedamageclass_Bool_Exp>;
  movemetastatchanges?: InputMaybe<Movemetastatchange_Bool_Exp>;
  movemetastatchanges_aggregate?: InputMaybe<Movemetastatchange_Aggregate_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  natures?: InputMaybe<Nature_Bool_Exp>;
  natures_aggregate?: InputMaybe<Nature_Aggregate_Bool_Exp>;
  pokemonstats?: InputMaybe<Pokemonstat_Bool_Exp>;
  pokemonstats_aggregate?: InputMaybe<Pokemonstat_Aggregate_Bool_Exp>;
  statnames?: InputMaybe<Statname_Bool_Exp>;
  statnames_aggregate?: InputMaybe<Statname_Aggregate_Bool_Exp>;
};

/** aggregate max on columns */
export type Stat_Max_Fields = {
  __typename?: 'stat_max_fields';
  game_index?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  move_damage_class_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "pokemon_v2_stat" */
export type Stat_Max_Order_By = {
  game_index?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Stat_Min_Fields = {
  __typename?: 'stat_min_fields';
  game_index?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  move_damage_class_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "pokemon_v2_stat" */
export type Stat_Min_Order_By = {
  game_index?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_stat". */
export type Stat_Order_By = {
  NaturesByIncreasedStatId_aggregate?: InputMaybe<Nature_Aggregate_Order_By>;
  characteristics_aggregate?: InputMaybe<Characteristic_Aggregate_Order_By>;
  game_index?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  is_battle_only?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
  movedamageclass?: InputMaybe<Movedamageclass_Order_By>;
  movemetastatchanges_aggregate?: InputMaybe<Movemetastatchange_Aggregate_Order_By>;
  name?: InputMaybe<Order_By>;
  natures_aggregate?: InputMaybe<Nature_Aggregate_Order_By>;
  pokemonstats_aggregate?: InputMaybe<Pokemonstat_Aggregate_Order_By>;
  statnames_aggregate?: InputMaybe<Statname_Aggregate_Order_By>;
};

/** select columns of table "pokemon_v2_stat" */
export enum Stat_Select_Column {
  /** column name */
  GameIndex = 'game_index',
  /** column name */
  Id = 'id',
  /** column name */
  IsBattleOnly = 'is_battle_only',
  /** column name */
  MoveDamageClassId = 'move_damage_class_id',
  /** column name */
  Name = 'name'
}

/** select "stat_aggregate_bool_exp_bool_and_arguments_columns" columns of table "pokemon_v2_stat" */
export enum Stat_Select_Column_Stat_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  IsBattleOnly = 'is_battle_only'
}

/** select "stat_aggregate_bool_exp_bool_or_arguments_columns" columns of table "pokemon_v2_stat" */
export enum Stat_Select_Column_Stat_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  IsBattleOnly = 'is_battle_only'
}

/** aggregate stddev on columns */
export type Stat_Stddev_Fields = {
  __typename?: 'stat_stddev_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_stat" */
export type Stat_Stddev_Order_By = {
  game_index?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Stat_Stddev_Pop_Fields = {
  __typename?: 'stat_stddev_pop_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_stat" */
export type Stat_Stddev_Pop_Order_By = {
  game_index?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Stat_Stddev_Samp_Fields = {
  __typename?: 'stat_stddev_samp_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_stat" */
export type Stat_Stddev_Samp_Order_By = {
  game_index?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Stat_Sum_Fields = {
  __typename?: 'stat_sum_fields';
  game_index?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  move_damage_class_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_stat" */
export type Stat_Sum_Order_By = {
  game_index?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Stat_Var_Pop_Fields = {
  __typename?: 'stat_var_pop_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_stat" */
export type Stat_Var_Pop_Order_By = {
  game_index?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Stat_Var_Samp_Fields = {
  __typename?: 'stat_var_samp_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_stat" */
export type Stat_Var_Samp_Order_By = {
  game_index?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Stat_Variance_Fields = {
  __typename?: 'stat_variance_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_stat" */
export type Stat_Variance_Order_By = {
  game_index?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_statname" */
export type Statname = {
  __typename?: 'statname';
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
  /** An object relationship */
  stat?: Maybe<Stat>;
  stat_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_statname" */
export type Statname_Aggregate = {
  __typename?: 'statname_aggregate';
  aggregate?: Maybe<Statname_Aggregate_Fields>;
  nodes: Array<Statname>;
};

export type Statname_Aggregate_Bool_Exp = {
  count?: InputMaybe<Statname_Aggregate_Bool_Exp_Count>;
};

export type Statname_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Statname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Statname_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_statname" */
export type Statname_Aggregate_Fields = {
  __typename?: 'statname_aggregate_fields';
  avg?: Maybe<Statname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Statname_Max_Fields>;
  min?: Maybe<Statname_Min_Fields>;
  stddev?: Maybe<Statname_Stddev_Fields>;
  stddev_pop?: Maybe<Statname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Statname_Stddev_Samp_Fields>;
  sum?: Maybe<Statname_Sum_Fields>;
  var_pop?: Maybe<Statname_Var_Pop_Fields>;
  var_samp?: Maybe<Statname_Var_Samp_Fields>;
  variance?: Maybe<Statname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_statname" */
export type Statname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Statname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_statname" */
export type Statname_Aggregate_Order_By = {
  avg?: InputMaybe<Statname_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Statname_Max_Order_By>;
  min?: InputMaybe<Statname_Min_Order_By>;
  stddev?: InputMaybe<Statname_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Statname_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Statname_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Statname_Sum_Order_By>;
  var_pop?: InputMaybe<Statname_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Statname_Var_Samp_Order_By>;
  variance?: InputMaybe<Statname_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Statname_Avg_Fields = {
  __typename?: 'statname_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_statname" */
export type Statname_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  stat_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_statname". All fields are combined with a logical 'AND'. */
export type Statname_Bool_Exp = {
  _and?: InputMaybe<Array<Statname_Bool_Exp>>;
  _not?: InputMaybe<Statname_Bool_Exp>;
  _or?: InputMaybe<Array<Statname_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  stat?: InputMaybe<Stat_Bool_Exp>;
  stat_id?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Statname_Max_Fields = {
  __typename?: 'statname_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  stat_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_statname" */
export type Statname_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  stat_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Statname_Min_Fields = {
  __typename?: 'statname_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  stat_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_statname" */
export type Statname_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  stat_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_statname". */
export type Statname_Order_By = {
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  stat?: InputMaybe<Stat_Order_By>;
  stat_id?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_statname" */
export enum Statname_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name',
  /** column name */
  StatId = 'stat_id'
}

/** aggregate stddev on columns */
export type Statname_Stddev_Fields = {
  __typename?: 'statname_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_statname" */
export type Statname_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  stat_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Statname_Stddev_Pop_Fields = {
  __typename?: 'statname_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_statname" */
export type Statname_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  stat_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Statname_Stddev_Samp_Fields = {
  __typename?: 'statname_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_statname" */
export type Statname_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  stat_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Statname_Sum_Fields = {
  __typename?: 'statname_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  stat_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_statname" */
export type Statname_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  stat_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Statname_Var_Pop_Fields = {
  __typename?: 'statname_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_statname" */
export type Statname_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  stat_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Statname_Var_Samp_Fields = {
  __typename?: 'statname_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_statname" */
export type Statname_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  stat_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Statname_Variance_Fields = {
  __typename?: 'statname_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  stat_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_statname" */
export type Statname_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  stat_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_supercontestcombo" */
export type Supercontestcombo = {
  __typename?: 'supercontestcombo';
  /** An object relationship */
  MoveBySecondMoveId?: Maybe<Move>;
  first_move_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  /** An object relationship */
  move?: Maybe<Move>;
  second_move_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_supercontestcombo" */
export type Supercontestcombo_Aggregate = {
  __typename?: 'supercontestcombo_aggregate';
  aggregate?: Maybe<Supercontestcombo_Aggregate_Fields>;
  nodes: Array<Supercontestcombo>;
};

export type Supercontestcombo_Aggregate_Bool_Exp = {
  count?: InputMaybe<Supercontestcombo_Aggregate_Bool_Exp_Count>;
};

export type Supercontestcombo_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Supercontestcombo_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Supercontestcombo_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_supercontestcombo" */
export type Supercontestcombo_Aggregate_Fields = {
  __typename?: 'supercontestcombo_aggregate_fields';
  avg?: Maybe<Supercontestcombo_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Supercontestcombo_Max_Fields>;
  min?: Maybe<Supercontestcombo_Min_Fields>;
  stddev?: Maybe<Supercontestcombo_Stddev_Fields>;
  stddev_pop?: Maybe<Supercontestcombo_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Supercontestcombo_Stddev_Samp_Fields>;
  sum?: Maybe<Supercontestcombo_Sum_Fields>;
  var_pop?: Maybe<Supercontestcombo_Var_Pop_Fields>;
  var_samp?: Maybe<Supercontestcombo_Var_Samp_Fields>;
  variance?: Maybe<Supercontestcombo_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_supercontestcombo" */
export type Supercontestcombo_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Supercontestcombo_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_supercontestcombo" */
export type Supercontestcombo_Aggregate_Order_By = {
  avg?: InputMaybe<Supercontestcombo_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Supercontestcombo_Max_Order_By>;
  min?: InputMaybe<Supercontestcombo_Min_Order_By>;
  stddev?: InputMaybe<Supercontestcombo_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Supercontestcombo_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Supercontestcombo_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Supercontestcombo_Sum_Order_By>;
  var_pop?: InputMaybe<Supercontestcombo_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Supercontestcombo_Var_Samp_Order_By>;
  variance?: InputMaybe<Supercontestcombo_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Supercontestcombo_Avg_Fields = {
  __typename?: 'supercontestcombo_avg_fields';
  first_move_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  second_move_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_supercontestcombo" */
export type Supercontestcombo_Avg_Order_By = {
  first_move_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  second_move_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_supercontestcombo". All fields are combined with a logical 'AND'. */
export type Supercontestcombo_Bool_Exp = {
  MoveBySecondMoveId?: InputMaybe<Move_Bool_Exp>;
  _and?: InputMaybe<Array<Supercontestcombo_Bool_Exp>>;
  _not?: InputMaybe<Supercontestcombo_Bool_Exp>;
  _or?: InputMaybe<Array<Supercontestcombo_Bool_Exp>>;
  first_move_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  move?: InputMaybe<Move_Bool_Exp>;
  second_move_id?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Supercontestcombo_Max_Fields = {
  __typename?: 'supercontestcombo_max_fields';
  first_move_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  second_move_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_supercontestcombo" */
export type Supercontestcombo_Max_Order_By = {
  first_move_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  second_move_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Supercontestcombo_Min_Fields = {
  __typename?: 'supercontestcombo_min_fields';
  first_move_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  second_move_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_supercontestcombo" */
export type Supercontestcombo_Min_Order_By = {
  first_move_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  second_move_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_supercontestcombo". */
export type Supercontestcombo_Order_By = {
  MoveBySecondMoveId?: InputMaybe<Move_Order_By>;
  first_move_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move?: InputMaybe<Move_Order_By>;
  second_move_id?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_supercontestcombo" */
export enum Supercontestcombo_Select_Column {
  /** column name */
  FirstMoveId = 'first_move_id',
  /** column name */
  Id = 'id',
  /** column name */
  SecondMoveId = 'second_move_id'
}

/** aggregate stddev on columns */
export type Supercontestcombo_Stddev_Fields = {
  __typename?: 'supercontestcombo_stddev_fields';
  first_move_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  second_move_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_supercontestcombo" */
export type Supercontestcombo_Stddev_Order_By = {
  first_move_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  second_move_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Supercontestcombo_Stddev_Pop_Fields = {
  __typename?: 'supercontestcombo_stddev_pop_fields';
  first_move_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  second_move_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_supercontestcombo" */
export type Supercontestcombo_Stddev_Pop_Order_By = {
  first_move_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  second_move_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Supercontestcombo_Stddev_Samp_Fields = {
  __typename?: 'supercontestcombo_stddev_samp_fields';
  first_move_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  second_move_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_supercontestcombo" */
export type Supercontestcombo_Stddev_Samp_Order_By = {
  first_move_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  second_move_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Supercontestcombo_Sum_Fields = {
  __typename?: 'supercontestcombo_sum_fields';
  first_move_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  second_move_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_supercontestcombo" */
export type Supercontestcombo_Sum_Order_By = {
  first_move_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  second_move_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Supercontestcombo_Var_Pop_Fields = {
  __typename?: 'supercontestcombo_var_pop_fields';
  first_move_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  second_move_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_supercontestcombo" */
export type Supercontestcombo_Var_Pop_Order_By = {
  first_move_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  second_move_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Supercontestcombo_Var_Samp_Fields = {
  __typename?: 'supercontestcombo_var_samp_fields';
  first_move_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  second_move_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_supercontestcombo" */
export type Supercontestcombo_Var_Samp_Order_By = {
  first_move_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  second_move_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Supercontestcombo_Variance_Fields = {
  __typename?: 'supercontestcombo_variance_fields';
  first_move_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  second_move_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_supercontestcombo" */
export type Supercontestcombo_Variance_Order_By = {
  first_move_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  second_move_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_supercontesteffect" */
export type Supercontesteffect = {
  __typename?: 'supercontesteffect';
  appeal: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  /** An array relationship */
  moves: Array<Move>;
  /** An aggregate relationship */
  moves_aggregate: Move_Aggregate;
  /** An array relationship */
  supercontesteffectflavortexts: Array<Supercontesteffectflavortext>;
  /** An aggregate relationship */
  supercontesteffectflavortexts_aggregate: Supercontesteffectflavortext_Aggregate;
};


/** columns and relationships of "pokemon_v2_supercontesteffect" */
export type SupercontesteffectMovesArgs = {
  distinct_on?: InputMaybe<Array<Move_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Move_Order_By>>;
  where?: InputMaybe<Move_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_supercontesteffect" */
export type SupercontesteffectMoves_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Move_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Move_Order_By>>;
  where?: InputMaybe<Move_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_supercontesteffect" */
export type SupercontesteffectSupercontesteffectflavortextsArgs = {
  distinct_on?: InputMaybe<Array<Supercontesteffectflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Supercontesteffectflavortext_Order_By>>;
  where?: InputMaybe<Supercontesteffectflavortext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_supercontesteffect" */
export type SupercontesteffectSupercontesteffectflavortexts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Supercontesteffectflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Supercontesteffectflavortext_Order_By>>;
  where?: InputMaybe<Supercontesteffectflavortext_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_supercontesteffect" */
export type Supercontesteffect_Aggregate = {
  __typename?: 'supercontesteffect_aggregate';
  aggregate?: Maybe<Supercontesteffect_Aggregate_Fields>;
  nodes: Array<Supercontesteffect>;
};

/** aggregate fields of "pokemon_v2_supercontesteffect" */
export type Supercontesteffect_Aggregate_Fields = {
  __typename?: 'supercontesteffect_aggregate_fields';
  avg?: Maybe<Supercontesteffect_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Supercontesteffect_Max_Fields>;
  min?: Maybe<Supercontesteffect_Min_Fields>;
  stddev?: Maybe<Supercontesteffect_Stddev_Fields>;
  stddev_pop?: Maybe<Supercontesteffect_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Supercontesteffect_Stddev_Samp_Fields>;
  sum?: Maybe<Supercontesteffect_Sum_Fields>;
  var_pop?: Maybe<Supercontesteffect_Var_Pop_Fields>;
  var_samp?: Maybe<Supercontesteffect_Var_Samp_Fields>;
  variance?: Maybe<Supercontesteffect_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_supercontesteffect" */
export type Supercontesteffect_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Supercontesteffect_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Supercontesteffect_Avg_Fields = {
  __typename?: 'supercontesteffect_avg_fields';
  appeal?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_supercontesteffect". All fields are combined with a logical 'AND'. */
export type Supercontesteffect_Bool_Exp = {
  _and?: InputMaybe<Array<Supercontesteffect_Bool_Exp>>;
  _not?: InputMaybe<Supercontesteffect_Bool_Exp>;
  _or?: InputMaybe<Array<Supercontesteffect_Bool_Exp>>;
  appeal?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  moves?: InputMaybe<Move_Bool_Exp>;
  moves_aggregate?: InputMaybe<Move_Aggregate_Bool_Exp>;
  supercontesteffectflavortexts?: InputMaybe<Supercontesteffectflavortext_Bool_Exp>;
  supercontesteffectflavortexts_aggregate?: InputMaybe<Supercontesteffectflavortext_Aggregate_Bool_Exp>;
};

/** aggregate max on columns */
export type Supercontesteffect_Max_Fields = {
  __typename?: 'supercontesteffect_max_fields';
  appeal?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Supercontesteffect_Min_Fields = {
  __typename?: 'supercontesteffect_min_fields';
  appeal?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** Ordering options when selecting data from "pokemon_v2_supercontesteffect". */
export type Supercontesteffect_Order_By = {
  appeal?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  moves_aggregate?: InputMaybe<Move_Aggregate_Order_By>;
  supercontesteffectflavortexts_aggregate?: InputMaybe<Supercontesteffectflavortext_Aggregate_Order_By>;
};

/** select columns of table "pokemon_v2_supercontesteffect" */
export enum Supercontesteffect_Select_Column {
  /** column name */
  Appeal = 'appeal',
  /** column name */
  Id = 'id'
}

/** aggregate stddev on columns */
export type Supercontesteffect_Stddev_Fields = {
  __typename?: 'supercontesteffect_stddev_fields';
  appeal?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Supercontesteffect_Stddev_Pop_Fields = {
  __typename?: 'supercontesteffect_stddev_pop_fields';
  appeal?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Supercontesteffect_Stddev_Samp_Fields = {
  __typename?: 'supercontesteffect_stddev_samp_fields';
  appeal?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate sum on columns */
export type Supercontesteffect_Sum_Fields = {
  __typename?: 'supercontesteffect_sum_fields';
  appeal?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate var_pop on columns */
export type Supercontesteffect_Var_Pop_Fields = {
  __typename?: 'supercontesteffect_var_pop_fields';
  appeal?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Supercontesteffect_Var_Samp_Fields = {
  __typename?: 'supercontesteffect_var_samp_fields';
  appeal?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Supercontesteffect_Variance_Fields = {
  __typename?: 'supercontesteffect_variance_fields';
  appeal?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "pokemon_v2_supercontesteffectflavortext" */
export type Supercontesteffectflavortext = {
  __typename?: 'supercontesteffectflavortext';
  flavor_text: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  super_contest_effect_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  supercontesteffect?: Maybe<Supercontesteffect>;
};

/** aggregated selection of "pokemon_v2_supercontesteffectflavortext" */
export type Supercontesteffectflavortext_Aggregate = {
  __typename?: 'supercontesteffectflavortext_aggregate';
  aggregate?: Maybe<Supercontesteffectflavortext_Aggregate_Fields>;
  nodes: Array<Supercontesteffectflavortext>;
};

export type Supercontesteffectflavortext_Aggregate_Bool_Exp = {
  count?: InputMaybe<Supercontesteffectflavortext_Aggregate_Bool_Exp_Count>;
};

export type Supercontesteffectflavortext_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Supercontesteffectflavortext_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Supercontesteffectflavortext_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_supercontesteffectflavortext" */
export type Supercontesteffectflavortext_Aggregate_Fields = {
  __typename?: 'supercontesteffectflavortext_aggregate_fields';
  avg?: Maybe<Supercontesteffectflavortext_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Supercontesteffectflavortext_Max_Fields>;
  min?: Maybe<Supercontesteffectflavortext_Min_Fields>;
  stddev?: Maybe<Supercontesteffectflavortext_Stddev_Fields>;
  stddev_pop?: Maybe<Supercontesteffectflavortext_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Supercontesteffectflavortext_Stddev_Samp_Fields>;
  sum?: Maybe<Supercontesteffectflavortext_Sum_Fields>;
  var_pop?: Maybe<Supercontesteffectflavortext_Var_Pop_Fields>;
  var_samp?: Maybe<Supercontesteffectflavortext_Var_Samp_Fields>;
  variance?: Maybe<Supercontesteffectflavortext_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_supercontesteffectflavortext" */
export type Supercontesteffectflavortext_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Supercontesteffectflavortext_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_supercontesteffectflavortext" */
export type Supercontesteffectflavortext_Aggregate_Order_By = {
  avg?: InputMaybe<Supercontesteffectflavortext_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Supercontesteffectflavortext_Max_Order_By>;
  min?: InputMaybe<Supercontesteffectflavortext_Min_Order_By>;
  stddev?: InputMaybe<Supercontesteffectflavortext_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Supercontesteffectflavortext_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Supercontesteffectflavortext_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Supercontesteffectflavortext_Sum_Order_By>;
  var_pop?: InputMaybe<Supercontesteffectflavortext_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Supercontesteffectflavortext_Var_Samp_Order_By>;
  variance?: InputMaybe<Supercontesteffectflavortext_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Supercontesteffectflavortext_Avg_Fields = {
  __typename?: 'supercontesteffectflavortext_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  super_contest_effect_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_supercontesteffectflavortext" */
export type Supercontesteffectflavortext_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  super_contest_effect_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_supercontesteffectflavortext". All fields are combined with a logical 'AND'. */
export type Supercontesteffectflavortext_Bool_Exp = {
  _and?: InputMaybe<Array<Supercontesteffectflavortext_Bool_Exp>>;
  _not?: InputMaybe<Supercontesteffectflavortext_Bool_Exp>;
  _or?: InputMaybe<Array<Supercontesteffectflavortext_Bool_Exp>>;
  flavor_text?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  super_contest_effect_id?: InputMaybe<Int_Comparison_Exp>;
  supercontesteffect?: InputMaybe<Supercontesteffect_Bool_Exp>;
};

/** aggregate max on columns */
export type Supercontesteffectflavortext_Max_Fields = {
  __typename?: 'supercontesteffectflavortext_max_fields';
  flavor_text?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  super_contest_effect_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_supercontesteffectflavortext" */
export type Supercontesteffectflavortext_Max_Order_By = {
  flavor_text?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  super_contest_effect_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Supercontesteffectflavortext_Min_Fields = {
  __typename?: 'supercontesteffectflavortext_min_fields';
  flavor_text?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  super_contest_effect_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_supercontesteffectflavortext" */
export type Supercontesteffectflavortext_Min_Order_By = {
  flavor_text?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  super_contest_effect_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_supercontesteffectflavortext". */
export type Supercontesteffectflavortext_Order_By = {
  flavor_text?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  super_contest_effect_id?: InputMaybe<Order_By>;
  supercontesteffect?: InputMaybe<Supercontesteffect_Order_By>;
};

/** select columns of table "pokemon_v2_supercontesteffectflavortext" */
export enum Supercontesteffectflavortext_Select_Column {
  /** column name */
  FlavorText = 'flavor_text',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  SuperContestEffectId = 'super_contest_effect_id'
}

/** aggregate stddev on columns */
export type Supercontesteffectflavortext_Stddev_Fields = {
  __typename?: 'supercontesteffectflavortext_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  super_contest_effect_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_supercontesteffectflavortext" */
export type Supercontesteffectflavortext_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  super_contest_effect_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Supercontesteffectflavortext_Stddev_Pop_Fields = {
  __typename?: 'supercontesteffectflavortext_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  super_contest_effect_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_supercontesteffectflavortext" */
export type Supercontesteffectflavortext_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  super_contest_effect_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Supercontesteffectflavortext_Stddev_Samp_Fields = {
  __typename?: 'supercontesteffectflavortext_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  super_contest_effect_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_supercontesteffectflavortext" */
export type Supercontesteffectflavortext_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  super_contest_effect_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Supercontesteffectflavortext_Sum_Fields = {
  __typename?: 'supercontesteffectflavortext_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  super_contest_effect_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_supercontesteffectflavortext" */
export type Supercontesteffectflavortext_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  super_contest_effect_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Supercontesteffectflavortext_Var_Pop_Fields = {
  __typename?: 'supercontesteffectflavortext_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  super_contest_effect_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_supercontesteffectflavortext" */
export type Supercontesteffectflavortext_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  super_contest_effect_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Supercontesteffectflavortext_Var_Samp_Fields = {
  __typename?: 'supercontesteffectflavortext_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  super_contest_effect_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_supercontesteffectflavortext" */
export type Supercontesteffectflavortext_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  super_contest_effect_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Supercontesteffectflavortext_Variance_Fields = {
  __typename?: 'supercontesteffectflavortext_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  super_contest_effect_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_supercontesteffectflavortext" */
export type Supercontesteffectflavortext_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  super_contest_effect_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_type" */
export type Type = {
  __typename?: 'type';
  /** An array relationship */
  PokemonevolutionsByPartyTypeId: Array<Pokemonevolution>;
  /** An aggregate relationship */
  PokemonevolutionsByPartyTypeId_aggregate: Pokemonevolution_Aggregate;
  /** An array relationship */
  TypeefficaciesByTargetTypeId: Array<Typeefficacy>;
  /** An aggregate relationship */
  TypeefficaciesByTargetTypeId_aggregate: Typeefficacy_Aggregate;
  /** An array relationship */
  TypeefficacypastsByTargetTypeId: Array<Typeefficacypast>;
  /** An aggregate relationship */
  TypeefficacypastsByTargetTypeId_aggregate: Typeefficacypast_Aggregate;
  /** An array relationship */
  berries: Array<Berry>;
  /** An aggregate relationship */
  berries_aggregate: Berry_Aggregate;
  /** An object relationship */
  generation?: Maybe<Generation>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  move_damage_class_id?: Maybe<Scalars['Int']['output']>;
  /** An array relationship */
  movechanges: Array<Movechange>;
  /** An aggregate relationship */
  movechanges_aggregate: Movechange_Aggregate;
  /** An object relationship */
  movedamageclass?: Maybe<Movedamageclass>;
  /** An array relationship */
  moves: Array<Move>;
  /** An aggregate relationship */
  moves_aggregate: Move_Aggregate;
  name: Scalars['String']['output'];
  /** An array relationship */
  pokemonevolutions: Array<Pokemonevolution>;
  /** An aggregate relationship */
  pokemonevolutions_aggregate: Pokemonevolution_Aggregate;
  /** An array relationship */
  pokemonformtypes: Array<Pokemonformtype>;
  /** An aggregate relationship */
  pokemonformtypes_aggregate: Pokemonformtype_Aggregate;
  /** An array relationship */
  pokemontypepasts: Array<Pokemontypepast>;
  /** An aggregate relationship */
  pokemontypepasts_aggregate: Pokemontypepast_Aggregate;
  /** An array relationship */
  pokemontypes: Array<Pokemontype>;
  /** An aggregate relationship */
  pokemontypes_aggregate: Pokemontype_Aggregate;
  /** An array relationship */
  typeefficacies: Array<Typeefficacy>;
  /** An aggregate relationship */
  typeefficacies_aggregate: Typeefficacy_Aggregate;
  /** An array relationship */
  typeefficacypasts: Array<Typeefficacypast>;
  /** An aggregate relationship */
  typeefficacypasts_aggregate: Typeefficacypast_Aggregate;
  /** An array relationship */
  typegameindices: Array<Typegameindex>;
  /** An aggregate relationship */
  typegameindices_aggregate: Typegameindex_Aggregate;
  /** An array relationship */
  typenames: Array<Typename>;
  /** An aggregate relationship */
  typenames_aggregate: Typename_Aggregate;
};


/** columns and relationships of "pokemon_v2_type" */
export type TypePokemonevolutionsByPartyTypeIdArgs = {
  distinct_on?: InputMaybe<Array<Pokemonevolution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonevolution_Order_By>>;
  where?: InputMaybe<Pokemonevolution_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_type" */
export type TypePokemonevolutionsByPartyTypeId_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonevolution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonevolution_Order_By>>;
  where?: InputMaybe<Pokemonevolution_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_type" */
export type TypeTypeefficaciesByTargetTypeIdArgs = {
  distinct_on?: InputMaybe<Array<Typeefficacy_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Typeefficacy_Order_By>>;
  where?: InputMaybe<Typeefficacy_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_type" */
export type TypeTypeefficaciesByTargetTypeId_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Typeefficacy_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Typeefficacy_Order_By>>;
  where?: InputMaybe<Typeefficacy_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_type" */
export type TypeTypeefficacypastsByTargetTypeIdArgs = {
  distinct_on?: InputMaybe<Array<Typeefficacypast_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Typeefficacypast_Order_By>>;
  where?: InputMaybe<Typeefficacypast_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_type" */
export type TypeTypeefficacypastsByTargetTypeId_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Typeefficacypast_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Typeefficacypast_Order_By>>;
  where?: InputMaybe<Typeefficacypast_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_type" */
export type TypeBerriesArgs = {
  distinct_on?: InputMaybe<Array<Berry_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Berry_Order_By>>;
  where?: InputMaybe<Berry_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_type" */
export type TypeBerries_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Berry_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Berry_Order_By>>;
  where?: InputMaybe<Berry_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_type" */
export type TypeMovechangesArgs = {
  distinct_on?: InputMaybe<Array<Movechange_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movechange_Order_By>>;
  where?: InputMaybe<Movechange_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_type" */
export type TypeMovechanges_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Movechange_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movechange_Order_By>>;
  where?: InputMaybe<Movechange_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_type" */
export type TypeMovesArgs = {
  distinct_on?: InputMaybe<Array<Move_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Move_Order_By>>;
  where?: InputMaybe<Move_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_type" */
export type TypeMoves_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Move_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Move_Order_By>>;
  where?: InputMaybe<Move_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_type" */
export type TypePokemonevolutionsArgs = {
  distinct_on?: InputMaybe<Array<Pokemonevolution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonevolution_Order_By>>;
  where?: InputMaybe<Pokemonevolution_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_type" */
export type TypePokemonevolutions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonevolution_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonevolution_Order_By>>;
  where?: InputMaybe<Pokemonevolution_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_type" */
export type TypePokemonformtypesArgs = {
  distinct_on?: InputMaybe<Array<Pokemonformtype_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonformtype_Order_By>>;
  where?: InputMaybe<Pokemonformtype_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_type" */
export type TypePokemonformtypes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonformtype_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonformtype_Order_By>>;
  where?: InputMaybe<Pokemonformtype_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_type" */
export type TypePokemontypepastsArgs = {
  distinct_on?: InputMaybe<Array<Pokemontypepast_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemontypepast_Order_By>>;
  where?: InputMaybe<Pokemontypepast_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_type" */
export type TypePokemontypepasts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemontypepast_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemontypepast_Order_By>>;
  where?: InputMaybe<Pokemontypepast_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_type" */
export type TypePokemontypesArgs = {
  distinct_on?: InputMaybe<Array<Pokemontype_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemontype_Order_By>>;
  where?: InputMaybe<Pokemontype_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_type" */
export type TypePokemontypes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemontype_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemontype_Order_By>>;
  where?: InputMaybe<Pokemontype_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_type" */
export type TypeTypeefficaciesArgs = {
  distinct_on?: InputMaybe<Array<Typeefficacy_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Typeefficacy_Order_By>>;
  where?: InputMaybe<Typeefficacy_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_type" */
export type TypeTypeefficacies_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Typeefficacy_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Typeefficacy_Order_By>>;
  where?: InputMaybe<Typeefficacy_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_type" */
export type TypeTypeefficacypastsArgs = {
  distinct_on?: InputMaybe<Array<Typeefficacypast_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Typeefficacypast_Order_By>>;
  where?: InputMaybe<Typeefficacypast_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_type" */
export type TypeTypeefficacypasts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Typeefficacypast_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Typeefficacypast_Order_By>>;
  where?: InputMaybe<Typeefficacypast_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_type" */
export type TypeTypegameindicesArgs = {
  distinct_on?: InputMaybe<Array<Typegameindex_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Typegameindex_Order_By>>;
  where?: InputMaybe<Typegameindex_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_type" */
export type TypeTypegameindices_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Typegameindex_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Typegameindex_Order_By>>;
  where?: InputMaybe<Typegameindex_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_type" */
export type TypeTypenamesArgs = {
  distinct_on?: InputMaybe<Array<Typename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Typename_Order_By>>;
  where?: InputMaybe<Typename_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_type" */
export type TypeTypenames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Typename_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Typename_Order_By>>;
  where?: InputMaybe<Typename_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_type" */
export type Type_Aggregate = {
  __typename?: 'type_aggregate';
  aggregate?: Maybe<Type_Aggregate_Fields>;
  nodes: Array<Type>;
};

export type Type_Aggregate_Bool_Exp = {
  count?: InputMaybe<Type_Aggregate_Bool_Exp_Count>;
};

export type Type_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Type_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Type_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_type" */
export type Type_Aggregate_Fields = {
  __typename?: 'type_aggregate_fields';
  avg?: Maybe<Type_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Type_Max_Fields>;
  min?: Maybe<Type_Min_Fields>;
  stddev?: Maybe<Type_Stddev_Fields>;
  stddev_pop?: Maybe<Type_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Type_Stddev_Samp_Fields>;
  sum?: Maybe<Type_Sum_Fields>;
  var_pop?: Maybe<Type_Var_Pop_Fields>;
  var_samp?: Maybe<Type_Var_Samp_Fields>;
  variance?: Maybe<Type_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_type" */
export type Type_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Type_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_type" */
export type Type_Aggregate_Order_By = {
  avg?: InputMaybe<Type_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Type_Max_Order_By>;
  min?: InputMaybe<Type_Min_Order_By>;
  stddev?: InputMaybe<Type_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Type_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Type_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Type_Sum_Order_By>;
  var_pop?: InputMaybe<Type_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Type_Var_Samp_Order_By>;
  variance?: InputMaybe<Type_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Type_Avg_Fields = {
  __typename?: 'type_avg_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_type" */
export type Type_Avg_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_type". All fields are combined with a logical 'AND'. */
export type Type_Bool_Exp = {
  PokemonevolutionsByPartyTypeId?: InputMaybe<Pokemonevolution_Bool_Exp>;
  PokemonevolutionsByPartyTypeId_aggregate?: InputMaybe<Pokemonevolution_Aggregate_Bool_Exp>;
  TypeefficaciesByTargetTypeId?: InputMaybe<Typeefficacy_Bool_Exp>;
  TypeefficaciesByTargetTypeId_aggregate?: InputMaybe<Typeefficacy_Aggregate_Bool_Exp>;
  TypeefficacypastsByTargetTypeId?: InputMaybe<Typeefficacypast_Bool_Exp>;
  TypeefficacypastsByTargetTypeId_aggregate?: InputMaybe<Typeefficacypast_Aggregate_Bool_Exp>;
  _and?: InputMaybe<Array<Type_Bool_Exp>>;
  _not?: InputMaybe<Type_Bool_Exp>;
  _or?: InputMaybe<Array<Type_Bool_Exp>>;
  berries?: InputMaybe<Berry_Bool_Exp>;
  berries_aggregate?: InputMaybe<Berry_Aggregate_Bool_Exp>;
  generation?: InputMaybe<Generation_Bool_Exp>;
  generation_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  move_damage_class_id?: InputMaybe<Int_Comparison_Exp>;
  movechanges?: InputMaybe<Movechange_Bool_Exp>;
  movechanges_aggregate?: InputMaybe<Movechange_Aggregate_Bool_Exp>;
  movedamageclass?: InputMaybe<Movedamageclass_Bool_Exp>;
  moves?: InputMaybe<Move_Bool_Exp>;
  moves_aggregate?: InputMaybe<Move_Aggregate_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  pokemonevolutions?: InputMaybe<Pokemonevolution_Bool_Exp>;
  pokemonevolutions_aggregate?: InputMaybe<Pokemonevolution_Aggregate_Bool_Exp>;
  pokemonformtypes?: InputMaybe<Pokemonformtype_Bool_Exp>;
  pokemonformtypes_aggregate?: InputMaybe<Pokemonformtype_Aggregate_Bool_Exp>;
  pokemontypepasts?: InputMaybe<Pokemontypepast_Bool_Exp>;
  pokemontypepasts_aggregate?: InputMaybe<Pokemontypepast_Aggregate_Bool_Exp>;
  pokemontypes?: InputMaybe<Pokemontype_Bool_Exp>;
  pokemontypes_aggregate?: InputMaybe<Pokemontype_Aggregate_Bool_Exp>;
  typeefficacies?: InputMaybe<Typeefficacy_Bool_Exp>;
  typeefficacies_aggregate?: InputMaybe<Typeefficacy_Aggregate_Bool_Exp>;
  typeefficacypasts?: InputMaybe<Typeefficacypast_Bool_Exp>;
  typeefficacypasts_aggregate?: InputMaybe<Typeefficacypast_Aggregate_Bool_Exp>;
  typegameindices?: InputMaybe<Typegameindex_Bool_Exp>;
  typegameindices_aggregate?: InputMaybe<Typegameindex_Aggregate_Bool_Exp>;
  typenames?: InputMaybe<Typename_Bool_Exp>;
  typenames_aggregate?: InputMaybe<Typename_Aggregate_Bool_Exp>;
};

/** aggregate max on columns */
export type Type_Max_Fields = {
  __typename?: 'type_max_fields';
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  move_damage_class_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "pokemon_v2_type" */
export type Type_Max_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Type_Min_Fields = {
  __typename?: 'type_min_fields';
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  move_damage_class_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "pokemon_v2_type" */
export type Type_Min_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_type". */
export type Type_Order_By = {
  PokemonevolutionsByPartyTypeId_aggregate?: InputMaybe<Pokemonevolution_Aggregate_Order_By>;
  TypeefficaciesByTargetTypeId_aggregate?: InputMaybe<Typeefficacy_Aggregate_Order_By>;
  TypeefficacypastsByTargetTypeId_aggregate?: InputMaybe<Typeefficacypast_Aggregate_Order_By>;
  berries_aggregate?: InputMaybe<Berry_Aggregate_Order_By>;
  generation?: InputMaybe<Generation_Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
  movechanges_aggregate?: InputMaybe<Movechange_Aggregate_Order_By>;
  movedamageclass?: InputMaybe<Movedamageclass_Order_By>;
  moves_aggregate?: InputMaybe<Move_Aggregate_Order_By>;
  name?: InputMaybe<Order_By>;
  pokemonevolutions_aggregate?: InputMaybe<Pokemonevolution_Aggregate_Order_By>;
  pokemonformtypes_aggregate?: InputMaybe<Pokemonformtype_Aggregate_Order_By>;
  pokemontypepasts_aggregate?: InputMaybe<Pokemontypepast_Aggregate_Order_By>;
  pokemontypes_aggregate?: InputMaybe<Pokemontype_Aggregate_Order_By>;
  typeefficacies_aggregate?: InputMaybe<Typeefficacy_Aggregate_Order_By>;
  typeefficacypasts_aggregate?: InputMaybe<Typeefficacypast_Aggregate_Order_By>;
  typegameindices_aggregate?: InputMaybe<Typegameindex_Aggregate_Order_By>;
  typenames_aggregate?: InputMaybe<Typename_Aggregate_Order_By>;
};

/** select columns of table "pokemon_v2_type" */
export enum Type_Select_Column {
  /** column name */
  GenerationId = 'generation_id',
  /** column name */
  Id = 'id',
  /** column name */
  MoveDamageClassId = 'move_damage_class_id',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Type_Stddev_Fields = {
  __typename?: 'type_stddev_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_type" */
export type Type_Stddev_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Type_Stddev_Pop_Fields = {
  __typename?: 'type_stddev_pop_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_type" */
export type Type_Stddev_Pop_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Type_Stddev_Samp_Fields = {
  __typename?: 'type_stddev_samp_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_type" */
export type Type_Stddev_Samp_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Type_Sum_Fields = {
  __typename?: 'type_sum_fields';
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  move_damage_class_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_type" */
export type Type_Sum_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Type_Var_Pop_Fields = {
  __typename?: 'type_var_pop_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_type" */
export type Type_Var_Pop_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Type_Var_Samp_Fields = {
  __typename?: 'type_var_samp_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_type" */
export type Type_Var_Samp_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Type_Variance_Fields = {
  __typename?: 'type_variance_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  move_damage_class_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_type" */
export type Type_Variance_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  move_damage_class_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_typeefficacy" */
export type Typeefficacy = {
  __typename?: 'typeefficacy';
  /** An object relationship */
  TypeByTargetTypeId?: Maybe<Type>;
  damage_factor: Scalars['Int']['output'];
  damage_type_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  target_type_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  type?: Maybe<Type>;
};

/** aggregated selection of "pokemon_v2_typeefficacy" */
export type Typeefficacy_Aggregate = {
  __typename?: 'typeefficacy_aggregate';
  aggregate?: Maybe<Typeefficacy_Aggregate_Fields>;
  nodes: Array<Typeefficacy>;
};

export type Typeefficacy_Aggregate_Bool_Exp = {
  count?: InputMaybe<Typeefficacy_Aggregate_Bool_Exp_Count>;
};

export type Typeefficacy_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Typeefficacy_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Typeefficacy_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_typeefficacy" */
export type Typeefficacy_Aggregate_Fields = {
  __typename?: 'typeefficacy_aggregate_fields';
  avg?: Maybe<Typeefficacy_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Typeefficacy_Max_Fields>;
  min?: Maybe<Typeefficacy_Min_Fields>;
  stddev?: Maybe<Typeefficacy_Stddev_Fields>;
  stddev_pop?: Maybe<Typeefficacy_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Typeefficacy_Stddev_Samp_Fields>;
  sum?: Maybe<Typeefficacy_Sum_Fields>;
  var_pop?: Maybe<Typeefficacy_Var_Pop_Fields>;
  var_samp?: Maybe<Typeefficacy_Var_Samp_Fields>;
  variance?: Maybe<Typeefficacy_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_typeefficacy" */
export type Typeefficacy_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Typeefficacy_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_typeefficacy" */
export type Typeefficacy_Aggregate_Order_By = {
  avg?: InputMaybe<Typeefficacy_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Typeefficacy_Max_Order_By>;
  min?: InputMaybe<Typeefficacy_Min_Order_By>;
  stddev?: InputMaybe<Typeefficacy_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Typeefficacy_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Typeefficacy_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Typeefficacy_Sum_Order_By>;
  var_pop?: InputMaybe<Typeefficacy_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Typeefficacy_Var_Samp_Order_By>;
  variance?: InputMaybe<Typeefficacy_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Typeefficacy_Avg_Fields = {
  __typename?: 'typeefficacy_avg_fields';
  damage_factor?: Maybe<Scalars['Float']['output']>;
  damage_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  target_type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_typeefficacy" */
export type Typeefficacy_Avg_Order_By = {
  damage_factor?: InputMaybe<Order_By>;
  damage_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  target_type_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_typeefficacy". All fields are combined with a logical 'AND'. */
export type Typeefficacy_Bool_Exp = {
  TypeByTargetTypeId?: InputMaybe<Type_Bool_Exp>;
  _and?: InputMaybe<Array<Typeefficacy_Bool_Exp>>;
  _not?: InputMaybe<Typeefficacy_Bool_Exp>;
  _or?: InputMaybe<Array<Typeefficacy_Bool_Exp>>;
  damage_factor?: InputMaybe<Int_Comparison_Exp>;
  damage_type_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  target_type_id?: InputMaybe<Int_Comparison_Exp>;
  type?: InputMaybe<Type_Bool_Exp>;
};

/** aggregate max on columns */
export type Typeefficacy_Max_Fields = {
  __typename?: 'typeefficacy_max_fields';
  damage_factor?: Maybe<Scalars['Int']['output']>;
  damage_type_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  target_type_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_typeefficacy" */
export type Typeefficacy_Max_Order_By = {
  damage_factor?: InputMaybe<Order_By>;
  damage_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  target_type_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Typeefficacy_Min_Fields = {
  __typename?: 'typeefficacy_min_fields';
  damage_factor?: Maybe<Scalars['Int']['output']>;
  damage_type_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  target_type_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_typeefficacy" */
export type Typeefficacy_Min_Order_By = {
  damage_factor?: InputMaybe<Order_By>;
  damage_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  target_type_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_typeefficacy". */
export type Typeefficacy_Order_By = {
  TypeByTargetTypeId?: InputMaybe<Type_Order_By>;
  damage_factor?: InputMaybe<Order_By>;
  damage_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  target_type_id?: InputMaybe<Order_By>;
  type?: InputMaybe<Type_Order_By>;
};

/** select columns of table "pokemon_v2_typeefficacy" */
export enum Typeefficacy_Select_Column {
  /** column name */
  DamageFactor = 'damage_factor',
  /** column name */
  DamageTypeId = 'damage_type_id',
  /** column name */
  Id = 'id',
  /** column name */
  TargetTypeId = 'target_type_id'
}

/** aggregate stddev on columns */
export type Typeefficacy_Stddev_Fields = {
  __typename?: 'typeefficacy_stddev_fields';
  damage_factor?: Maybe<Scalars['Float']['output']>;
  damage_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  target_type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_typeefficacy" */
export type Typeefficacy_Stddev_Order_By = {
  damage_factor?: InputMaybe<Order_By>;
  damage_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  target_type_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Typeefficacy_Stddev_Pop_Fields = {
  __typename?: 'typeefficacy_stddev_pop_fields';
  damage_factor?: Maybe<Scalars['Float']['output']>;
  damage_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  target_type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_typeefficacy" */
export type Typeefficacy_Stddev_Pop_Order_By = {
  damage_factor?: InputMaybe<Order_By>;
  damage_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  target_type_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Typeefficacy_Stddev_Samp_Fields = {
  __typename?: 'typeefficacy_stddev_samp_fields';
  damage_factor?: Maybe<Scalars['Float']['output']>;
  damage_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  target_type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_typeefficacy" */
export type Typeefficacy_Stddev_Samp_Order_By = {
  damage_factor?: InputMaybe<Order_By>;
  damage_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  target_type_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Typeefficacy_Sum_Fields = {
  __typename?: 'typeefficacy_sum_fields';
  damage_factor?: Maybe<Scalars['Int']['output']>;
  damage_type_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  target_type_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_typeefficacy" */
export type Typeefficacy_Sum_Order_By = {
  damage_factor?: InputMaybe<Order_By>;
  damage_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  target_type_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Typeefficacy_Var_Pop_Fields = {
  __typename?: 'typeefficacy_var_pop_fields';
  damage_factor?: Maybe<Scalars['Float']['output']>;
  damage_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  target_type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_typeefficacy" */
export type Typeefficacy_Var_Pop_Order_By = {
  damage_factor?: InputMaybe<Order_By>;
  damage_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  target_type_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Typeefficacy_Var_Samp_Fields = {
  __typename?: 'typeefficacy_var_samp_fields';
  damage_factor?: Maybe<Scalars['Float']['output']>;
  damage_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  target_type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_typeefficacy" */
export type Typeefficacy_Var_Samp_Order_By = {
  damage_factor?: InputMaybe<Order_By>;
  damage_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  target_type_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Typeefficacy_Variance_Fields = {
  __typename?: 'typeefficacy_variance_fields';
  damage_factor?: Maybe<Scalars['Float']['output']>;
  damage_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  target_type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_typeefficacy" */
export type Typeefficacy_Variance_Order_By = {
  damage_factor?: InputMaybe<Order_By>;
  damage_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  target_type_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_typeefficacypast" */
export type Typeefficacypast = {
  __typename?: 'typeefficacypast';
  /** An object relationship */
  TypeByTargetTypeId?: Maybe<Type>;
  damage_factor: Scalars['Int']['output'];
  damage_type_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  generation?: Maybe<Generation>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  target_type_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  type?: Maybe<Type>;
};

/** aggregated selection of "pokemon_v2_typeefficacypast" */
export type Typeefficacypast_Aggregate = {
  __typename?: 'typeefficacypast_aggregate';
  aggregate?: Maybe<Typeefficacypast_Aggregate_Fields>;
  nodes: Array<Typeefficacypast>;
};

export type Typeefficacypast_Aggregate_Bool_Exp = {
  count?: InputMaybe<Typeefficacypast_Aggregate_Bool_Exp_Count>;
};

export type Typeefficacypast_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Typeefficacypast_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Typeefficacypast_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_typeefficacypast" */
export type Typeefficacypast_Aggregate_Fields = {
  __typename?: 'typeefficacypast_aggregate_fields';
  avg?: Maybe<Typeefficacypast_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Typeefficacypast_Max_Fields>;
  min?: Maybe<Typeefficacypast_Min_Fields>;
  stddev?: Maybe<Typeefficacypast_Stddev_Fields>;
  stddev_pop?: Maybe<Typeefficacypast_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Typeefficacypast_Stddev_Samp_Fields>;
  sum?: Maybe<Typeefficacypast_Sum_Fields>;
  var_pop?: Maybe<Typeefficacypast_Var_Pop_Fields>;
  var_samp?: Maybe<Typeefficacypast_Var_Samp_Fields>;
  variance?: Maybe<Typeefficacypast_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_typeefficacypast" */
export type Typeefficacypast_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Typeefficacypast_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_typeefficacypast" */
export type Typeefficacypast_Aggregate_Order_By = {
  avg?: InputMaybe<Typeefficacypast_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Typeefficacypast_Max_Order_By>;
  min?: InputMaybe<Typeefficacypast_Min_Order_By>;
  stddev?: InputMaybe<Typeefficacypast_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Typeefficacypast_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Typeefficacypast_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Typeefficacypast_Sum_Order_By>;
  var_pop?: InputMaybe<Typeefficacypast_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Typeefficacypast_Var_Samp_Order_By>;
  variance?: InputMaybe<Typeefficacypast_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Typeefficacypast_Avg_Fields = {
  __typename?: 'typeefficacypast_avg_fields';
  damage_factor?: Maybe<Scalars['Float']['output']>;
  damage_type_id?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  target_type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_typeefficacypast" */
export type Typeefficacypast_Avg_Order_By = {
  damage_factor?: InputMaybe<Order_By>;
  damage_type_id?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  target_type_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_typeefficacypast". All fields are combined with a logical 'AND'. */
export type Typeefficacypast_Bool_Exp = {
  TypeByTargetTypeId?: InputMaybe<Type_Bool_Exp>;
  _and?: InputMaybe<Array<Typeefficacypast_Bool_Exp>>;
  _not?: InputMaybe<Typeefficacypast_Bool_Exp>;
  _or?: InputMaybe<Array<Typeefficacypast_Bool_Exp>>;
  damage_factor?: InputMaybe<Int_Comparison_Exp>;
  damage_type_id?: InputMaybe<Int_Comparison_Exp>;
  generation?: InputMaybe<Generation_Bool_Exp>;
  generation_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  target_type_id?: InputMaybe<Int_Comparison_Exp>;
  type?: InputMaybe<Type_Bool_Exp>;
};

/** aggregate max on columns */
export type Typeefficacypast_Max_Fields = {
  __typename?: 'typeefficacypast_max_fields';
  damage_factor?: Maybe<Scalars['Int']['output']>;
  damage_type_id?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  target_type_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_typeefficacypast" */
export type Typeefficacypast_Max_Order_By = {
  damage_factor?: InputMaybe<Order_By>;
  damage_type_id?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  target_type_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Typeefficacypast_Min_Fields = {
  __typename?: 'typeefficacypast_min_fields';
  damage_factor?: Maybe<Scalars['Int']['output']>;
  damage_type_id?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  target_type_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_typeefficacypast" */
export type Typeefficacypast_Min_Order_By = {
  damage_factor?: InputMaybe<Order_By>;
  damage_type_id?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  target_type_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_typeefficacypast". */
export type Typeefficacypast_Order_By = {
  TypeByTargetTypeId?: InputMaybe<Type_Order_By>;
  damage_factor?: InputMaybe<Order_By>;
  damage_type_id?: InputMaybe<Order_By>;
  generation?: InputMaybe<Generation_Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  target_type_id?: InputMaybe<Order_By>;
  type?: InputMaybe<Type_Order_By>;
};

/** select columns of table "pokemon_v2_typeefficacypast" */
export enum Typeefficacypast_Select_Column {
  /** column name */
  DamageFactor = 'damage_factor',
  /** column name */
  DamageTypeId = 'damage_type_id',
  /** column name */
  GenerationId = 'generation_id',
  /** column name */
  Id = 'id',
  /** column name */
  TargetTypeId = 'target_type_id'
}

/** aggregate stddev on columns */
export type Typeefficacypast_Stddev_Fields = {
  __typename?: 'typeefficacypast_stddev_fields';
  damage_factor?: Maybe<Scalars['Float']['output']>;
  damage_type_id?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  target_type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_typeefficacypast" */
export type Typeefficacypast_Stddev_Order_By = {
  damage_factor?: InputMaybe<Order_By>;
  damage_type_id?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  target_type_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Typeefficacypast_Stddev_Pop_Fields = {
  __typename?: 'typeefficacypast_stddev_pop_fields';
  damage_factor?: Maybe<Scalars['Float']['output']>;
  damage_type_id?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  target_type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_typeefficacypast" */
export type Typeefficacypast_Stddev_Pop_Order_By = {
  damage_factor?: InputMaybe<Order_By>;
  damage_type_id?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  target_type_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Typeefficacypast_Stddev_Samp_Fields = {
  __typename?: 'typeefficacypast_stddev_samp_fields';
  damage_factor?: Maybe<Scalars['Float']['output']>;
  damage_type_id?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  target_type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_typeefficacypast" */
export type Typeefficacypast_Stddev_Samp_Order_By = {
  damage_factor?: InputMaybe<Order_By>;
  damage_type_id?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  target_type_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Typeefficacypast_Sum_Fields = {
  __typename?: 'typeefficacypast_sum_fields';
  damage_factor?: Maybe<Scalars['Int']['output']>;
  damage_type_id?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  target_type_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_typeefficacypast" */
export type Typeefficacypast_Sum_Order_By = {
  damage_factor?: InputMaybe<Order_By>;
  damage_type_id?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  target_type_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Typeefficacypast_Var_Pop_Fields = {
  __typename?: 'typeefficacypast_var_pop_fields';
  damage_factor?: Maybe<Scalars['Float']['output']>;
  damage_type_id?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  target_type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_typeefficacypast" */
export type Typeefficacypast_Var_Pop_Order_By = {
  damage_factor?: InputMaybe<Order_By>;
  damage_type_id?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  target_type_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Typeefficacypast_Var_Samp_Fields = {
  __typename?: 'typeefficacypast_var_samp_fields';
  damage_factor?: Maybe<Scalars['Float']['output']>;
  damage_type_id?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  target_type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_typeefficacypast" */
export type Typeefficacypast_Var_Samp_Order_By = {
  damage_factor?: InputMaybe<Order_By>;
  damage_type_id?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  target_type_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Typeefficacypast_Variance_Fields = {
  __typename?: 'typeefficacypast_variance_fields';
  damage_factor?: Maybe<Scalars['Float']['output']>;
  damage_type_id?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  target_type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_typeefficacypast" */
export type Typeefficacypast_Variance_Order_By = {
  damage_factor?: InputMaybe<Order_By>;
  damage_type_id?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  target_type_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_typegameindex" */
export type Typegameindex = {
  __typename?: 'typegameindex';
  game_index: Scalars['Int']['output'];
  /** An object relationship */
  generation?: Maybe<Generation>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  /** An object relationship */
  type?: Maybe<Type>;
  type_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_typegameindex" */
export type Typegameindex_Aggregate = {
  __typename?: 'typegameindex_aggregate';
  aggregate?: Maybe<Typegameindex_Aggregate_Fields>;
  nodes: Array<Typegameindex>;
};

export type Typegameindex_Aggregate_Bool_Exp = {
  count?: InputMaybe<Typegameindex_Aggregate_Bool_Exp_Count>;
};

export type Typegameindex_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Typegameindex_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Typegameindex_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_typegameindex" */
export type Typegameindex_Aggregate_Fields = {
  __typename?: 'typegameindex_aggregate_fields';
  avg?: Maybe<Typegameindex_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Typegameindex_Max_Fields>;
  min?: Maybe<Typegameindex_Min_Fields>;
  stddev?: Maybe<Typegameindex_Stddev_Fields>;
  stddev_pop?: Maybe<Typegameindex_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Typegameindex_Stddev_Samp_Fields>;
  sum?: Maybe<Typegameindex_Sum_Fields>;
  var_pop?: Maybe<Typegameindex_Var_Pop_Fields>;
  var_samp?: Maybe<Typegameindex_Var_Samp_Fields>;
  variance?: Maybe<Typegameindex_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_typegameindex" */
export type Typegameindex_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Typegameindex_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_typegameindex" */
export type Typegameindex_Aggregate_Order_By = {
  avg?: InputMaybe<Typegameindex_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Typegameindex_Max_Order_By>;
  min?: InputMaybe<Typegameindex_Min_Order_By>;
  stddev?: InputMaybe<Typegameindex_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Typegameindex_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Typegameindex_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Typegameindex_Sum_Order_By>;
  var_pop?: InputMaybe<Typegameindex_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Typegameindex_Var_Samp_Order_By>;
  variance?: InputMaybe<Typegameindex_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Typegameindex_Avg_Fields = {
  __typename?: 'typegameindex_avg_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_typegameindex" */
export type Typegameindex_Avg_Order_By = {
  game_index?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_typegameindex". All fields are combined with a logical 'AND'. */
export type Typegameindex_Bool_Exp = {
  _and?: InputMaybe<Array<Typegameindex_Bool_Exp>>;
  _not?: InputMaybe<Typegameindex_Bool_Exp>;
  _or?: InputMaybe<Array<Typegameindex_Bool_Exp>>;
  game_index?: InputMaybe<Int_Comparison_Exp>;
  generation?: InputMaybe<Generation_Bool_Exp>;
  generation_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  type?: InputMaybe<Type_Bool_Exp>;
  type_id?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Typegameindex_Max_Fields = {
  __typename?: 'typegameindex_max_fields';
  game_index?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  type_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_typegameindex" */
export type Typegameindex_Max_Order_By = {
  game_index?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Typegameindex_Min_Fields = {
  __typename?: 'typegameindex_min_fields';
  game_index?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  type_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_typegameindex" */
export type Typegameindex_Min_Order_By = {
  game_index?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_typegameindex". */
export type Typegameindex_Order_By = {
  game_index?: InputMaybe<Order_By>;
  generation?: InputMaybe<Generation_Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  type?: InputMaybe<Type_Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_typegameindex" */
export enum Typegameindex_Select_Column {
  /** column name */
  GameIndex = 'game_index',
  /** column name */
  GenerationId = 'generation_id',
  /** column name */
  Id = 'id',
  /** column name */
  TypeId = 'type_id'
}

/** aggregate stddev on columns */
export type Typegameindex_Stddev_Fields = {
  __typename?: 'typegameindex_stddev_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_typegameindex" */
export type Typegameindex_Stddev_Order_By = {
  game_index?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Typegameindex_Stddev_Pop_Fields = {
  __typename?: 'typegameindex_stddev_pop_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_typegameindex" */
export type Typegameindex_Stddev_Pop_Order_By = {
  game_index?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Typegameindex_Stddev_Samp_Fields = {
  __typename?: 'typegameindex_stddev_samp_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_typegameindex" */
export type Typegameindex_Stddev_Samp_Order_By = {
  game_index?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Typegameindex_Sum_Fields = {
  __typename?: 'typegameindex_sum_fields';
  game_index?: Maybe<Scalars['Int']['output']>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  type_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_typegameindex" */
export type Typegameindex_Sum_Order_By = {
  game_index?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Typegameindex_Var_Pop_Fields = {
  __typename?: 'typegameindex_var_pop_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_typegameindex" */
export type Typegameindex_Var_Pop_Order_By = {
  game_index?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Typegameindex_Var_Samp_Fields = {
  __typename?: 'typegameindex_var_samp_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_typegameindex" */
export type Typegameindex_Var_Samp_Order_By = {
  game_index?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Typegameindex_Variance_Fields = {
  __typename?: 'typegameindex_variance_fields';
  game_index?: Maybe<Scalars['Float']['output']>;
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_typegameindex" */
export type Typegameindex_Variance_Order_By = {
  game_index?: InputMaybe<Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_typename" */
export type Typename = {
  __typename?: 'typename';
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
  /** An object relationship */
  type?: Maybe<Type>;
  type_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_typename" */
export type Typename_Aggregate = {
  __typename?: 'typename_aggregate';
  aggregate?: Maybe<Typename_Aggregate_Fields>;
  nodes: Array<Typename>;
};

export type Typename_Aggregate_Bool_Exp = {
  count?: InputMaybe<Typename_Aggregate_Bool_Exp_Count>;
};

export type Typename_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Typename_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Typename_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_typename" */
export type Typename_Aggregate_Fields = {
  __typename?: 'typename_aggregate_fields';
  avg?: Maybe<Typename_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Typename_Max_Fields>;
  min?: Maybe<Typename_Min_Fields>;
  stddev?: Maybe<Typename_Stddev_Fields>;
  stddev_pop?: Maybe<Typename_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Typename_Stddev_Samp_Fields>;
  sum?: Maybe<Typename_Sum_Fields>;
  var_pop?: Maybe<Typename_Var_Pop_Fields>;
  var_samp?: Maybe<Typename_Var_Samp_Fields>;
  variance?: Maybe<Typename_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_typename" */
export type Typename_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Typename_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_typename" */
export type Typename_Aggregate_Order_By = {
  avg?: InputMaybe<Typename_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Typename_Max_Order_By>;
  min?: InputMaybe<Typename_Min_Order_By>;
  stddev?: InputMaybe<Typename_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Typename_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Typename_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Typename_Sum_Order_By>;
  var_pop?: InputMaybe<Typename_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Typename_Var_Samp_Order_By>;
  variance?: InputMaybe<Typename_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Typename_Avg_Fields = {
  __typename?: 'typename_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_typename" */
export type Typename_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_typename". All fields are combined with a logical 'AND'. */
export type Typename_Bool_Exp = {
  _and?: InputMaybe<Array<Typename_Bool_Exp>>;
  _not?: InputMaybe<Typename_Bool_Exp>;
  _or?: InputMaybe<Array<Typename_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  type?: InputMaybe<Type_Bool_Exp>;
  type_id?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Typename_Max_Fields = {
  __typename?: 'typename_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  type_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_typename" */
export type Typename_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Typename_Min_Fields = {
  __typename?: 'typename_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  type_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_typename" */
export type Typename_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_typename". */
export type Typename_Order_By = {
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  type?: InputMaybe<Type_Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_typename" */
export enum Typename_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name',
  /** column name */
  TypeId = 'type_id'
}

/** aggregate stddev on columns */
export type Typename_Stddev_Fields = {
  __typename?: 'typename_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_typename" */
export type Typename_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Typename_Stddev_Pop_Fields = {
  __typename?: 'typename_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_typename" */
export type Typename_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Typename_Stddev_Samp_Fields = {
  __typename?: 'typename_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_typename" */
export type Typename_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Typename_Sum_Fields = {
  __typename?: 'typename_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  type_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_typename" */
export type Typename_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Typename_Var_Pop_Fields = {
  __typename?: 'typename_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_typename" */
export type Typename_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Typename_Var_Samp_Fields = {
  __typename?: 'typename_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_typename" */
export type Typename_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Typename_Variance_Fields = {
  __typename?: 'typename_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  type_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_typename" */
export type Typename_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  type_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_version" */
export type Version = {
  __typename?: 'version';
  /** An array relationship */
  encounters: Array<Encounter>;
  /** An aggregate relationship */
  encounters_aggregate: Encounter_Aggregate;
  id: Scalars['Int']['output'];
  /** An array relationship */
  locationareaencounterrates: Array<Locationareaencounterrate>;
  /** An aggregate relationship */
  locationareaencounterrates_aggregate: Locationareaencounterrate_Aggregate;
  name: Scalars['String']['output'];
  /** An array relationship */
  pokemongameindices: Array<Pokemongameindex>;
  /** An aggregate relationship */
  pokemongameindices_aggregate: Pokemongameindex_Aggregate;
  /** An array relationship */
  pokemonitems: Array<Pokemonitem>;
  /** An aggregate relationship */
  pokemonitems_aggregate: Pokemonitem_Aggregate;
  /** An array relationship */
  pokemonspeciesflavortexts: Array<Pokemonspeciesflavortext>;
  /** An aggregate relationship */
  pokemonspeciesflavortexts_aggregate: Pokemonspeciesflavortext_Aggregate;
  version_group_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  versiongroup?: Maybe<Versiongroup>;
  /** An array relationship */
  versionnames: Array<Versionname>;
  /** An aggregate relationship */
  versionnames_aggregate: Versionname_Aggregate;
};


/** columns and relationships of "pokemon_v2_version" */
export type VersionEncountersArgs = {
  distinct_on?: InputMaybe<Array<Encounter_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Encounter_Order_By>>;
  where?: InputMaybe<Encounter_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_version" */
export type VersionEncounters_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Encounter_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Encounter_Order_By>>;
  where?: InputMaybe<Encounter_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_version" */
export type VersionLocationareaencounterratesArgs = {
  distinct_on?: InputMaybe<Array<Locationareaencounterrate_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Locationareaencounterrate_Order_By>>;
  where?: InputMaybe<Locationareaencounterrate_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_version" */
export type VersionLocationareaencounterrates_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Locationareaencounterrate_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Locationareaencounterrate_Order_By>>;
  where?: InputMaybe<Locationareaencounterrate_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_version" */
export type VersionPokemongameindicesArgs = {
  distinct_on?: InputMaybe<Array<Pokemongameindex_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemongameindex_Order_By>>;
  where?: InputMaybe<Pokemongameindex_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_version" */
export type VersionPokemongameindices_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemongameindex_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemongameindex_Order_By>>;
  where?: InputMaybe<Pokemongameindex_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_version" */
export type VersionPokemonitemsArgs = {
  distinct_on?: InputMaybe<Array<Pokemonitem_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonitem_Order_By>>;
  where?: InputMaybe<Pokemonitem_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_version" */
export type VersionPokemonitems_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonitem_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonitem_Order_By>>;
  where?: InputMaybe<Pokemonitem_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_version" */
export type VersionPokemonspeciesflavortextsArgs = {
  distinct_on?: InputMaybe<Array<Pokemonspeciesflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonspeciesflavortext_Order_By>>;
  where?: InputMaybe<Pokemonspeciesflavortext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_version" */
export type VersionPokemonspeciesflavortexts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonspeciesflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonspeciesflavortext_Order_By>>;
  where?: InputMaybe<Pokemonspeciesflavortext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_version" */
export type VersionVersionnamesArgs = {
  distinct_on?: InputMaybe<Array<Versionname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Versionname_Order_By>>;
  where?: InputMaybe<Versionname_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_version" */
export type VersionVersionnames_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Versionname_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Versionname_Order_By>>;
  where?: InputMaybe<Versionname_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_version" */
export type Version_Aggregate = {
  __typename?: 'version_aggregate';
  aggregate?: Maybe<Version_Aggregate_Fields>;
  nodes: Array<Version>;
};

export type Version_Aggregate_Bool_Exp = {
  count?: InputMaybe<Version_Aggregate_Bool_Exp_Count>;
};

export type Version_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Version_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Version_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_version" */
export type Version_Aggregate_Fields = {
  __typename?: 'version_aggregate_fields';
  avg?: Maybe<Version_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Version_Max_Fields>;
  min?: Maybe<Version_Min_Fields>;
  stddev?: Maybe<Version_Stddev_Fields>;
  stddev_pop?: Maybe<Version_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Version_Stddev_Samp_Fields>;
  sum?: Maybe<Version_Sum_Fields>;
  var_pop?: Maybe<Version_Var_Pop_Fields>;
  var_samp?: Maybe<Version_Var_Samp_Fields>;
  variance?: Maybe<Version_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_version" */
export type Version_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Version_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_version" */
export type Version_Aggregate_Order_By = {
  avg?: InputMaybe<Version_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Version_Max_Order_By>;
  min?: InputMaybe<Version_Min_Order_By>;
  stddev?: InputMaybe<Version_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Version_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Version_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Version_Sum_Order_By>;
  var_pop?: InputMaybe<Version_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Version_Var_Samp_Order_By>;
  variance?: InputMaybe<Version_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Version_Avg_Fields = {
  __typename?: 'version_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_version" */
export type Version_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_version". All fields are combined with a logical 'AND'. */
export type Version_Bool_Exp = {
  _and?: InputMaybe<Array<Version_Bool_Exp>>;
  _not?: InputMaybe<Version_Bool_Exp>;
  _or?: InputMaybe<Array<Version_Bool_Exp>>;
  encounters?: InputMaybe<Encounter_Bool_Exp>;
  encounters_aggregate?: InputMaybe<Encounter_Aggregate_Bool_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  locationareaencounterrates?: InputMaybe<Locationareaencounterrate_Bool_Exp>;
  locationareaencounterrates_aggregate?: InputMaybe<Locationareaencounterrate_Aggregate_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  pokemongameindices?: InputMaybe<Pokemongameindex_Bool_Exp>;
  pokemongameindices_aggregate?: InputMaybe<Pokemongameindex_Aggregate_Bool_Exp>;
  pokemonitems?: InputMaybe<Pokemonitem_Bool_Exp>;
  pokemonitems_aggregate?: InputMaybe<Pokemonitem_Aggregate_Bool_Exp>;
  pokemonspeciesflavortexts?: InputMaybe<Pokemonspeciesflavortext_Bool_Exp>;
  pokemonspeciesflavortexts_aggregate?: InputMaybe<Pokemonspeciesflavortext_Aggregate_Bool_Exp>;
  version_group_id?: InputMaybe<Int_Comparison_Exp>;
  versiongroup?: InputMaybe<Versiongroup_Bool_Exp>;
  versionnames?: InputMaybe<Versionname_Bool_Exp>;
  versionnames_aggregate?: InputMaybe<Versionname_Aggregate_Bool_Exp>;
};

/** aggregate max on columns */
export type Version_Max_Fields = {
  __typename?: 'version_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_version" */
export type Version_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Version_Min_Fields = {
  __typename?: 'version_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_version" */
export type Version_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_version". */
export type Version_Order_By = {
  encounters_aggregate?: InputMaybe<Encounter_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  locationareaencounterrates_aggregate?: InputMaybe<Locationareaencounterrate_Aggregate_Order_By>;
  name?: InputMaybe<Order_By>;
  pokemongameindices_aggregate?: InputMaybe<Pokemongameindex_Aggregate_Order_By>;
  pokemonitems_aggregate?: InputMaybe<Pokemonitem_Aggregate_Order_By>;
  pokemonspeciesflavortexts_aggregate?: InputMaybe<Pokemonspeciesflavortext_Aggregate_Order_By>;
  version_group_id?: InputMaybe<Order_By>;
  versiongroup?: InputMaybe<Versiongroup_Order_By>;
  versionnames_aggregate?: InputMaybe<Versionname_Aggregate_Order_By>;
};

/** select columns of table "pokemon_v2_version" */
export enum Version_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  VersionGroupId = 'version_group_id'
}

/** aggregate stddev on columns */
export type Version_Stddev_Fields = {
  __typename?: 'version_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_version" */
export type Version_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Version_Stddev_Pop_Fields = {
  __typename?: 'version_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_version" */
export type Version_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Version_Stddev_Samp_Fields = {
  __typename?: 'version_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_version" */
export type Version_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Version_Sum_Fields = {
  __typename?: 'version_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_version" */
export type Version_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Version_Var_Pop_Fields = {
  __typename?: 'version_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_version" */
export type Version_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Version_Var_Samp_Fields = {
  __typename?: 'version_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_version" */
export type Version_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Version_Variance_Fields = {
  __typename?: 'version_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_version" */
export type Version_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_versiongroup" */
export type Versiongroup = {
  __typename?: 'versiongroup';
  /** An array relationship */
  abilitychanges: Array<Abilitychange>;
  /** An aggregate relationship */
  abilitychanges_aggregate: Abilitychange_Aggregate;
  /** An array relationship */
  abilityflavortexts: Array<Abilityflavortext>;
  /** An aggregate relationship */
  abilityflavortexts_aggregate: Abilityflavortext_Aggregate;
  /** An array relationship */
  encounterslots: Array<Encounterslot>;
  /** An aggregate relationship */
  encounterslots_aggregate: Encounterslot_Aggregate;
  /** An object relationship */
  generation?: Maybe<Generation>;
  generation_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  /** An array relationship */
  itemflavortexts: Array<Itemflavortext>;
  /** An aggregate relationship */
  itemflavortexts_aggregate: Itemflavortext_Aggregate;
  /** An array relationship */
  machines: Array<Machine>;
  /** An aggregate relationship */
  machines_aggregate: Machine_Aggregate;
  /** An array relationship */
  movechanges: Array<Movechange>;
  /** An aggregate relationship */
  movechanges_aggregate: Movechange_Aggregate;
  /** An array relationship */
  moveeffectchanges: Array<Moveeffectchange>;
  /** An aggregate relationship */
  moveeffectchanges_aggregate: Moveeffectchange_Aggregate;
  /** An array relationship */
  moveflavortexts: Array<Moveflavortext>;
  /** An aggregate relationship */
  moveflavortexts_aggregate: Moveflavortext_Aggregate;
  name: Scalars['String']['output'];
  order?: Maybe<Scalars['Int']['output']>;
  /** An array relationship */
  pokedexversiongroups: Array<Pokedexversiongroup>;
  /** An aggregate relationship */
  pokedexversiongroups_aggregate: Pokedexversiongroup_Aggregate;
  /** An array relationship */
  pokemonforms: Array<Pokemonform>;
  /** An aggregate relationship */
  pokemonforms_aggregate: Pokemonform_Aggregate;
  /** An array relationship */
  pokemonmoves: Array<Pokemonmove>;
  /** An aggregate relationship */
  pokemonmoves_aggregate: Pokemonmove_Aggregate;
  /** An array relationship */
  versiongroupmovelearnmethods: Array<Versiongroupmovelearnmethod>;
  /** An aggregate relationship */
  versiongroupmovelearnmethods_aggregate: Versiongroupmovelearnmethod_Aggregate;
  /** An array relationship */
  versiongroupregions: Array<Versiongroupregion>;
  /** An aggregate relationship */
  versiongroupregions_aggregate: Versiongroupregion_Aggregate;
  /** An array relationship */
  versions: Array<Version>;
  /** An aggregate relationship */
  versions_aggregate: Version_Aggregate;
};


/** columns and relationships of "pokemon_v2_versiongroup" */
export type VersiongroupAbilitychangesArgs = {
  distinct_on?: InputMaybe<Array<Abilitychange_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Abilitychange_Order_By>>;
  where?: InputMaybe<Abilitychange_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_versiongroup" */
export type VersiongroupAbilitychanges_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Abilitychange_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Abilitychange_Order_By>>;
  where?: InputMaybe<Abilitychange_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_versiongroup" */
export type VersiongroupAbilityflavortextsArgs = {
  distinct_on?: InputMaybe<Array<Abilityflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Abilityflavortext_Order_By>>;
  where?: InputMaybe<Abilityflavortext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_versiongroup" */
export type VersiongroupAbilityflavortexts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Abilityflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Abilityflavortext_Order_By>>;
  where?: InputMaybe<Abilityflavortext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_versiongroup" */
export type VersiongroupEncounterslotsArgs = {
  distinct_on?: InputMaybe<Array<Encounterslot_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Encounterslot_Order_By>>;
  where?: InputMaybe<Encounterslot_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_versiongroup" */
export type VersiongroupEncounterslots_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Encounterslot_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Encounterslot_Order_By>>;
  where?: InputMaybe<Encounterslot_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_versiongroup" */
export type VersiongroupItemflavortextsArgs = {
  distinct_on?: InputMaybe<Array<Itemflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemflavortext_Order_By>>;
  where?: InputMaybe<Itemflavortext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_versiongroup" */
export type VersiongroupItemflavortexts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Itemflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Itemflavortext_Order_By>>;
  where?: InputMaybe<Itemflavortext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_versiongroup" */
export type VersiongroupMachinesArgs = {
  distinct_on?: InputMaybe<Array<Machine_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Machine_Order_By>>;
  where?: InputMaybe<Machine_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_versiongroup" */
export type VersiongroupMachines_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Machine_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Machine_Order_By>>;
  where?: InputMaybe<Machine_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_versiongroup" */
export type VersiongroupMovechangesArgs = {
  distinct_on?: InputMaybe<Array<Movechange_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movechange_Order_By>>;
  where?: InputMaybe<Movechange_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_versiongroup" */
export type VersiongroupMovechanges_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Movechange_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Movechange_Order_By>>;
  where?: InputMaybe<Movechange_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_versiongroup" */
export type VersiongroupMoveeffectchangesArgs = {
  distinct_on?: InputMaybe<Array<Moveeffectchange_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Moveeffectchange_Order_By>>;
  where?: InputMaybe<Moveeffectchange_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_versiongroup" */
export type VersiongroupMoveeffectchanges_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Moveeffectchange_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Moveeffectchange_Order_By>>;
  where?: InputMaybe<Moveeffectchange_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_versiongroup" */
export type VersiongroupMoveflavortextsArgs = {
  distinct_on?: InputMaybe<Array<Moveflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Moveflavortext_Order_By>>;
  where?: InputMaybe<Moveflavortext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_versiongroup" */
export type VersiongroupMoveflavortexts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Moveflavortext_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Moveflavortext_Order_By>>;
  where?: InputMaybe<Moveflavortext_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_versiongroup" */
export type VersiongroupPokedexversiongroupsArgs = {
  distinct_on?: InputMaybe<Array<Pokedexversiongroup_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokedexversiongroup_Order_By>>;
  where?: InputMaybe<Pokedexversiongroup_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_versiongroup" */
export type VersiongroupPokedexversiongroups_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokedexversiongroup_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokedexversiongroup_Order_By>>;
  where?: InputMaybe<Pokedexversiongroup_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_versiongroup" */
export type VersiongroupPokemonformsArgs = {
  distinct_on?: InputMaybe<Array<Pokemonform_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonform_Order_By>>;
  where?: InputMaybe<Pokemonform_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_versiongroup" */
export type VersiongroupPokemonforms_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonform_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonform_Order_By>>;
  where?: InputMaybe<Pokemonform_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_versiongroup" */
export type VersiongroupPokemonmovesArgs = {
  distinct_on?: InputMaybe<Array<Pokemonmove_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonmove_Order_By>>;
  where?: InputMaybe<Pokemonmove_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_versiongroup" */
export type VersiongroupPokemonmoves_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Pokemonmove_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Pokemonmove_Order_By>>;
  where?: InputMaybe<Pokemonmove_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_versiongroup" */
export type VersiongroupVersiongroupmovelearnmethodsArgs = {
  distinct_on?: InputMaybe<Array<Versiongroupmovelearnmethod_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Versiongroupmovelearnmethod_Order_By>>;
  where?: InputMaybe<Versiongroupmovelearnmethod_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_versiongroup" */
export type VersiongroupVersiongroupmovelearnmethods_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Versiongroupmovelearnmethod_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Versiongroupmovelearnmethod_Order_By>>;
  where?: InputMaybe<Versiongroupmovelearnmethod_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_versiongroup" */
export type VersiongroupVersiongroupregionsArgs = {
  distinct_on?: InputMaybe<Array<Versiongroupregion_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Versiongroupregion_Order_By>>;
  where?: InputMaybe<Versiongroupregion_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_versiongroup" */
export type VersiongroupVersiongroupregions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Versiongroupregion_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Versiongroupregion_Order_By>>;
  where?: InputMaybe<Versiongroupregion_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_versiongroup" */
export type VersiongroupVersionsArgs = {
  distinct_on?: InputMaybe<Array<Version_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Version_Order_By>>;
  where?: InputMaybe<Version_Bool_Exp>;
};


/** columns and relationships of "pokemon_v2_versiongroup" */
export type VersiongroupVersions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Version_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Version_Order_By>>;
  where?: InputMaybe<Version_Bool_Exp>;
};

/** aggregated selection of "pokemon_v2_versiongroup" */
export type Versiongroup_Aggregate = {
  __typename?: 'versiongroup_aggregate';
  aggregate?: Maybe<Versiongroup_Aggregate_Fields>;
  nodes: Array<Versiongroup>;
};

export type Versiongroup_Aggregate_Bool_Exp = {
  count?: InputMaybe<Versiongroup_Aggregate_Bool_Exp_Count>;
};

export type Versiongroup_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Versiongroup_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Versiongroup_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_versiongroup" */
export type Versiongroup_Aggregate_Fields = {
  __typename?: 'versiongroup_aggregate_fields';
  avg?: Maybe<Versiongroup_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Versiongroup_Max_Fields>;
  min?: Maybe<Versiongroup_Min_Fields>;
  stddev?: Maybe<Versiongroup_Stddev_Fields>;
  stddev_pop?: Maybe<Versiongroup_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Versiongroup_Stddev_Samp_Fields>;
  sum?: Maybe<Versiongroup_Sum_Fields>;
  var_pop?: Maybe<Versiongroup_Var_Pop_Fields>;
  var_samp?: Maybe<Versiongroup_Var_Samp_Fields>;
  variance?: Maybe<Versiongroup_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_versiongroup" */
export type Versiongroup_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Versiongroup_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_versiongroup" */
export type Versiongroup_Aggregate_Order_By = {
  avg?: InputMaybe<Versiongroup_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Versiongroup_Max_Order_By>;
  min?: InputMaybe<Versiongroup_Min_Order_By>;
  stddev?: InputMaybe<Versiongroup_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Versiongroup_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Versiongroup_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Versiongroup_Sum_Order_By>;
  var_pop?: InputMaybe<Versiongroup_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Versiongroup_Var_Samp_Order_By>;
  variance?: InputMaybe<Versiongroup_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Versiongroup_Avg_Fields = {
  __typename?: 'versiongroup_avg_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_versiongroup" */
export type Versiongroup_Avg_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_versiongroup". All fields are combined with a logical 'AND'. */
export type Versiongroup_Bool_Exp = {
  _and?: InputMaybe<Array<Versiongroup_Bool_Exp>>;
  _not?: InputMaybe<Versiongroup_Bool_Exp>;
  _or?: InputMaybe<Array<Versiongroup_Bool_Exp>>;
  abilitychanges?: InputMaybe<Abilitychange_Bool_Exp>;
  abilitychanges_aggregate?: InputMaybe<Abilitychange_Aggregate_Bool_Exp>;
  abilityflavortexts?: InputMaybe<Abilityflavortext_Bool_Exp>;
  abilityflavortexts_aggregate?: InputMaybe<Abilityflavortext_Aggregate_Bool_Exp>;
  encounterslots?: InputMaybe<Encounterslot_Bool_Exp>;
  encounterslots_aggregate?: InputMaybe<Encounterslot_Aggregate_Bool_Exp>;
  generation?: InputMaybe<Generation_Bool_Exp>;
  generation_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  itemflavortexts?: InputMaybe<Itemflavortext_Bool_Exp>;
  itemflavortexts_aggregate?: InputMaybe<Itemflavortext_Aggregate_Bool_Exp>;
  machines?: InputMaybe<Machine_Bool_Exp>;
  machines_aggregate?: InputMaybe<Machine_Aggregate_Bool_Exp>;
  movechanges?: InputMaybe<Movechange_Bool_Exp>;
  movechanges_aggregate?: InputMaybe<Movechange_Aggregate_Bool_Exp>;
  moveeffectchanges?: InputMaybe<Moveeffectchange_Bool_Exp>;
  moveeffectchanges_aggregate?: InputMaybe<Moveeffectchange_Aggregate_Bool_Exp>;
  moveflavortexts?: InputMaybe<Moveflavortext_Bool_Exp>;
  moveflavortexts_aggregate?: InputMaybe<Moveflavortext_Aggregate_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  order?: InputMaybe<Int_Comparison_Exp>;
  pokedexversiongroups?: InputMaybe<Pokedexversiongroup_Bool_Exp>;
  pokedexversiongroups_aggregate?: InputMaybe<Pokedexversiongroup_Aggregate_Bool_Exp>;
  pokemonforms?: InputMaybe<Pokemonform_Bool_Exp>;
  pokemonforms_aggregate?: InputMaybe<Pokemonform_Aggregate_Bool_Exp>;
  pokemonmoves?: InputMaybe<Pokemonmove_Bool_Exp>;
  pokemonmoves_aggregate?: InputMaybe<Pokemonmove_Aggregate_Bool_Exp>;
  versiongroupmovelearnmethods?: InputMaybe<Versiongroupmovelearnmethod_Bool_Exp>;
  versiongroupmovelearnmethods_aggregate?: InputMaybe<Versiongroupmovelearnmethod_Aggregate_Bool_Exp>;
  versiongroupregions?: InputMaybe<Versiongroupregion_Bool_Exp>;
  versiongroupregions_aggregate?: InputMaybe<Versiongroupregion_Aggregate_Bool_Exp>;
  versions?: InputMaybe<Version_Bool_Exp>;
  versions_aggregate?: InputMaybe<Version_Aggregate_Bool_Exp>;
};

/** aggregate max on columns */
export type Versiongroup_Max_Fields = {
  __typename?: 'versiongroup_max_fields';
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_versiongroup" */
export type Versiongroup_Max_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Versiongroup_Min_Fields = {
  __typename?: 'versiongroup_min_fields';
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_versiongroup" */
export type Versiongroup_Min_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_versiongroup". */
export type Versiongroup_Order_By = {
  abilitychanges_aggregate?: InputMaybe<Abilitychange_Aggregate_Order_By>;
  abilityflavortexts_aggregate?: InputMaybe<Abilityflavortext_Aggregate_Order_By>;
  encounterslots_aggregate?: InputMaybe<Encounterslot_Aggregate_Order_By>;
  generation?: InputMaybe<Generation_Order_By>;
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  itemflavortexts_aggregate?: InputMaybe<Itemflavortext_Aggregate_Order_By>;
  machines_aggregate?: InputMaybe<Machine_Aggregate_Order_By>;
  movechanges_aggregate?: InputMaybe<Movechange_Aggregate_Order_By>;
  moveeffectchanges_aggregate?: InputMaybe<Moveeffectchange_Aggregate_Order_By>;
  moveflavortexts_aggregate?: InputMaybe<Moveflavortext_Aggregate_Order_By>;
  name?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  pokedexversiongroups_aggregate?: InputMaybe<Pokedexversiongroup_Aggregate_Order_By>;
  pokemonforms_aggregate?: InputMaybe<Pokemonform_Aggregate_Order_By>;
  pokemonmoves_aggregate?: InputMaybe<Pokemonmove_Aggregate_Order_By>;
  versiongroupmovelearnmethods_aggregate?: InputMaybe<Versiongroupmovelearnmethod_Aggregate_Order_By>;
  versiongroupregions_aggregate?: InputMaybe<Versiongroupregion_Aggregate_Order_By>;
  versions_aggregate?: InputMaybe<Version_Aggregate_Order_By>;
};

/** select columns of table "pokemon_v2_versiongroup" */
export enum Versiongroup_Select_Column {
  /** column name */
  GenerationId = 'generation_id',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order'
}

/** aggregate stddev on columns */
export type Versiongroup_Stddev_Fields = {
  __typename?: 'versiongroup_stddev_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_versiongroup" */
export type Versiongroup_Stddev_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Versiongroup_Stddev_Pop_Fields = {
  __typename?: 'versiongroup_stddev_pop_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_versiongroup" */
export type Versiongroup_Stddev_Pop_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Versiongroup_Stddev_Samp_Fields = {
  __typename?: 'versiongroup_stddev_samp_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_versiongroup" */
export type Versiongroup_Stddev_Samp_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Versiongroup_Sum_Fields = {
  __typename?: 'versiongroup_sum_fields';
  generation_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_versiongroup" */
export type Versiongroup_Sum_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Versiongroup_Var_Pop_Fields = {
  __typename?: 'versiongroup_var_pop_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_versiongroup" */
export type Versiongroup_Var_Pop_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Versiongroup_Var_Samp_Fields = {
  __typename?: 'versiongroup_var_samp_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_versiongroup" */
export type Versiongroup_Var_Samp_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Versiongroup_Variance_Fields = {
  __typename?: 'versiongroup_variance_fields';
  generation_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_versiongroup" */
export type Versiongroup_Variance_Order_By = {
  generation_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_versiongroupmovelearnmethod" */
export type Versiongroupmovelearnmethod = {
  __typename?: 'versiongroupmovelearnmethod';
  id: Scalars['Int']['output'];
  move_learn_method_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  movelearnmethod?: Maybe<Movelearnmethod>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  versiongroup?: Maybe<Versiongroup>;
};

/** aggregated selection of "pokemon_v2_versiongroupmovelearnmethod" */
export type Versiongroupmovelearnmethod_Aggregate = {
  __typename?: 'versiongroupmovelearnmethod_aggregate';
  aggregate?: Maybe<Versiongroupmovelearnmethod_Aggregate_Fields>;
  nodes: Array<Versiongroupmovelearnmethod>;
};

export type Versiongroupmovelearnmethod_Aggregate_Bool_Exp = {
  count?: InputMaybe<Versiongroupmovelearnmethod_Aggregate_Bool_Exp_Count>;
};

export type Versiongroupmovelearnmethod_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Versiongroupmovelearnmethod_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Versiongroupmovelearnmethod_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_versiongroupmovelearnmethod" */
export type Versiongroupmovelearnmethod_Aggregate_Fields = {
  __typename?: 'versiongroupmovelearnmethod_aggregate_fields';
  avg?: Maybe<Versiongroupmovelearnmethod_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Versiongroupmovelearnmethod_Max_Fields>;
  min?: Maybe<Versiongroupmovelearnmethod_Min_Fields>;
  stddev?: Maybe<Versiongroupmovelearnmethod_Stddev_Fields>;
  stddev_pop?: Maybe<Versiongroupmovelearnmethod_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Versiongroupmovelearnmethod_Stddev_Samp_Fields>;
  sum?: Maybe<Versiongroupmovelearnmethod_Sum_Fields>;
  var_pop?: Maybe<Versiongroupmovelearnmethod_Var_Pop_Fields>;
  var_samp?: Maybe<Versiongroupmovelearnmethod_Var_Samp_Fields>;
  variance?: Maybe<Versiongroupmovelearnmethod_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_versiongroupmovelearnmethod" */
export type Versiongroupmovelearnmethod_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Versiongroupmovelearnmethod_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_versiongroupmovelearnmethod" */
export type Versiongroupmovelearnmethod_Aggregate_Order_By = {
  avg?: InputMaybe<Versiongroupmovelearnmethod_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Versiongroupmovelearnmethod_Max_Order_By>;
  min?: InputMaybe<Versiongroupmovelearnmethod_Min_Order_By>;
  stddev?: InputMaybe<Versiongroupmovelearnmethod_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Versiongroupmovelearnmethod_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Versiongroupmovelearnmethod_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Versiongroupmovelearnmethod_Sum_Order_By>;
  var_pop?: InputMaybe<Versiongroupmovelearnmethod_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Versiongroupmovelearnmethod_Var_Samp_Order_By>;
  variance?: InputMaybe<Versiongroupmovelearnmethod_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Versiongroupmovelearnmethod_Avg_Fields = {
  __typename?: 'versiongroupmovelearnmethod_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_versiongroupmovelearnmethod" */
export type Versiongroupmovelearnmethod_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  move_learn_method_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_versiongroupmovelearnmethod". All fields are combined with a logical 'AND'. */
export type Versiongroupmovelearnmethod_Bool_Exp = {
  _and?: InputMaybe<Array<Versiongroupmovelearnmethod_Bool_Exp>>;
  _not?: InputMaybe<Versiongroupmovelearnmethod_Bool_Exp>;
  _or?: InputMaybe<Array<Versiongroupmovelearnmethod_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  move_learn_method_id?: InputMaybe<Int_Comparison_Exp>;
  movelearnmethod?: InputMaybe<Movelearnmethod_Bool_Exp>;
  version_group_id?: InputMaybe<Int_Comparison_Exp>;
  versiongroup?: InputMaybe<Versiongroup_Bool_Exp>;
};

/** aggregate max on columns */
export type Versiongroupmovelearnmethod_Max_Fields = {
  __typename?: 'versiongroupmovelearnmethod_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  move_learn_method_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_versiongroupmovelearnmethod" */
export type Versiongroupmovelearnmethod_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  move_learn_method_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Versiongroupmovelearnmethod_Min_Fields = {
  __typename?: 'versiongroupmovelearnmethod_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  move_learn_method_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_versiongroupmovelearnmethod" */
export type Versiongroupmovelearnmethod_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  move_learn_method_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_versiongroupmovelearnmethod". */
export type Versiongroupmovelearnmethod_Order_By = {
  id?: InputMaybe<Order_By>;
  move_learn_method_id?: InputMaybe<Order_By>;
  movelearnmethod?: InputMaybe<Movelearnmethod_Order_By>;
  version_group_id?: InputMaybe<Order_By>;
  versiongroup?: InputMaybe<Versiongroup_Order_By>;
};

/** select columns of table "pokemon_v2_versiongroupmovelearnmethod" */
export enum Versiongroupmovelearnmethod_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  MoveLearnMethodId = 'move_learn_method_id',
  /** column name */
  VersionGroupId = 'version_group_id'
}

/** aggregate stddev on columns */
export type Versiongroupmovelearnmethod_Stddev_Fields = {
  __typename?: 'versiongroupmovelearnmethod_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_versiongroupmovelearnmethod" */
export type Versiongroupmovelearnmethod_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  move_learn_method_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Versiongroupmovelearnmethod_Stddev_Pop_Fields = {
  __typename?: 'versiongroupmovelearnmethod_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_versiongroupmovelearnmethod" */
export type Versiongroupmovelearnmethod_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  move_learn_method_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Versiongroupmovelearnmethod_Stddev_Samp_Fields = {
  __typename?: 'versiongroupmovelearnmethod_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_versiongroupmovelearnmethod" */
export type Versiongroupmovelearnmethod_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  move_learn_method_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Versiongroupmovelearnmethod_Sum_Fields = {
  __typename?: 'versiongroupmovelearnmethod_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  move_learn_method_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_versiongroupmovelearnmethod" */
export type Versiongroupmovelearnmethod_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  move_learn_method_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Versiongroupmovelearnmethod_Var_Pop_Fields = {
  __typename?: 'versiongroupmovelearnmethod_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_versiongroupmovelearnmethod" */
export type Versiongroupmovelearnmethod_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  move_learn_method_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Versiongroupmovelearnmethod_Var_Samp_Fields = {
  __typename?: 'versiongroupmovelearnmethod_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_versiongroupmovelearnmethod" */
export type Versiongroupmovelearnmethod_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  move_learn_method_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Versiongroupmovelearnmethod_Variance_Fields = {
  __typename?: 'versiongroupmovelearnmethod_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  move_learn_method_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_versiongroupmovelearnmethod" */
export type Versiongroupmovelearnmethod_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  move_learn_method_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_versiongroupregion" */
export type Versiongroupregion = {
  __typename?: 'versiongroupregion';
  id: Scalars['Int']['output'];
  /** An object relationship */
  region?: Maybe<Region>;
  region_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  versiongroup?: Maybe<Versiongroup>;
};

/** aggregated selection of "pokemon_v2_versiongroupregion" */
export type Versiongroupregion_Aggregate = {
  __typename?: 'versiongroupregion_aggregate';
  aggregate?: Maybe<Versiongroupregion_Aggregate_Fields>;
  nodes: Array<Versiongroupregion>;
};

export type Versiongroupregion_Aggregate_Bool_Exp = {
  count?: InputMaybe<Versiongroupregion_Aggregate_Bool_Exp_Count>;
};

export type Versiongroupregion_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Versiongroupregion_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Versiongroupregion_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_versiongroupregion" */
export type Versiongroupregion_Aggregate_Fields = {
  __typename?: 'versiongroupregion_aggregate_fields';
  avg?: Maybe<Versiongroupregion_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Versiongroupregion_Max_Fields>;
  min?: Maybe<Versiongroupregion_Min_Fields>;
  stddev?: Maybe<Versiongroupregion_Stddev_Fields>;
  stddev_pop?: Maybe<Versiongroupregion_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Versiongroupregion_Stddev_Samp_Fields>;
  sum?: Maybe<Versiongroupregion_Sum_Fields>;
  var_pop?: Maybe<Versiongroupregion_Var_Pop_Fields>;
  var_samp?: Maybe<Versiongroupregion_Var_Samp_Fields>;
  variance?: Maybe<Versiongroupregion_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_versiongroupregion" */
export type Versiongroupregion_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Versiongroupregion_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_versiongroupregion" */
export type Versiongroupregion_Aggregate_Order_By = {
  avg?: InputMaybe<Versiongroupregion_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Versiongroupregion_Max_Order_By>;
  min?: InputMaybe<Versiongroupregion_Min_Order_By>;
  stddev?: InputMaybe<Versiongroupregion_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Versiongroupregion_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Versiongroupregion_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Versiongroupregion_Sum_Order_By>;
  var_pop?: InputMaybe<Versiongroupregion_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Versiongroupregion_Var_Samp_Order_By>;
  variance?: InputMaybe<Versiongroupregion_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Versiongroupregion_Avg_Fields = {
  __typename?: 'versiongroupregion_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_versiongroupregion" */
export type Versiongroupregion_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_versiongroupregion". All fields are combined with a logical 'AND'. */
export type Versiongroupregion_Bool_Exp = {
  _and?: InputMaybe<Array<Versiongroupregion_Bool_Exp>>;
  _not?: InputMaybe<Versiongroupregion_Bool_Exp>;
  _or?: InputMaybe<Array<Versiongroupregion_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  region?: InputMaybe<Region_Bool_Exp>;
  region_id?: InputMaybe<Int_Comparison_Exp>;
  version_group_id?: InputMaybe<Int_Comparison_Exp>;
  versiongroup?: InputMaybe<Versiongroup_Bool_Exp>;
};

/** aggregate max on columns */
export type Versiongroupregion_Max_Fields = {
  __typename?: 'versiongroupregion_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  region_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_versiongroupregion" */
export type Versiongroupregion_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Versiongroupregion_Min_Fields = {
  __typename?: 'versiongroupregion_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  region_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_versiongroupregion" */
export type Versiongroupregion_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_versiongroupregion". */
export type Versiongroupregion_Order_By = {
  id?: InputMaybe<Order_By>;
  region?: InputMaybe<Region_Order_By>;
  region_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
  versiongroup?: InputMaybe<Versiongroup_Order_By>;
};

/** select columns of table "pokemon_v2_versiongroupregion" */
export enum Versiongroupregion_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  RegionId = 'region_id',
  /** column name */
  VersionGroupId = 'version_group_id'
}

/** aggregate stddev on columns */
export type Versiongroupregion_Stddev_Fields = {
  __typename?: 'versiongroupregion_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_versiongroupregion" */
export type Versiongroupregion_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Versiongroupregion_Stddev_Pop_Fields = {
  __typename?: 'versiongroupregion_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_versiongroupregion" */
export type Versiongroupregion_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Versiongroupregion_Stddev_Samp_Fields = {
  __typename?: 'versiongroupregion_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_versiongroupregion" */
export type Versiongroupregion_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Versiongroupregion_Sum_Fields = {
  __typename?: 'versiongroupregion_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  region_id?: Maybe<Scalars['Int']['output']>;
  version_group_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_versiongroupregion" */
export type Versiongroupregion_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Versiongroupregion_Var_Pop_Fields = {
  __typename?: 'versiongroupregion_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_versiongroupregion" */
export type Versiongroupregion_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Versiongroupregion_Var_Samp_Fields = {
  __typename?: 'versiongroupregion_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_versiongroupregion" */
export type Versiongroupregion_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Versiongroupregion_Variance_Fields = {
  __typename?: 'versiongroupregion_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  region_id?: Maybe<Scalars['Float']['output']>;
  version_group_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_versiongroupregion" */
export type Versiongroupregion_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  region_id?: InputMaybe<Order_By>;
  version_group_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "pokemon_v2_versionname" */
export type Versionname = {
  __typename?: 'versionname';
  id: Scalars['Int']['output'];
  /** An object relationship */
  language?: Maybe<Language>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
  /** An object relationship */
  version?: Maybe<Version>;
  version_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "pokemon_v2_versionname" */
export type Versionname_Aggregate = {
  __typename?: 'versionname_aggregate';
  aggregate?: Maybe<Versionname_Aggregate_Fields>;
  nodes: Array<Versionname>;
};

export type Versionname_Aggregate_Bool_Exp = {
  count?: InputMaybe<Versionname_Aggregate_Bool_Exp_Count>;
};

export type Versionname_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Versionname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Versionname_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "pokemon_v2_versionname" */
export type Versionname_Aggregate_Fields = {
  __typename?: 'versionname_aggregate_fields';
  avg?: Maybe<Versionname_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Versionname_Max_Fields>;
  min?: Maybe<Versionname_Min_Fields>;
  stddev?: Maybe<Versionname_Stddev_Fields>;
  stddev_pop?: Maybe<Versionname_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Versionname_Stddev_Samp_Fields>;
  sum?: Maybe<Versionname_Sum_Fields>;
  var_pop?: Maybe<Versionname_Var_Pop_Fields>;
  var_samp?: Maybe<Versionname_Var_Samp_Fields>;
  variance?: Maybe<Versionname_Variance_Fields>;
};


/** aggregate fields of "pokemon_v2_versionname" */
export type Versionname_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Versionname_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "pokemon_v2_versionname" */
export type Versionname_Aggregate_Order_By = {
  avg?: InputMaybe<Versionname_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Versionname_Max_Order_By>;
  min?: InputMaybe<Versionname_Min_Order_By>;
  stddev?: InputMaybe<Versionname_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Versionname_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Versionname_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Versionname_Sum_Order_By>;
  var_pop?: InputMaybe<Versionname_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Versionname_Var_Samp_Order_By>;
  variance?: InputMaybe<Versionname_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Versionname_Avg_Fields = {
  __typename?: 'versionname_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "pokemon_v2_versionname" */
export type Versionname_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pokemon_v2_versionname". All fields are combined with a logical 'AND'. */
export type Versionname_Bool_Exp = {
  _and?: InputMaybe<Array<Versionname_Bool_Exp>>;
  _not?: InputMaybe<Versionname_Bool_Exp>;
  _or?: InputMaybe<Array<Versionname_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language?: InputMaybe<Language_Bool_Exp>;
  language_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  version?: InputMaybe<Version_Bool_Exp>;
  version_id?: InputMaybe<Int_Comparison_Exp>;
};

/** aggregate max on columns */
export type Versionname_Max_Fields = {
  __typename?: 'versionname_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  version_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "pokemon_v2_versionname" */
export type Versionname_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Versionname_Min_Fields = {
  __typename?: 'versionname_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  version_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "pokemon_v2_versionname" */
export type Versionname_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "pokemon_v2_versionname". */
export type Versionname_Order_By = {
  id?: InputMaybe<Order_By>;
  language?: InputMaybe<Language_Order_By>;
  language_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  version?: InputMaybe<Version_Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** select columns of table "pokemon_v2_versionname" */
export enum Versionname_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LanguageId = 'language_id',
  /** column name */
  Name = 'name',
  /** column name */
  VersionId = 'version_id'
}

/** aggregate stddev on columns */
export type Versionname_Stddev_Fields = {
  __typename?: 'versionname_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "pokemon_v2_versionname" */
export type Versionname_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Versionname_Stddev_Pop_Fields = {
  __typename?: 'versionname_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "pokemon_v2_versionname" */
export type Versionname_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Versionname_Stddev_Samp_Fields = {
  __typename?: 'versionname_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "pokemon_v2_versionname" */
export type Versionname_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Versionname_Sum_Fields = {
  __typename?: 'versionname_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
  language_id?: Maybe<Scalars['Int']['output']>;
  version_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "pokemon_v2_versionname" */
export type Versionname_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Versionname_Var_Pop_Fields = {
  __typename?: 'versionname_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "pokemon_v2_versionname" */
export type Versionname_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Versionname_Var_Samp_Fields = {
  __typename?: 'versionname_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "pokemon_v2_versionname" */
export type Versionname_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Versionname_Variance_Fields = {
  __typename?: 'versionname_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  language_id?: Maybe<Scalars['Float']['output']>;
  version_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "pokemon_v2_versionname" */
export type Versionname_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  language_id?: InputMaybe<Order_By>;
  version_id?: InputMaybe<Order_By>;
};

export type GetPokemonDataQueryVariables = Exact<{ [key: string]: never; }>;


export type GetPokemonDataQuery = { __typename?: 'query_root', pokemonspeciesname: Array<{ __typename?: 'pokemonspeciesname', name: string, genus: string, pokemonspecy?: { __typename?: 'pokemonspecies', generation_id?: number | null, pokemondexnumbers: Array<{ __typename?: 'pokemondexnumber', pokedex_number: number }>, pokemons: Array<{ __typename?: 'pokemon', pokemontypes: Array<{ __typename?: 'pokemontype', type?: { __typename?: 'type', name: string } | null }> }> } | null }> };
